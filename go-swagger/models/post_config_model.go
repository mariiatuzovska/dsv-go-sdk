// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PostConfigModel post config model
//
// swagger:model PostConfigModel
type PostConfigModel struct {

	// Encoded config string
	// Required: true
	Config *string `json:"Config"`

	// overwrite
	Overwrite bool `json:"Overwrite,omitempty"`

	// Json or yaml encoding type
	// Enum: [json yaml yml]
	Serialization *string `json:"Serialization,omitempty"`
}

// Validate validates this post config model
func (m *PostConfigModel) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateConfig(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSerialization(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PostConfigModel) validateConfig(formats strfmt.Registry) error {

	if err := validate.Required("Config", "body", m.Config); err != nil {
		return err
	}

	return nil
}

var postConfigModelTypeSerializationPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["json","yaml","yml"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		postConfigModelTypeSerializationPropEnum = append(postConfigModelTypeSerializationPropEnum, v)
	}
}

const (

	// PostConfigModelSerializationJSON captures enum value "json"
	PostConfigModelSerializationJSON string = "json"

	// PostConfigModelSerializationYaml captures enum value "yaml"
	PostConfigModelSerializationYaml string = "yaml"

	// PostConfigModelSerializationYml captures enum value "yml"
	PostConfigModelSerializationYml string = "yml"
)

// prop value enum
func (m *PostConfigModel) validateSerializationEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, postConfigModelTypeSerializationPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *PostConfigModel) validateSerialization(formats strfmt.Registry) error {
	if swag.IsZero(m.Serialization) { // not required
		return nil
	}

	// value enum
	if err := m.validateSerializationEnum("Serialization", "body", *m.Serialization); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this post config model based on context it is used
func (m *PostConfigModel) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PostConfigModel) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PostConfigModel) UnmarshalBinary(b []byte) error {
	var res PostConfigModel
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
