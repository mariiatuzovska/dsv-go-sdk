// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ClientCredentials ClientCredentials are used in the client_credentials authentication flow
//
// swagger:model ClientCredentials
type ClientCredentials struct {

	// Url already used or not
	Accessed string `json:"accessed,omitempty"`

	// Unique uuid of client credentials
	ClientID string `json:"clientId,omitempty"`

	// Secret key returned on create
	ClientSecret string `json:"clientSecret,omitempty"`

	// Created date
	Created string `json:"created,omitempty"`

	// Who created
	CreatedBy string `json:"createdBy,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// ExpiredAt expiration time
	ExpiredAt string `json:"expiredAt,omitempty"`

	// the id for this item
	ID string `json:"id,omitempty"`

	// Assigned role for determining access
	Role string `json:"role,omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// TTL expiration in seconds
	TTL int64 `json:"TTL,omitempty"`

	// If Url requested
	URL bool `json:"url,omitempty"`

	// Url expiration time
	URLExpires string `json:"urlExpires,omitempty"`

	// URL Path
	URLPath string `json:"urlPath,omitempty"`

	// Url expiration in seconds
	URLTTL int64 `json:"urlTTL,omitempty"`

	// used count
	UsedCount int64 `json:"usedCount,omitempty"`

	// Uses  the number of times the client credential can be read.  if set to 0, it can be used infinitely.  default is 0.
	UsesLimit int64 `json:"usesLimit,omitempty"`
}

// Validate validates this client credentials
func (m *ClientCredentials) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this client credentials based on context it is used
func (m *ClientCredentials) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ClientCredentials) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ClientCredentials) UnmarshalBinary(b []byte) error {
	var res ClientCredentials
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
