// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UserCreateModel Creation properties of a user
//
// swagger:model UserCreateModel
type UserCreateModel struct {

	// The display name of the user
	DisplayName string `json:"displayName,omitempty"`

	// External identifier, such as an AWS arn for 3rd party authentication
	ExternalID string `json:"externalId,omitempty"`

	// User's password (not required if using 3rd party auth)
	Password string `json:"password,omitempty"`

	// Provider name defined in the authentication settings section of configuration
	Provider string `json:"provider,omitempty"`

	// The name of the user
	// Required: true
	// Max Length: 100
	// Min Length: 3
	UserName *string `json:"userName"`
}

// Validate validates this user create model
func (m *UserCreateModel) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateUserName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UserCreateModel) validateUserName(formats strfmt.Registry) error {

	if err := validate.Required("userName", "body", m.UserName); err != nil {
		return err
	}

	if err := validate.MinLength("userName", "body", *m.UserName, 3); err != nil {
		return err
	}

	if err := validate.MaxLength("userName", "body", *m.UserName, 100); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this user create model based on context it is used
func (m *UserCreateModel) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UserCreateModel) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UserCreateModel) UnmarshalBinary(b []byte) error {
	var res UserCreateModel
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
