// Code generated by go-swagger; DO NOT EDIT.

package eaa_s_auto

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mariiatuzovska/dsv-go-sdk/go-swagger/models"
)

// RotationRequestReader is a Reader for the RotationRequest structure.
type RotationRequestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RotationRequestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewRotationRequestCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRotationRequestBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRotationRequestUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRotationRequestForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRotationRequestInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRotationRequestCreated creates a RotationRequestCreated with default headers values
func NewRotationRequestCreated() *RotationRequestCreated {
	return &RotationRequestCreated{}
}

/* RotationRequestCreated describes a response with status code 201, with default header values.

no error
*/
type RotationRequestCreated struct {
	Payload *models.EncryptionResponse
}

// IsSuccess returns true when this rotation request created response has a 2xx status code
func (o *RotationRequestCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this rotation request created response has a 3xx status code
func (o *RotationRequestCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this rotation request created response has a 4xx status code
func (o *RotationRequestCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this rotation request created response has a 5xx status code
func (o *RotationRequestCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this rotation request created response a status code equal to that given
func (o *RotationRequestCreated) IsCode(code int) bool {
	return code == 201
}

func (o *RotationRequestCreated) Error() string {
	return fmt.Sprintf("[POST /crypto/rotate][%d] rotationRequestCreated  %+v", 201, o.Payload)
}

func (o *RotationRequestCreated) String() string {
	return fmt.Sprintf("[POST /crypto/rotate][%d] rotationRequestCreated  %+v", 201, o.Payload)
}

func (o *RotationRequestCreated) GetPayload() *models.EncryptionResponse {
	return o.Payload
}

func (o *RotationRequestCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EncryptionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRotationRequestBadRequest creates a RotationRequestBadRequest with default headers values
func NewRotationRequestBadRequest() *RotationRequestBadRequest {
	return &RotationRequestBadRequest{}
}

/* RotationRequestBadRequest describes a response with status code 400, with default header values.

bad request
*/
type RotationRequestBadRequest struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this rotation request bad request response has a 2xx status code
func (o *RotationRequestBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this rotation request bad request response has a 3xx status code
func (o *RotationRequestBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this rotation request bad request response has a 4xx status code
func (o *RotationRequestBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this rotation request bad request response has a 5xx status code
func (o *RotationRequestBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this rotation request bad request response a status code equal to that given
func (o *RotationRequestBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *RotationRequestBadRequest) Error() string {
	return fmt.Sprintf("[POST /crypto/rotate][%d] rotationRequestBadRequest  %+v", 400, o.Payload)
}

func (o *RotationRequestBadRequest) String() string {
	return fmt.Sprintf("[POST /crypto/rotate][%d] rotationRequestBadRequest  %+v", 400, o.Payload)
}

func (o *RotationRequestBadRequest) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *RotationRequestBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRotationRequestUnauthorized creates a RotationRequestUnauthorized with default headers values
func NewRotationRequestUnauthorized() *RotationRequestUnauthorized {
	return &RotationRequestUnauthorized{}
}

/* RotationRequestUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type RotationRequestUnauthorized struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this rotation request unauthorized response has a 2xx status code
func (o *RotationRequestUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this rotation request unauthorized response has a 3xx status code
func (o *RotationRequestUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this rotation request unauthorized response has a 4xx status code
func (o *RotationRequestUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this rotation request unauthorized response has a 5xx status code
func (o *RotationRequestUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this rotation request unauthorized response a status code equal to that given
func (o *RotationRequestUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *RotationRequestUnauthorized) Error() string {
	return fmt.Sprintf("[POST /crypto/rotate][%d] rotationRequestUnauthorized  %+v", 401, o.Payload)
}

func (o *RotationRequestUnauthorized) String() string {
	return fmt.Sprintf("[POST /crypto/rotate][%d] rotationRequestUnauthorized  %+v", 401, o.Payload)
}

func (o *RotationRequestUnauthorized) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *RotationRequestUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRotationRequestForbidden creates a RotationRequestForbidden with default headers values
func NewRotationRequestForbidden() *RotationRequestForbidden {
	return &RotationRequestForbidden{}
}

/* RotationRequestForbidden describes a response with status code 403, with default header values.

forbidden
*/
type RotationRequestForbidden struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this rotation request forbidden response has a 2xx status code
func (o *RotationRequestForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this rotation request forbidden response has a 3xx status code
func (o *RotationRequestForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this rotation request forbidden response has a 4xx status code
func (o *RotationRequestForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this rotation request forbidden response has a 5xx status code
func (o *RotationRequestForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this rotation request forbidden response a status code equal to that given
func (o *RotationRequestForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *RotationRequestForbidden) Error() string {
	return fmt.Sprintf("[POST /crypto/rotate][%d] rotationRequestForbidden  %+v", 403, o.Payload)
}

func (o *RotationRequestForbidden) String() string {
	return fmt.Sprintf("[POST /crypto/rotate][%d] rotationRequestForbidden  %+v", 403, o.Payload)
}

func (o *RotationRequestForbidden) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *RotationRequestForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRotationRequestInternalServerError creates a RotationRequestInternalServerError with default headers values
func NewRotationRequestInternalServerError() *RotationRequestInternalServerError {
	return &RotationRequestInternalServerError{}
}

/* RotationRequestInternalServerError describes a response with status code 500, with default header values.

server error
*/
type RotationRequestInternalServerError struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this rotation request internal server error response has a 2xx status code
func (o *RotationRequestInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this rotation request internal server error response has a 3xx status code
func (o *RotationRequestInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this rotation request internal server error response has a 4xx status code
func (o *RotationRequestInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this rotation request internal server error response has a 5xx status code
func (o *RotationRequestInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this rotation request internal server error response a status code equal to that given
func (o *RotationRequestInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *RotationRequestInternalServerError) Error() string {
	return fmt.Sprintf("[POST /crypto/rotate][%d] rotationRequestInternalServerError  %+v", 500, o.Payload)
}

func (o *RotationRequestInternalServerError) String() string {
	return fmt.Sprintf("[POST /crypto/rotate][%d] rotationRequestInternalServerError  %+v", 500, o.Payload)
}

func (o *RotationRequestInternalServerError) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *RotationRequestInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
