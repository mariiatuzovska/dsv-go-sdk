// Code generated by go-swagger; DO NOT EDIT.

package eaa_s_auto

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mariiatuzovska/dsv-go-sdk/go-swagger/models"
)

// GetKeyMetadataReader is a Reader for the GetKeyMetadata structure.
type GetKeyMetadataReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKeyMetadataReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetKeyMetadataOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetKeyMetadataBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetKeyMetadataUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetKeyMetadataForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetKeyMetadataInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetKeyMetadataOK creates a GetKeyMetadataOK with default headers values
func NewGetKeyMetadataOK() *GetKeyMetadataOK {
	return &GetKeyMetadataOK{}
}

/* GetKeyMetadataOK describes a response with status code 200, with default header values.

no error
*/
type GetKeyMetadataOK struct {
	Payload *models.AutoKeyResponse
}

// IsSuccess returns true when this get key metadata o k response has a 2xx status code
func (o *GetKeyMetadataOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get key metadata o k response has a 3xx status code
func (o *GetKeyMetadataOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get key metadata o k response has a 4xx status code
func (o *GetKeyMetadataOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get key metadata o k response has a 5xx status code
func (o *GetKeyMetadataOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get key metadata o k response a status code equal to that given
func (o *GetKeyMetadataOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetKeyMetadataOK) Error() string {
	return fmt.Sprintf("[GET /crypto/key/{path}][%d] getKeyMetadataOK  %+v", 200, o.Payload)
}

func (o *GetKeyMetadataOK) String() string {
	return fmt.Sprintf("[GET /crypto/key/{path}][%d] getKeyMetadataOK  %+v", 200, o.Payload)
}

func (o *GetKeyMetadataOK) GetPayload() *models.AutoKeyResponse {
	return o.Payload
}

func (o *GetKeyMetadataOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AutoKeyResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKeyMetadataBadRequest creates a GetKeyMetadataBadRequest with default headers values
func NewGetKeyMetadataBadRequest() *GetKeyMetadataBadRequest {
	return &GetKeyMetadataBadRequest{}
}

/* GetKeyMetadataBadRequest describes a response with status code 400, with default header values.

bad request
*/
type GetKeyMetadataBadRequest struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this get key metadata bad request response has a 2xx status code
func (o *GetKeyMetadataBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get key metadata bad request response has a 3xx status code
func (o *GetKeyMetadataBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get key metadata bad request response has a 4xx status code
func (o *GetKeyMetadataBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get key metadata bad request response has a 5xx status code
func (o *GetKeyMetadataBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get key metadata bad request response a status code equal to that given
func (o *GetKeyMetadataBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetKeyMetadataBadRequest) Error() string {
	return fmt.Sprintf("[GET /crypto/key/{path}][%d] getKeyMetadataBadRequest  %+v", 400, o.Payload)
}

func (o *GetKeyMetadataBadRequest) String() string {
	return fmt.Sprintf("[GET /crypto/key/{path}][%d] getKeyMetadataBadRequest  %+v", 400, o.Payload)
}

func (o *GetKeyMetadataBadRequest) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *GetKeyMetadataBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKeyMetadataUnauthorized creates a GetKeyMetadataUnauthorized with default headers values
func NewGetKeyMetadataUnauthorized() *GetKeyMetadataUnauthorized {
	return &GetKeyMetadataUnauthorized{}
}

/* GetKeyMetadataUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type GetKeyMetadataUnauthorized struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this get key metadata unauthorized response has a 2xx status code
func (o *GetKeyMetadataUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get key metadata unauthorized response has a 3xx status code
func (o *GetKeyMetadataUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get key metadata unauthorized response has a 4xx status code
func (o *GetKeyMetadataUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get key metadata unauthorized response has a 5xx status code
func (o *GetKeyMetadataUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get key metadata unauthorized response a status code equal to that given
func (o *GetKeyMetadataUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetKeyMetadataUnauthorized) Error() string {
	return fmt.Sprintf("[GET /crypto/key/{path}][%d] getKeyMetadataUnauthorized  %+v", 401, o.Payload)
}

func (o *GetKeyMetadataUnauthorized) String() string {
	return fmt.Sprintf("[GET /crypto/key/{path}][%d] getKeyMetadataUnauthorized  %+v", 401, o.Payload)
}

func (o *GetKeyMetadataUnauthorized) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *GetKeyMetadataUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKeyMetadataForbidden creates a GetKeyMetadataForbidden with default headers values
func NewGetKeyMetadataForbidden() *GetKeyMetadataForbidden {
	return &GetKeyMetadataForbidden{}
}

/* GetKeyMetadataForbidden describes a response with status code 403, with default header values.

forbidden
*/
type GetKeyMetadataForbidden struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this get key metadata forbidden response has a 2xx status code
func (o *GetKeyMetadataForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get key metadata forbidden response has a 3xx status code
func (o *GetKeyMetadataForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get key metadata forbidden response has a 4xx status code
func (o *GetKeyMetadataForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get key metadata forbidden response has a 5xx status code
func (o *GetKeyMetadataForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get key metadata forbidden response a status code equal to that given
func (o *GetKeyMetadataForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetKeyMetadataForbidden) Error() string {
	return fmt.Sprintf("[GET /crypto/key/{path}][%d] getKeyMetadataForbidden  %+v", 403, o.Payload)
}

func (o *GetKeyMetadataForbidden) String() string {
	return fmt.Sprintf("[GET /crypto/key/{path}][%d] getKeyMetadataForbidden  %+v", 403, o.Payload)
}

func (o *GetKeyMetadataForbidden) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *GetKeyMetadataForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKeyMetadataInternalServerError creates a GetKeyMetadataInternalServerError with default headers values
func NewGetKeyMetadataInternalServerError() *GetKeyMetadataInternalServerError {
	return &GetKeyMetadataInternalServerError{}
}

/* GetKeyMetadataInternalServerError describes a response with status code 500, with default header values.

server error
*/
type GetKeyMetadataInternalServerError struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this get key metadata internal server error response has a 2xx status code
func (o *GetKeyMetadataInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get key metadata internal server error response has a 3xx status code
func (o *GetKeyMetadataInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get key metadata internal server error response has a 4xx status code
func (o *GetKeyMetadataInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get key metadata internal server error response has a 5xx status code
func (o *GetKeyMetadataInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get key metadata internal server error response a status code equal to that given
func (o *GetKeyMetadataInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetKeyMetadataInternalServerError) Error() string {
	return fmt.Sprintf("[GET /crypto/key/{path}][%d] getKeyMetadataInternalServerError  %+v", 500, o.Payload)
}

func (o *GetKeyMetadataInternalServerError) String() string {
	return fmt.Sprintf("[GET /crypto/key/{path}][%d] getKeyMetadataInternalServerError  %+v", 500, o.Payload)
}

func (o *GetKeyMetadataInternalServerError) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *GetKeyMetadataInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
