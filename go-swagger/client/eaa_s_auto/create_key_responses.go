// Code generated by go-swagger; DO NOT EDIT.

package eaa_s_auto

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mariiatuzovska/dsv-go-sdk/go-swagger/models"
)

// CreateKeyReader is a Reader for the CreateKey structure.
type CreateKeyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateKeyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateKeyCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateKeyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateKeyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateKeyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateKeyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateKeyCreated creates a CreateKeyCreated with default headers values
func NewCreateKeyCreated() *CreateKeyCreated {
	return &CreateKeyCreated{}
}

/* CreateKeyCreated describes a response with status code 201, with default header values.

no error
*/
type CreateKeyCreated struct {
	Payload *models.AutoKeyResponse
}

// IsSuccess returns true when this create key created response has a 2xx status code
func (o *CreateKeyCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create key created response has a 3xx status code
func (o *CreateKeyCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create key created response has a 4xx status code
func (o *CreateKeyCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create key created response has a 5xx status code
func (o *CreateKeyCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create key created response a status code equal to that given
func (o *CreateKeyCreated) IsCode(code int) bool {
	return code == 201
}

func (o *CreateKeyCreated) Error() string {
	return fmt.Sprintf("[POST /crypto/key/{path}][%d] createKeyCreated  %+v", 201, o.Payload)
}

func (o *CreateKeyCreated) String() string {
	return fmt.Sprintf("[POST /crypto/key/{path}][%d] createKeyCreated  %+v", 201, o.Payload)
}

func (o *CreateKeyCreated) GetPayload() *models.AutoKeyResponse {
	return o.Payload
}

func (o *CreateKeyCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AutoKeyResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateKeyBadRequest creates a CreateKeyBadRequest with default headers values
func NewCreateKeyBadRequest() *CreateKeyBadRequest {
	return &CreateKeyBadRequest{}
}

/* CreateKeyBadRequest describes a response with status code 400, with default header values.

bad request
*/
type CreateKeyBadRequest struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this create key bad request response has a 2xx status code
func (o *CreateKeyBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create key bad request response has a 3xx status code
func (o *CreateKeyBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create key bad request response has a 4xx status code
func (o *CreateKeyBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create key bad request response has a 5xx status code
func (o *CreateKeyBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create key bad request response a status code equal to that given
func (o *CreateKeyBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CreateKeyBadRequest) Error() string {
	return fmt.Sprintf("[POST /crypto/key/{path}][%d] createKeyBadRequest  %+v", 400, o.Payload)
}

func (o *CreateKeyBadRequest) String() string {
	return fmt.Sprintf("[POST /crypto/key/{path}][%d] createKeyBadRequest  %+v", 400, o.Payload)
}

func (o *CreateKeyBadRequest) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *CreateKeyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateKeyUnauthorized creates a CreateKeyUnauthorized with default headers values
func NewCreateKeyUnauthorized() *CreateKeyUnauthorized {
	return &CreateKeyUnauthorized{}
}

/* CreateKeyUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type CreateKeyUnauthorized struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this create key unauthorized response has a 2xx status code
func (o *CreateKeyUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create key unauthorized response has a 3xx status code
func (o *CreateKeyUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create key unauthorized response has a 4xx status code
func (o *CreateKeyUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create key unauthorized response has a 5xx status code
func (o *CreateKeyUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create key unauthorized response a status code equal to that given
func (o *CreateKeyUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CreateKeyUnauthorized) Error() string {
	return fmt.Sprintf("[POST /crypto/key/{path}][%d] createKeyUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateKeyUnauthorized) String() string {
	return fmt.Sprintf("[POST /crypto/key/{path}][%d] createKeyUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateKeyUnauthorized) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *CreateKeyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateKeyForbidden creates a CreateKeyForbidden with default headers values
func NewCreateKeyForbidden() *CreateKeyForbidden {
	return &CreateKeyForbidden{}
}

/* CreateKeyForbidden describes a response with status code 403, with default header values.

forbidden
*/
type CreateKeyForbidden struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this create key forbidden response has a 2xx status code
func (o *CreateKeyForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create key forbidden response has a 3xx status code
func (o *CreateKeyForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create key forbidden response has a 4xx status code
func (o *CreateKeyForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create key forbidden response has a 5xx status code
func (o *CreateKeyForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create key forbidden response a status code equal to that given
func (o *CreateKeyForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CreateKeyForbidden) Error() string {
	return fmt.Sprintf("[POST /crypto/key/{path}][%d] createKeyForbidden  %+v", 403, o.Payload)
}

func (o *CreateKeyForbidden) String() string {
	return fmt.Sprintf("[POST /crypto/key/{path}][%d] createKeyForbidden  %+v", 403, o.Payload)
}

func (o *CreateKeyForbidden) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *CreateKeyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateKeyInternalServerError creates a CreateKeyInternalServerError with default headers values
func NewCreateKeyInternalServerError() *CreateKeyInternalServerError {
	return &CreateKeyInternalServerError{}
}

/* CreateKeyInternalServerError describes a response with status code 500, with default header values.

server error
*/
type CreateKeyInternalServerError struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this create key internal server error response has a 2xx status code
func (o *CreateKeyInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create key internal server error response has a 3xx status code
func (o *CreateKeyInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create key internal server error response has a 4xx status code
func (o *CreateKeyInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create key internal server error response has a 5xx status code
func (o *CreateKeyInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create key internal server error response a status code equal to that given
func (o *CreateKeyInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CreateKeyInternalServerError) Error() string {
	return fmt.Sprintf("[POST /crypto/key/{path}][%d] createKeyInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateKeyInternalServerError) String() string {
	return fmt.Sprintf("[POST /crypto/key/{path}][%d] createKeyInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateKeyInternalServerError) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *CreateKeyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
