// Code generated by go-swagger; DO NOT EDIT.

package settings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mariiatuzovska/dsv-go-sdk/go-swagger/models"
)

// RestoreAuthSettingsReader is a Reader for the RestoreAuthSettings structure.
type RestoreAuthSettingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RestoreAuthSettingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRestoreAuthSettingsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRestoreAuthSettingsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRestoreAuthSettingsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRestoreAuthSettingsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRestoreAuthSettingsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRestoreAuthSettingsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRestoreAuthSettingsOK creates a RestoreAuthSettingsOK with default headers values
func NewRestoreAuthSettingsOK() *RestoreAuthSettingsOK {
	return &RestoreAuthSettingsOK{}
}

/* RestoreAuthSettingsOK describes a response with status code 200, with default header values.

no error
*/
type RestoreAuthSettingsOK struct {
}

// IsSuccess returns true when this restore auth settings o k response has a 2xx status code
func (o *RestoreAuthSettingsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this restore auth settings o k response has a 3xx status code
func (o *RestoreAuthSettingsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore auth settings o k response has a 4xx status code
func (o *RestoreAuthSettingsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this restore auth settings o k response has a 5xx status code
func (o *RestoreAuthSettingsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this restore auth settings o k response a status code equal to that given
func (o *RestoreAuthSettingsOK) IsCode(code int) bool {
	return code == 200
}

func (o *RestoreAuthSettingsOK) Error() string {
	return fmt.Sprintf("[GET /config/auth/{name}/restore][%d] restoreAuthSettingsOK ", 200)
}

func (o *RestoreAuthSettingsOK) String() string {
	return fmt.Sprintf("[GET /config/auth/{name}/restore][%d] restoreAuthSettingsOK ", 200)
}

func (o *RestoreAuthSettingsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRestoreAuthSettingsBadRequest creates a RestoreAuthSettingsBadRequest with default headers values
func NewRestoreAuthSettingsBadRequest() *RestoreAuthSettingsBadRequest {
	return &RestoreAuthSettingsBadRequest{}
}

/* RestoreAuthSettingsBadRequest describes a response with status code 400, with default header values.

bad request
*/
type RestoreAuthSettingsBadRequest struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this restore auth settings bad request response has a 2xx status code
func (o *RestoreAuthSettingsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore auth settings bad request response has a 3xx status code
func (o *RestoreAuthSettingsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore auth settings bad request response has a 4xx status code
func (o *RestoreAuthSettingsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this restore auth settings bad request response has a 5xx status code
func (o *RestoreAuthSettingsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this restore auth settings bad request response a status code equal to that given
func (o *RestoreAuthSettingsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *RestoreAuthSettingsBadRequest) Error() string {
	return fmt.Sprintf("[GET /config/auth/{name}/restore][%d] restoreAuthSettingsBadRequest  %+v", 400, o.Payload)
}

func (o *RestoreAuthSettingsBadRequest) String() string {
	return fmt.Sprintf("[GET /config/auth/{name}/restore][%d] restoreAuthSettingsBadRequest  %+v", 400, o.Payload)
}

func (o *RestoreAuthSettingsBadRequest) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *RestoreAuthSettingsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestoreAuthSettingsUnauthorized creates a RestoreAuthSettingsUnauthorized with default headers values
func NewRestoreAuthSettingsUnauthorized() *RestoreAuthSettingsUnauthorized {
	return &RestoreAuthSettingsUnauthorized{}
}

/* RestoreAuthSettingsUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type RestoreAuthSettingsUnauthorized struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this restore auth settings unauthorized response has a 2xx status code
func (o *RestoreAuthSettingsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore auth settings unauthorized response has a 3xx status code
func (o *RestoreAuthSettingsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore auth settings unauthorized response has a 4xx status code
func (o *RestoreAuthSettingsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this restore auth settings unauthorized response has a 5xx status code
func (o *RestoreAuthSettingsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this restore auth settings unauthorized response a status code equal to that given
func (o *RestoreAuthSettingsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *RestoreAuthSettingsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /config/auth/{name}/restore][%d] restoreAuthSettingsUnauthorized  %+v", 401, o.Payload)
}

func (o *RestoreAuthSettingsUnauthorized) String() string {
	return fmt.Sprintf("[GET /config/auth/{name}/restore][%d] restoreAuthSettingsUnauthorized  %+v", 401, o.Payload)
}

func (o *RestoreAuthSettingsUnauthorized) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *RestoreAuthSettingsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestoreAuthSettingsForbidden creates a RestoreAuthSettingsForbidden with default headers values
func NewRestoreAuthSettingsForbidden() *RestoreAuthSettingsForbidden {
	return &RestoreAuthSettingsForbidden{}
}

/* RestoreAuthSettingsForbidden describes a response with status code 403, with default header values.

forbidden
*/
type RestoreAuthSettingsForbidden struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this restore auth settings forbidden response has a 2xx status code
func (o *RestoreAuthSettingsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore auth settings forbidden response has a 3xx status code
func (o *RestoreAuthSettingsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore auth settings forbidden response has a 4xx status code
func (o *RestoreAuthSettingsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this restore auth settings forbidden response has a 5xx status code
func (o *RestoreAuthSettingsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this restore auth settings forbidden response a status code equal to that given
func (o *RestoreAuthSettingsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *RestoreAuthSettingsForbidden) Error() string {
	return fmt.Sprintf("[GET /config/auth/{name}/restore][%d] restoreAuthSettingsForbidden  %+v", 403, o.Payload)
}

func (o *RestoreAuthSettingsForbidden) String() string {
	return fmt.Sprintf("[GET /config/auth/{name}/restore][%d] restoreAuthSettingsForbidden  %+v", 403, o.Payload)
}

func (o *RestoreAuthSettingsForbidden) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *RestoreAuthSettingsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestoreAuthSettingsNotFound creates a RestoreAuthSettingsNotFound with default headers values
func NewRestoreAuthSettingsNotFound() *RestoreAuthSettingsNotFound {
	return &RestoreAuthSettingsNotFound{}
}

/* RestoreAuthSettingsNotFound describes a response with status code 404, with default header values.

not found
*/
type RestoreAuthSettingsNotFound struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this restore auth settings not found response has a 2xx status code
func (o *RestoreAuthSettingsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore auth settings not found response has a 3xx status code
func (o *RestoreAuthSettingsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore auth settings not found response has a 4xx status code
func (o *RestoreAuthSettingsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this restore auth settings not found response has a 5xx status code
func (o *RestoreAuthSettingsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this restore auth settings not found response a status code equal to that given
func (o *RestoreAuthSettingsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *RestoreAuthSettingsNotFound) Error() string {
	return fmt.Sprintf("[GET /config/auth/{name}/restore][%d] restoreAuthSettingsNotFound  %+v", 404, o.Payload)
}

func (o *RestoreAuthSettingsNotFound) String() string {
	return fmt.Sprintf("[GET /config/auth/{name}/restore][%d] restoreAuthSettingsNotFound  %+v", 404, o.Payload)
}

func (o *RestoreAuthSettingsNotFound) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *RestoreAuthSettingsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestoreAuthSettingsInternalServerError creates a RestoreAuthSettingsInternalServerError with default headers values
func NewRestoreAuthSettingsInternalServerError() *RestoreAuthSettingsInternalServerError {
	return &RestoreAuthSettingsInternalServerError{}
}

/* RestoreAuthSettingsInternalServerError describes a response with status code 500, with default header values.

server error
*/
type RestoreAuthSettingsInternalServerError struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this restore auth settings internal server error response has a 2xx status code
func (o *RestoreAuthSettingsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore auth settings internal server error response has a 3xx status code
func (o *RestoreAuthSettingsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore auth settings internal server error response has a 4xx status code
func (o *RestoreAuthSettingsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this restore auth settings internal server error response has a 5xx status code
func (o *RestoreAuthSettingsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this restore auth settings internal server error response a status code equal to that given
func (o *RestoreAuthSettingsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *RestoreAuthSettingsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /config/auth/{name}/restore][%d] restoreAuthSettingsInternalServerError  %+v", 500, o.Payload)
}

func (o *RestoreAuthSettingsInternalServerError) String() string {
	return fmt.Sprintf("[GET /config/auth/{name}/restore][%d] restoreAuthSettingsInternalServerError  %+v", 500, o.Payload)
}

func (o *RestoreAuthSettingsInternalServerError) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *RestoreAuthSettingsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
