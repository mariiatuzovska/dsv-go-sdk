// Code generated by go-swagger; DO NOT EDIT.

package settings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mariiatuzovska/dsv-go-sdk/go-swagger/models"
)

// GetAuthSettingsReader is a Reader for the GetAuthSettings structure.
type GetAuthSettingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAuthSettingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAuthSettingsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAuthSettingsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAuthSettingsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAuthSettingsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAuthSettingsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAuthSettingsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAuthSettingsOK creates a GetAuthSettingsOK with default headers values
func NewGetAuthSettingsOK() *GetAuthSettingsOK {
	return &GetAuthSettingsOK{}
}

/* GetAuthSettingsOK describes a response with status code 200, with default header values.

no error
*/
type GetAuthSettingsOK struct {
	Payload *models.AuthenticationSettings
}

// IsSuccess returns true when this get auth settings o k response has a 2xx status code
func (o *GetAuthSettingsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get auth settings o k response has a 3xx status code
func (o *GetAuthSettingsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get auth settings o k response has a 4xx status code
func (o *GetAuthSettingsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get auth settings o k response has a 5xx status code
func (o *GetAuthSettingsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get auth settings o k response a status code equal to that given
func (o *GetAuthSettingsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetAuthSettingsOK) Error() string {
	return fmt.Sprintf("[GET /config/auth/{name}][%d] getAuthSettingsOK  %+v", 200, o.Payload)
}

func (o *GetAuthSettingsOK) String() string {
	return fmt.Sprintf("[GET /config/auth/{name}][%d] getAuthSettingsOK  %+v", 200, o.Payload)
}

func (o *GetAuthSettingsOK) GetPayload() *models.AuthenticationSettings {
	return o.Payload
}

func (o *GetAuthSettingsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthenticationSettings)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthSettingsBadRequest creates a GetAuthSettingsBadRequest with default headers values
func NewGetAuthSettingsBadRequest() *GetAuthSettingsBadRequest {
	return &GetAuthSettingsBadRequest{}
}

/* GetAuthSettingsBadRequest describes a response with status code 400, with default header values.

bad request
*/
type GetAuthSettingsBadRequest struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this get auth settings bad request response has a 2xx status code
func (o *GetAuthSettingsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get auth settings bad request response has a 3xx status code
func (o *GetAuthSettingsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get auth settings bad request response has a 4xx status code
func (o *GetAuthSettingsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get auth settings bad request response has a 5xx status code
func (o *GetAuthSettingsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get auth settings bad request response a status code equal to that given
func (o *GetAuthSettingsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetAuthSettingsBadRequest) Error() string {
	return fmt.Sprintf("[GET /config/auth/{name}][%d] getAuthSettingsBadRequest  %+v", 400, o.Payload)
}

func (o *GetAuthSettingsBadRequest) String() string {
	return fmt.Sprintf("[GET /config/auth/{name}][%d] getAuthSettingsBadRequest  %+v", 400, o.Payload)
}

func (o *GetAuthSettingsBadRequest) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *GetAuthSettingsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthSettingsUnauthorized creates a GetAuthSettingsUnauthorized with default headers values
func NewGetAuthSettingsUnauthorized() *GetAuthSettingsUnauthorized {
	return &GetAuthSettingsUnauthorized{}
}

/* GetAuthSettingsUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type GetAuthSettingsUnauthorized struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this get auth settings unauthorized response has a 2xx status code
func (o *GetAuthSettingsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get auth settings unauthorized response has a 3xx status code
func (o *GetAuthSettingsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get auth settings unauthorized response has a 4xx status code
func (o *GetAuthSettingsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get auth settings unauthorized response has a 5xx status code
func (o *GetAuthSettingsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get auth settings unauthorized response a status code equal to that given
func (o *GetAuthSettingsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetAuthSettingsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /config/auth/{name}][%d] getAuthSettingsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAuthSettingsUnauthorized) String() string {
	return fmt.Sprintf("[GET /config/auth/{name}][%d] getAuthSettingsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAuthSettingsUnauthorized) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *GetAuthSettingsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthSettingsForbidden creates a GetAuthSettingsForbidden with default headers values
func NewGetAuthSettingsForbidden() *GetAuthSettingsForbidden {
	return &GetAuthSettingsForbidden{}
}

/* GetAuthSettingsForbidden describes a response with status code 403, with default header values.

forbidden
*/
type GetAuthSettingsForbidden struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this get auth settings forbidden response has a 2xx status code
func (o *GetAuthSettingsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get auth settings forbidden response has a 3xx status code
func (o *GetAuthSettingsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get auth settings forbidden response has a 4xx status code
func (o *GetAuthSettingsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get auth settings forbidden response has a 5xx status code
func (o *GetAuthSettingsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get auth settings forbidden response a status code equal to that given
func (o *GetAuthSettingsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetAuthSettingsForbidden) Error() string {
	return fmt.Sprintf("[GET /config/auth/{name}][%d] getAuthSettingsForbidden  %+v", 403, o.Payload)
}

func (o *GetAuthSettingsForbidden) String() string {
	return fmt.Sprintf("[GET /config/auth/{name}][%d] getAuthSettingsForbidden  %+v", 403, o.Payload)
}

func (o *GetAuthSettingsForbidden) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *GetAuthSettingsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthSettingsNotFound creates a GetAuthSettingsNotFound with default headers values
func NewGetAuthSettingsNotFound() *GetAuthSettingsNotFound {
	return &GetAuthSettingsNotFound{}
}

/* GetAuthSettingsNotFound describes a response with status code 404, with default header values.

not found
*/
type GetAuthSettingsNotFound struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this get auth settings not found response has a 2xx status code
func (o *GetAuthSettingsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get auth settings not found response has a 3xx status code
func (o *GetAuthSettingsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get auth settings not found response has a 4xx status code
func (o *GetAuthSettingsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get auth settings not found response has a 5xx status code
func (o *GetAuthSettingsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get auth settings not found response a status code equal to that given
func (o *GetAuthSettingsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetAuthSettingsNotFound) Error() string {
	return fmt.Sprintf("[GET /config/auth/{name}][%d] getAuthSettingsNotFound  %+v", 404, o.Payload)
}

func (o *GetAuthSettingsNotFound) String() string {
	return fmt.Sprintf("[GET /config/auth/{name}][%d] getAuthSettingsNotFound  %+v", 404, o.Payload)
}

func (o *GetAuthSettingsNotFound) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *GetAuthSettingsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthSettingsInternalServerError creates a GetAuthSettingsInternalServerError with default headers values
func NewGetAuthSettingsInternalServerError() *GetAuthSettingsInternalServerError {
	return &GetAuthSettingsInternalServerError{}
}

/* GetAuthSettingsInternalServerError describes a response with status code 500, with default header values.

server error
*/
type GetAuthSettingsInternalServerError struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this get auth settings internal server error response has a 2xx status code
func (o *GetAuthSettingsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get auth settings internal server error response has a 3xx status code
func (o *GetAuthSettingsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get auth settings internal server error response has a 4xx status code
func (o *GetAuthSettingsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get auth settings internal server error response has a 5xx status code
func (o *GetAuthSettingsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get auth settings internal server error response a status code equal to that given
func (o *GetAuthSettingsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetAuthSettingsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /config/auth/{name}][%d] getAuthSettingsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAuthSettingsInternalServerError) String() string {
	return fmt.Sprintf("[GET /config/auth/{name}][%d] getAuthSettingsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAuthSettingsInternalServerError) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *GetAuthSettingsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
