// Code generated by go-swagger; DO NOT EDIT.

package secrets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mariiatuzovska/dsv-go-sdk/go-swagger/models"
)

// CreateSecretReader is a Reader for the CreateSecret structure.
type CreateSecretReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateSecretReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateSecretCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateSecretBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateSecretUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateSecretForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateSecretInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateSecretCreated creates a CreateSecretCreated with default headers values
func NewCreateSecretCreated() *CreateSecretCreated {
	return &CreateSecretCreated{}
}

/* CreateSecretCreated describes a response with status code 201, with default header values.

no error
*/
type CreateSecretCreated struct {
	Payload *models.ResponseModelFull
}

// IsSuccess returns true when this create secret created response has a 2xx status code
func (o *CreateSecretCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create secret created response has a 3xx status code
func (o *CreateSecretCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create secret created response has a 4xx status code
func (o *CreateSecretCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create secret created response has a 5xx status code
func (o *CreateSecretCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create secret created response a status code equal to that given
func (o *CreateSecretCreated) IsCode(code int) bool {
	return code == 201
}

func (o *CreateSecretCreated) Error() string {
	return fmt.Sprintf("[POST /secrets/{path}][%d] createSecretCreated  %+v", 201, o.Payload)
}

func (o *CreateSecretCreated) String() string {
	return fmt.Sprintf("[POST /secrets/{path}][%d] createSecretCreated  %+v", 201, o.Payload)
}

func (o *CreateSecretCreated) GetPayload() *models.ResponseModelFull {
	return o.Payload
}

func (o *CreateSecretCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseModelFull)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSecretBadRequest creates a CreateSecretBadRequest with default headers values
func NewCreateSecretBadRequest() *CreateSecretBadRequest {
	return &CreateSecretBadRequest{}
}

/* CreateSecretBadRequest describes a response with status code 400, with default header values.

bad request
*/
type CreateSecretBadRequest struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this create secret bad request response has a 2xx status code
func (o *CreateSecretBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create secret bad request response has a 3xx status code
func (o *CreateSecretBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create secret bad request response has a 4xx status code
func (o *CreateSecretBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create secret bad request response has a 5xx status code
func (o *CreateSecretBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create secret bad request response a status code equal to that given
func (o *CreateSecretBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CreateSecretBadRequest) Error() string {
	return fmt.Sprintf("[POST /secrets/{path}][%d] createSecretBadRequest  %+v", 400, o.Payload)
}

func (o *CreateSecretBadRequest) String() string {
	return fmt.Sprintf("[POST /secrets/{path}][%d] createSecretBadRequest  %+v", 400, o.Payload)
}

func (o *CreateSecretBadRequest) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *CreateSecretBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSecretUnauthorized creates a CreateSecretUnauthorized with default headers values
func NewCreateSecretUnauthorized() *CreateSecretUnauthorized {
	return &CreateSecretUnauthorized{}
}

/* CreateSecretUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type CreateSecretUnauthorized struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this create secret unauthorized response has a 2xx status code
func (o *CreateSecretUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create secret unauthorized response has a 3xx status code
func (o *CreateSecretUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create secret unauthorized response has a 4xx status code
func (o *CreateSecretUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create secret unauthorized response has a 5xx status code
func (o *CreateSecretUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create secret unauthorized response a status code equal to that given
func (o *CreateSecretUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CreateSecretUnauthorized) Error() string {
	return fmt.Sprintf("[POST /secrets/{path}][%d] createSecretUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateSecretUnauthorized) String() string {
	return fmt.Sprintf("[POST /secrets/{path}][%d] createSecretUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateSecretUnauthorized) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *CreateSecretUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSecretForbidden creates a CreateSecretForbidden with default headers values
func NewCreateSecretForbidden() *CreateSecretForbidden {
	return &CreateSecretForbidden{}
}

/* CreateSecretForbidden describes a response with status code 403, with default header values.

forbidden
*/
type CreateSecretForbidden struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this create secret forbidden response has a 2xx status code
func (o *CreateSecretForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create secret forbidden response has a 3xx status code
func (o *CreateSecretForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create secret forbidden response has a 4xx status code
func (o *CreateSecretForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create secret forbidden response has a 5xx status code
func (o *CreateSecretForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create secret forbidden response a status code equal to that given
func (o *CreateSecretForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CreateSecretForbidden) Error() string {
	return fmt.Sprintf("[POST /secrets/{path}][%d] createSecretForbidden  %+v", 403, o.Payload)
}

func (o *CreateSecretForbidden) String() string {
	return fmt.Sprintf("[POST /secrets/{path}][%d] createSecretForbidden  %+v", 403, o.Payload)
}

func (o *CreateSecretForbidden) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *CreateSecretForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSecretInternalServerError creates a CreateSecretInternalServerError with default headers values
func NewCreateSecretInternalServerError() *CreateSecretInternalServerError {
	return &CreateSecretInternalServerError{}
}

/* CreateSecretInternalServerError describes a response with status code 500, with default header values.

server error
*/
type CreateSecretInternalServerError struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this create secret internal server error response has a 2xx status code
func (o *CreateSecretInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create secret internal server error response has a 3xx status code
func (o *CreateSecretInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create secret internal server error response has a 4xx status code
func (o *CreateSecretInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create secret internal server error response has a 5xx status code
func (o *CreateSecretInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create secret internal server error response a status code equal to that given
func (o *CreateSecretInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CreateSecretInternalServerError) Error() string {
	return fmt.Sprintf("[POST /secrets/{path}][%d] createSecretInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateSecretInternalServerError) String() string {
	return fmt.Sprintf("[POST /secrets/{path}][%d] createSecretInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateSecretInternalServerError) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *CreateSecretInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
