// Code generated by go-swagger; DO NOT EDIT.

package secrets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mariiatuzovska/dsv-go-sdk/go-swagger/models"
)

// SearchSecretsReader is a Reader for the SearchSecrets structure.
type SearchSecretsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchSecretsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchSecretsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchSecretsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSearchSecretsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSearchSecretsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSearchSecretsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSearchSecretsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearchSecretsOK creates a SearchSecretsOK with default headers values
func NewSearchSecretsOK() *SearchSecretsOK {
	return &SearchSecretsOK{}
}

/* SearchSecretsOK describes a response with status code 200, with default header values.

no error
*/
type SearchSecretsOK struct {
	Payload *models.ResponseModelSearch
}

// IsSuccess returns true when this search secrets o k response has a 2xx status code
func (o *SearchSecretsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this search secrets o k response has a 3xx status code
func (o *SearchSecretsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search secrets o k response has a 4xx status code
func (o *SearchSecretsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this search secrets o k response has a 5xx status code
func (o *SearchSecretsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this search secrets o k response a status code equal to that given
func (o *SearchSecretsOK) IsCode(code int) bool {
	return code == 200
}

func (o *SearchSecretsOK) Error() string {
	return fmt.Sprintf("[GET /secrets][%d] searchSecretsOK  %+v", 200, o.Payload)
}

func (o *SearchSecretsOK) String() string {
	return fmt.Sprintf("[GET /secrets][%d] searchSecretsOK  %+v", 200, o.Payload)
}

func (o *SearchSecretsOK) GetPayload() *models.ResponseModelSearch {
	return o.Payload
}

func (o *SearchSecretsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseModelSearch)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchSecretsBadRequest creates a SearchSecretsBadRequest with default headers values
func NewSearchSecretsBadRequest() *SearchSecretsBadRequest {
	return &SearchSecretsBadRequest{}
}

/* SearchSecretsBadRequest describes a response with status code 400, with default header values.

bad request
*/
type SearchSecretsBadRequest struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this search secrets bad request response has a 2xx status code
func (o *SearchSecretsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search secrets bad request response has a 3xx status code
func (o *SearchSecretsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search secrets bad request response has a 4xx status code
func (o *SearchSecretsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this search secrets bad request response has a 5xx status code
func (o *SearchSecretsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this search secrets bad request response a status code equal to that given
func (o *SearchSecretsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *SearchSecretsBadRequest) Error() string {
	return fmt.Sprintf("[GET /secrets][%d] searchSecretsBadRequest  %+v", 400, o.Payload)
}

func (o *SearchSecretsBadRequest) String() string {
	return fmt.Sprintf("[GET /secrets][%d] searchSecretsBadRequest  %+v", 400, o.Payload)
}

func (o *SearchSecretsBadRequest) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *SearchSecretsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchSecretsUnauthorized creates a SearchSecretsUnauthorized with default headers values
func NewSearchSecretsUnauthorized() *SearchSecretsUnauthorized {
	return &SearchSecretsUnauthorized{}
}

/* SearchSecretsUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type SearchSecretsUnauthorized struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this search secrets unauthorized response has a 2xx status code
func (o *SearchSecretsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search secrets unauthorized response has a 3xx status code
func (o *SearchSecretsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search secrets unauthorized response has a 4xx status code
func (o *SearchSecretsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this search secrets unauthorized response has a 5xx status code
func (o *SearchSecretsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this search secrets unauthorized response a status code equal to that given
func (o *SearchSecretsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *SearchSecretsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /secrets][%d] searchSecretsUnauthorized  %+v", 401, o.Payload)
}

func (o *SearchSecretsUnauthorized) String() string {
	return fmt.Sprintf("[GET /secrets][%d] searchSecretsUnauthorized  %+v", 401, o.Payload)
}

func (o *SearchSecretsUnauthorized) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *SearchSecretsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchSecretsForbidden creates a SearchSecretsForbidden with default headers values
func NewSearchSecretsForbidden() *SearchSecretsForbidden {
	return &SearchSecretsForbidden{}
}

/* SearchSecretsForbidden describes a response with status code 403, with default header values.

forbidden
*/
type SearchSecretsForbidden struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this search secrets forbidden response has a 2xx status code
func (o *SearchSecretsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search secrets forbidden response has a 3xx status code
func (o *SearchSecretsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search secrets forbidden response has a 4xx status code
func (o *SearchSecretsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this search secrets forbidden response has a 5xx status code
func (o *SearchSecretsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this search secrets forbidden response a status code equal to that given
func (o *SearchSecretsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *SearchSecretsForbidden) Error() string {
	return fmt.Sprintf("[GET /secrets][%d] searchSecretsForbidden  %+v", 403, o.Payload)
}

func (o *SearchSecretsForbidden) String() string {
	return fmt.Sprintf("[GET /secrets][%d] searchSecretsForbidden  %+v", 403, o.Payload)
}

func (o *SearchSecretsForbidden) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *SearchSecretsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchSecretsNotFound creates a SearchSecretsNotFound with default headers values
func NewSearchSecretsNotFound() *SearchSecretsNotFound {
	return &SearchSecretsNotFound{}
}

/* SearchSecretsNotFound describes a response with status code 404, with default header values.

not found
*/
type SearchSecretsNotFound struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this search secrets not found response has a 2xx status code
func (o *SearchSecretsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search secrets not found response has a 3xx status code
func (o *SearchSecretsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search secrets not found response has a 4xx status code
func (o *SearchSecretsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this search secrets not found response has a 5xx status code
func (o *SearchSecretsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this search secrets not found response a status code equal to that given
func (o *SearchSecretsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *SearchSecretsNotFound) Error() string {
	return fmt.Sprintf("[GET /secrets][%d] searchSecretsNotFound  %+v", 404, o.Payload)
}

func (o *SearchSecretsNotFound) String() string {
	return fmt.Sprintf("[GET /secrets][%d] searchSecretsNotFound  %+v", 404, o.Payload)
}

func (o *SearchSecretsNotFound) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *SearchSecretsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchSecretsInternalServerError creates a SearchSecretsInternalServerError with default headers values
func NewSearchSecretsInternalServerError() *SearchSecretsInternalServerError {
	return &SearchSecretsInternalServerError{}
}

/* SearchSecretsInternalServerError describes a response with status code 500, with default header values.

server error
*/
type SearchSecretsInternalServerError struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this search secrets internal server error response has a 2xx status code
func (o *SearchSecretsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search secrets internal server error response has a 3xx status code
func (o *SearchSecretsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search secrets internal server error response has a 4xx status code
func (o *SearchSecretsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this search secrets internal server error response has a 5xx status code
func (o *SearchSecretsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this search secrets internal server error response a status code equal to that given
func (o *SearchSecretsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *SearchSecretsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /secrets][%d] searchSecretsInternalServerError  %+v", 500, o.Payload)
}

func (o *SearchSecretsInternalServerError) String() string {
	return fmt.Sprintf("[GET /secrets][%d] searchSecretsInternalServerError  %+v", 500, o.Payload)
}

func (o *SearchSecretsInternalServerError) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *SearchSecretsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
