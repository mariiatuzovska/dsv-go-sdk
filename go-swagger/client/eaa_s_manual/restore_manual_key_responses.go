// Code generated by go-swagger; DO NOT EDIT.

package eaa_s_manual

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mariiatuzovska/dsv-go-sdk/go-swagger/models"
)

// RestoreManualKeyReader is a Reader for the RestoreManualKey structure.
type RestoreManualKeyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RestoreManualKeyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewRestoreManualKeyNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRestoreManualKeyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRestoreManualKeyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRestoreManualKeyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRestoreManualKeyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRestoreManualKeyNoContent creates a RestoreManualKeyNoContent with default headers values
func NewRestoreManualKeyNoContent() *RestoreManualKeyNoContent {
	return &RestoreManualKeyNoContent{}
}

/* RestoreManualKeyNoContent describes a response with status code 204, with default header values.

no error
*/
type RestoreManualKeyNoContent struct {
}

// IsSuccess returns true when this restore manual key no content response has a 2xx status code
func (o *RestoreManualKeyNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this restore manual key no content response has a 3xx status code
func (o *RestoreManualKeyNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore manual key no content response has a 4xx status code
func (o *RestoreManualKeyNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this restore manual key no content response has a 5xx status code
func (o *RestoreManualKeyNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this restore manual key no content response a status code equal to that given
func (o *RestoreManualKeyNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *RestoreManualKeyNoContent) Error() string {
	return fmt.Sprintf("[PUT /crypto/manual/key/{path}/restore][%d] restoreManualKeyNoContent ", 204)
}

func (o *RestoreManualKeyNoContent) String() string {
	return fmt.Sprintf("[PUT /crypto/manual/key/{path}/restore][%d] restoreManualKeyNoContent ", 204)
}

func (o *RestoreManualKeyNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRestoreManualKeyBadRequest creates a RestoreManualKeyBadRequest with default headers values
func NewRestoreManualKeyBadRequest() *RestoreManualKeyBadRequest {
	return &RestoreManualKeyBadRequest{}
}

/* RestoreManualKeyBadRequest describes a response with status code 400, with default header values.

bad request
*/
type RestoreManualKeyBadRequest struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this restore manual key bad request response has a 2xx status code
func (o *RestoreManualKeyBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore manual key bad request response has a 3xx status code
func (o *RestoreManualKeyBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore manual key bad request response has a 4xx status code
func (o *RestoreManualKeyBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this restore manual key bad request response has a 5xx status code
func (o *RestoreManualKeyBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this restore manual key bad request response a status code equal to that given
func (o *RestoreManualKeyBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *RestoreManualKeyBadRequest) Error() string {
	return fmt.Sprintf("[PUT /crypto/manual/key/{path}/restore][%d] restoreManualKeyBadRequest  %+v", 400, o.Payload)
}

func (o *RestoreManualKeyBadRequest) String() string {
	return fmt.Sprintf("[PUT /crypto/manual/key/{path}/restore][%d] restoreManualKeyBadRequest  %+v", 400, o.Payload)
}

func (o *RestoreManualKeyBadRequest) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *RestoreManualKeyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestoreManualKeyUnauthorized creates a RestoreManualKeyUnauthorized with default headers values
func NewRestoreManualKeyUnauthorized() *RestoreManualKeyUnauthorized {
	return &RestoreManualKeyUnauthorized{}
}

/* RestoreManualKeyUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type RestoreManualKeyUnauthorized struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this restore manual key unauthorized response has a 2xx status code
func (o *RestoreManualKeyUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore manual key unauthorized response has a 3xx status code
func (o *RestoreManualKeyUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore manual key unauthorized response has a 4xx status code
func (o *RestoreManualKeyUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this restore manual key unauthorized response has a 5xx status code
func (o *RestoreManualKeyUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this restore manual key unauthorized response a status code equal to that given
func (o *RestoreManualKeyUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *RestoreManualKeyUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /crypto/manual/key/{path}/restore][%d] restoreManualKeyUnauthorized  %+v", 401, o.Payload)
}

func (o *RestoreManualKeyUnauthorized) String() string {
	return fmt.Sprintf("[PUT /crypto/manual/key/{path}/restore][%d] restoreManualKeyUnauthorized  %+v", 401, o.Payload)
}

func (o *RestoreManualKeyUnauthorized) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *RestoreManualKeyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestoreManualKeyForbidden creates a RestoreManualKeyForbidden with default headers values
func NewRestoreManualKeyForbidden() *RestoreManualKeyForbidden {
	return &RestoreManualKeyForbidden{}
}

/* RestoreManualKeyForbidden describes a response with status code 403, with default header values.

forbidden
*/
type RestoreManualKeyForbidden struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this restore manual key forbidden response has a 2xx status code
func (o *RestoreManualKeyForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore manual key forbidden response has a 3xx status code
func (o *RestoreManualKeyForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore manual key forbidden response has a 4xx status code
func (o *RestoreManualKeyForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this restore manual key forbidden response has a 5xx status code
func (o *RestoreManualKeyForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this restore manual key forbidden response a status code equal to that given
func (o *RestoreManualKeyForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *RestoreManualKeyForbidden) Error() string {
	return fmt.Sprintf("[PUT /crypto/manual/key/{path}/restore][%d] restoreManualKeyForbidden  %+v", 403, o.Payload)
}

func (o *RestoreManualKeyForbidden) String() string {
	return fmt.Sprintf("[PUT /crypto/manual/key/{path}/restore][%d] restoreManualKeyForbidden  %+v", 403, o.Payload)
}

func (o *RestoreManualKeyForbidden) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *RestoreManualKeyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestoreManualKeyInternalServerError creates a RestoreManualKeyInternalServerError with default headers values
func NewRestoreManualKeyInternalServerError() *RestoreManualKeyInternalServerError {
	return &RestoreManualKeyInternalServerError{}
}

/* RestoreManualKeyInternalServerError describes a response with status code 500, with default header values.

server error
*/
type RestoreManualKeyInternalServerError struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this restore manual key internal server error response has a 2xx status code
func (o *RestoreManualKeyInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore manual key internal server error response has a 3xx status code
func (o *RestoreManualKeyInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore manual key internal server error response has a 4xx status code
func (o *RestoreManualKeyInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this restore manual key internal server error response has a 5xx status code
func (o *RestoreManualKeyInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this restore manual key internal server error response a status code equal to that given
func (o *RestoreManualKeyInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *RestoreManualKeyInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /crypto/manual/key/{path}/restore][%d] restoreManualKeyInternalServerError  %+v", 500, o.Payload)
}

func (o *RestoreManualKeyInternalServerError) String() string {
	return fmt.Sprintf("[PUT /crypto/manual/key/{path}/restore][%d] restoreManualKeyInternalServerError  %+v", 500, o.Payload)
}

func (o *RestoreManualKeyInternalServerError) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *RestoreManualKeyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
