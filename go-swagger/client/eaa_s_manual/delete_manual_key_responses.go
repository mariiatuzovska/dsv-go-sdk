// Code generated by go-swagger; DO NOT EDIT.

package eaa_s_manual

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mariiatuzovska/dsv-go-sdk/go-swagger/models"
)

// DeleteManualKeyReader is a Reader for the DeleteManualKey structure.
type DeleteManualKeyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteManualKeyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteManualKeyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewDeleteManualKeyNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteManualKeyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteManualKeyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteManualKeyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteManualKeyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteManualKeyOK creates a DeleteManualKeyOK with default headers values
func NewDeleteManualKeyOK() *DeleteManualKeyOK {
	return &DeleteManualKeyOK{}
}

/* DeleteManualKeyOK describes a response with status code 200, with default header values.

no error
*/
type DeleteManualKeyOK struct {
	Payload *models.MessageResponse
}

// IsSuccess returns true when this delete manual key o k response has a 2xx status code
func (o *DeleteManualKeyOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete manual key o k response has a 3xx status code
func (o *DeleteManualKeyOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete manual key o k response has a 4xx status code
func (o *DeleteManualKeyOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete manual key o k response has a 5xx status code
func (o *DeleteManualKeyOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete manual key o k response a status code equal to that given
func (o *DeleteManualKeyOK) IsCode(code int) bool {
	return code == 200
}

func (o *DeleteManualKeyOK) Error() string {
	return fmt.Sprintf("[DELETE /crypto/manual/key/{path}][%d] deleteManualKeyOK  %+v", 200, o.Payload)
}

func (o *DeleteManualKeyOK) String() string {
	return fmt.Sprintf("[DELETE /crypto/manual/key/{path}][%d] deleteManualKeyOK  %+v", 200, o.Payload)
}

func (o *DeleteManualKeyOK) GetPayload() *models.MessageResponse {
	return o.Payload
}

func (o *DeleteManualKeyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteManualKeyNoContent creates a DeleteManualKeyNoContent with default headers values
func NewDeleteManualKeyNoContent() *DeleteManualKeyNoContent {
	return &DeleteManualKeyNoContent{}
}

/* DeleteManualKeyNoContent describes a response with status code 204, with default header values.

no error
*/
type DeleteManualKeyNoContent struct {
}

// IsSuccess returns true when this delete manual key no content response has a 2xx status code
func (o *DeleteManualKeyNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete manual key no content response has a 3xx status code
func (o *DeleteManualKeyNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete manual key no content response has a 4xx status code
func (o *DeleteManualKeyNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete manual key no content response has a 5xx status code
func (o *DeleteManualKeyNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete manual key no content response a status code equal to that given
func (o *DeleteManualKeyNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *DeleteManualKeyNoContent) Error() string {
	return fmt.Sprintf("[DELETE /crypto/manual/key/{path}][%d] deleteManualKeyNoContent ", 204)
}

func (o *DeleteManualKeyNoContent) String() string {
	return fmt.Sprintf("[DELETE /crypto/manual/key/{path}][%d] deleteManualKeyNoContent ", 204)
}

func (o *DeleteManualKeyNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteManualKeyBadRequest creates a DeleteManualKeyBadRequest with default headers values
func NewDeleteManualKeyBadRequest() *DeleteManualKeyBadRequest {
	return &DeleteManualKeyBadRequest{}
}

/* DeleteManualKeyBadRequest describes a response with status code 400, with default header values.

bad request
*/
type DeleteManualKeyBadRequest struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this delete manual key bad request response has a 2xx status code
func (o *DeleteManualKeyBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete manual key bad request response has a 3xx status code
func (o *DeleteManualKeyBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete manual key bad request response has a 4xx status code
func (o *DeleteManualKeyBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete manual key bad request response has a 5xx status code
func (o *DeleteManualKeyBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete manual key bad request response a status code equal to that given
func (o *DeleteManualKeyBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteManualKeyBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /crypto/manual/key/{path}][%d] deleteManualKeyBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteManualKeyBadRequest) String() string {
	return fmt.Sprintf("[DELETE /crypto/manual/key/{path}][%d] deleteManualKeyBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteManualKeyBadRequest) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *DeleteManualKeyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteManualKeyUnauthorized creates a DeleteManualKeyUnauthorized with default headers values
func NewDeleteManualKeyUnauthorized() *DeleteManualKeyUnauthorized {
	return &DeleteManualKeyUnauthorized{}
}

/* DeleteManualKeyUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type DeleteManualKeyUnauthorized struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this delete manual key unauthorized response has a 2xx status code
func (o *DeleteManualKeyUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete manual key unauthorized response has a 3xx status code
func (o *DeleteManualKeyUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete manual key unauthorized response has a 4xx status code
func (o *DeleteManualKeyUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete manual key unauthorized response has a 5xx status code
func (o *DeleteManualKeyUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete manual key unauthorized response a status code equal to that given
func (o *DeleteManualKeyUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteManualKeyUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /crypto/manual/key/{path}][%d] deleteManualKeyUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteManualKeyUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /crypto/manual/key/{path}][%d] deleteManualKeyUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteManualKeyUnauthorized) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *DeleteManualKeyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteManualKeyForbidden creates a DeleteManualKeyForbidden with default headers values
func NewDeleteManualKeyForbidden() *DeleteManualKeyForbidden {
	return &DeleteManualKeyForbidden{}
}

/* DeleteManualKeyForbidden describes a response with status code 403, with default header values.

forbidden
*/
type DeleteManualKeyForbidden struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this delete manual key forbidden response has a 2xx status code
func (o *DeleteManualKeyForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete manual key forbidden response has a 3xx status code
func (o *DeleteManualKeyForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete manual key forbidden response has a 4xx status code
func (o *DeleteManualKeyForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete manual key forbidden response has a 5xx status code
func (o *DeleteManualKeyForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete manual key forbidden response a status code equal to that given
func (o *DeleteManualKeyForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteManualKeyForbidden) Error() string {
	return fmt.Sprintf("[DELETE /crypto/manual/key/{path}][%d] deleteManualKeyForbidden  %+v", 403, o.Payload)
}

func (o *DeleteManualKeyForbidden) String() string {
	return fmt.Sprintf("[DELETE /crypto/manual/key/{path}][%d] deleteManualKeyForbidden  %+v", 403, o.Payload)
}

func (o *DeleteManualKeyForbidden) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *DeleteManualKeyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteManualKeyInternalServerError creates a DeleteManualKeyInternalServerError with default headers values
func NewDeleteManualKeyInternalServerError() *DeleteManualKeyInternalServerError {
	return &DeleteManualKeyInternalServerError{}
}

/* DeleteManualKeyInternalServerError describes a response with status code 500, with default header values.

server error
*/
type DeleteManualKeyInternalServerError struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this delete manual key internal server error response has a 2xx status code
func (o *DeleteManualKeyInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete manual key internal server error response has a 3xx status code
func (o *DeleteManualKeyInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete manual key internal server error response has a 4xx status code
func (o *DeleteManualKeyInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete manual key internal server error response has a 5xx status code
func (o *DeleteManualKeyInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete manual key internal server error response a status code equal to that given
func (o *DeleteManualKeyInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteManualKeyInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /crypto/manual/key/{path}][%d] deleteManualKeyInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteManualKeyInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /crypto/manual/key/{path}][%d] deleteManualKeyInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteManualKeyInternalServerError) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *DeleteManualKeyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
