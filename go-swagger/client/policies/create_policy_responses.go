// Code generated by go-swagger; DO NOT EDIT.

package policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mariiatuzovska/dsv-go-sdk/go-swagger/models"
)

// CreatePolicyReader is a Reader for the CreatePolicy structure.
type CreatePolicyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreatePolicyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreatePolicyCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreatePolicyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreatePolicyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreatePolicyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreatePolicyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreatePolicyCreated creates a CreatePolicyCreated with default headers values
func NewCreatePolicyCreated() *CreatePolicyCreated {
	return &CreatePolicyCreated{}
}

/* CreatePolicyCreated describes a response with status code 201, with default header values.

no error
*/
type CreatePolicyCreated struct {
	Payload *models.Policy
}

// IsSuccess returns true when this create policy created response has a 2xx status code
func (o *CreatePolicyCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create policy created response has a 3xx status code
func (o *CreatePolicyCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create policy created response has a 4xx status code
func (o *CreatePolicyCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create policy created response has a 5xx status code
func (o *CreatePolicyCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create policy created response a status code equal to that given
func (o *CreatePolicyCreated) IsCode(code int) bool {
	return code == 201
}

func (o *CreatePolicyCreated) Error() string {
	return fmt.Sprintf("[POST /config/policies/][%d] createPolicyCreated  %+v", 201, o.Payload)
}

func (o *CreatePolicyCreated) String() string {
	return fmt.Sprintf("[POST /config/policies/][%d] createPolicyCreated  %+v", 201, o.Payload)
}

func (o *CreatePolicyCreated) GetPayload() *models.Policy {
	return o.Payload
}

func (o *CreatePolicyCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Policy)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreatePolicyBadRequest creates a CreatePolicyBadRequest with default headers values
func NewCreatePolicyBadRequest() *CreatePolicyBadRequest {
	return &CreatePolicyBadRequest{}
}

/* CreatePolicyBadRequest describes a response with status code 400, with default header values.

bad request
*/
type CreatePolicyBadRequest struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this create policy bad request response has a 2xx status code
func (o *CreatePolicyBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create policy bad request response has a 3xx status code
func (o *CreatePolicyBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create policy bad request response has a 4xx status code
func (o *CreatePolicyBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create policy bad request response has a 5xx status code
func (o *CreatePolicyBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create policy bad request response a status code equal to that given
func (o *CreatePolicyBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CreatePolicyBadRequest) Error() string {
	return fmt.Sprintf("[POST /config/policies/][%d] createPolicyBadRequest  %+v", 400, o.Payload)
}

func (o *CreatePolicyBadRequest) String() string {
	return fmt.Sprintf("[POST /config/policies/][%d] createPolicyBadRequest  %+v", 400, o.Payload)
}

func (o *CreatePolicyBadRequest) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *CreatePolicyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreatePolicyUnauthorized creates a CreatePolicyUnauthorized with default headers values
func NewCreatePolicyUnauthorized() *CreatePolicyUnauthorized {
	return &CreatePolicyUnauthorized{}
}

/* CreatePolicyUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type CreatePolicyUnauthorized struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this create policy unauthorized response has a 2xx status code
func (o *CreatePolicyUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create policy unauthorized response has a 3xx status code
func (o *CreatePolicyUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create policy unauthorized response has a 4xx status code
func (o *CreatePolicyUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create policy unauthorized response has a 5xx status code
func (o *CreatePolicyUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create policy unauthorized response a status code equal to that given
func (o *CreatePolicyUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CreatePolicyUnauthorized) Error() string {
	return fmt.Sprintf("[POST /config/policies/][%d] createPolicyUnauthorized  %+v", 401, o.Payload)
}

func (o *CreatePolicyUnauthorized) String() string {
	return fmt.Sprintf("[POST /config/policies/][%d] createPolicyUnauthorized  %+v", 401, o.Payload)
}

func (o *CreatePolicyUnauthorized) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *CreatePolicyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreatePolicyForbidden creates a CreatePolicyForbidden with default headers values
func NewCreatePolicyForbidden() *CreatePolicyForbidden {
	return &CreatePolicyForbidden{}
}

/* CreatePolicyForbidden describes a response with status code 403, with default header values.

forbidden
*/
type CreatePolicyForbidden struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this create policy forbidden response has a 2xx status code
func (o *CreatePolicyForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create policy forbidden response has a 3xx status code
func (o *CreatePolicyForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create policy forbidden response has a 4xx status code
func (o *CreatePolicyForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create policy forbidden response has a 5xx status code
func (o *CreatePolicyForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create policy forbidden response a status code equal to that given
func (o *CreatePolicyForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CreatePolicyForbidden) Error() string {
	return fmt.Sprintf("[POST /config/policies/][%d] createPolicyForbidden  %+v", 403, o.Payload)
}

func (o *CreatePolicyForbidden) String() string {
	return fmt.Sprintf("[POST /config/policies/][%d] createPolicyForbidden  %+v", 403, o.Payload)
}

func (o *CreatePolicyForbidden) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *CreatePolicyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreatePolicyInternalServerError creates a CreatePolicyInternalServerError with default headers values
func NewCreatePolicyInternalServerError() *CreatePolicyInternalServerError {
	return &CreatePolicyInternalServerError{}
}

/* CreatePolicyInternalServerError describes a response with status code 500, with default header values.

server error
*/
type CreatePolicyInternalServerError struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this create policy internal server error response has a 2xx status code
func (o *CreatePolicyInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create policy internal server error response has a 3xx status code
func (o *CreatePolicyInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create policy internal server error response has a 4xx status code
func (o *CreatePolicyInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create policy internal server error response has a 5xx status code
func (o *CreatePolicyInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create policy internal server error response a status code equal to that given
func (o *CreatePolicyInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CreatePolicyInternalServerError) Error() string {
	return fmt.Sprintf("[POST /config/policies/][%d] createPolicyInternalServerError  %+v", 500, o.Payload)
}

func (o *CreatePolicyInternalServerError) String() string {
	return fmt.Sprintf("[POST /config/policies/][%d] createPolicyInternalServerError  %+v", 500, o.Payload)
}

func (o *CreatePolicyInternalServerError) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *CreatePolicyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
