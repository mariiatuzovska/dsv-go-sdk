// Code generated by go-swagger; DO NOT EDIT.

package policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mariiatuzovska/dsv-go-sdk/go-swagger/models"
)

// RestorePolicyReader is a Reader for the RestorePolicy structure.
type RestorePolicyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RestorePolicyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewRestorePolicyNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRestorePolicyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRestorePolicyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRestorePolicyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRestorePolicyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRestorePolicyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRestorePolicyNoContent creates a RestorePolicyNoContent with default headers values
func NewRestorePolicyNoContent() *RestorePolicyNoContent {
	return &RestorePolicyNoContent{}
}

/* RestorePolicyNoContent describes a response with status code 204, with default header values.

no error
*/
type RestorePolicyNoContent struct {
}

// IsSuccess returns true when this restore policy no content response has a 2xx status code
func (o *RestorePolicyNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this restore policy no content response has a 3xx status code
func (o *RestorePolicyNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore policy no content response has a 4xx status code
func (o *RestorePolicyNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this restore policy no content response has a 5xx status code
func (o *RestorePolicyNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this restore policy no content response a status code equal to that given
func (o *RestorePolicyNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *RestorePolicyNoContent) Error() string {
	return fmt.Sprintf("[GET /config/policies/{path}/restore][%d] restorePolicyNoContent ", 204)
}

func (o *RestorePolicyNoContent) String() string {
	return fmt.Sprintf("[GET /config/policies/{path}/restore][%d] restorePolicyNoContent ", 204)
}

func (o *RestorePolicyNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRestorePolicyBadRequest creates a RestorePolicyBadRequest with default headers values
func NewRestorePolicyBadRequest() *RestorePolicyBadRequest {
	return &RestorePolicyBadRequest{}
}

/* RestorePolicyBadRequest describes a response with status code 400, with default header values.

bad request
*/
type RestorePolicyBadRequest struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this restore policy bad request response has a 2xx status code
func (o *RestorePolicyBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore policy bad request response has a 3xx status code
func (o *RestorePolicyBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore policy bad request response has a 4xx status code
func (o *RestorePolicyBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this restore policy bad request response has a 5xx status code
func (o *RestorePolicyBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this restore policy bad request response a status code equal to that given
func (o *RestorePolicyBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *RestorePolicyBadRequest) Error() string {
	return fmt.Sprintf("[GET /config/policies/{path}/restore][%d] restorePolicyBadRequest  %+v", 400, o.Payload)
}

func (o *RestorePolicyBadRequest) String() string {
	return fmt.Sprintf("[GET /config/policies/{path}/restore][%d] restorePolicyBadRequest  %+v", 400, o.Payload)
}

func (o *RestorePolicyBadRequest) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *RestorePolicyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestorePolicyUnauthorized creates a RestorePolicyUnauthorized with default headers values
func NewRestorePolicyUnauthorized() *RestorePolicyUnauthorized {
	return &RestorePolicyUnauthorized{}
}

/* RestorePolicyUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type RestorePolicyUnauthorized struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this restore policy unauthorized response has a 2xx status code
func (o *RestorePolicyUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore policy unauthorized response has a 3xx status code
func (o *RestorePolicyUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore policy unauthorized response has a 4xx status code
func (o *RestorePolicyUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this restore policy unauthorized response has a 5xx status code
func (o *RestorePolicyUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this restore policy unauthorized response a status code equal to that given
func (o *RestorePolicyUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *RestorePolicyUnauthorized) Error() string {
	return fmt.Sprintf("[GET /config/policies/{path}/restore][%d] restorePolicyUnauthorized  %+v", 401, o.Payload)
}

func (o *RestorePolicyUnauthorized) String() string {
	return fmt.Sprintf("[GET /config/policies/{path}/restore][%d] restorePolicyUnauthorized  %+v", 401, o.Payload)
}

func (o *RestorePolicyUnauthorized) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *RestorePolicyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestorePolicyForbidden creates a RestorePolicyForbidden with default headers values
func NewRestorePolicyForbidden() *RestorePolicyForbidden {
	return &RestorePolicyForbidden{}
}

/* RestorePolicyForbidden describes a response with status code 403, with default header values.

forbidden
*/
type RestorePolicyForbidden struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this restore policy forbidden response has a 2xx status code
func (o *RestorePolicyForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore policy forbidden response has a 3xx status code
func (o *RestorePolicyForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore policy forbidden response has a 4xx status code
func (o *RestorePolicyForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this restore policy forbidden response has a 5xx status code
func (o *RestorePolicyForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this restore policy forbidden response a status code equal to that given
func (o *RestorePolicyForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *RestorePolicyForbidden) Error() string {
	return fmt.Sprintf("[GET /config/policies/{path}/restore][%d] restorePolicyForbidden  %+v", 403, o.Payload)
}

func (o *RestorePolicyForbidden) String() string {
	return fmt.Sprintf("[GET /config/policies/{path}/restore][%d] restorePolicyForbidden  %+v", 403, o.Payload)
}

func (o *RestorePolicyForbidden) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *RestorePolicyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestorePolicyNotFound creates a RestorePolicyNotFound with default headers values
func NewRestorePolicyNotFound() *RestorePolicyNotFound {
	return &RestorePolicyNotFound{}
}

/* RestorePolicyNotFound describes a response with status code 404, with default header values.

not found
*/
type RestorePolicyNotFound struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this restore policy not found response has a 2xx status code
func (o *RestorePolicyNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore policy not found response has a 3xx status code
func (o *RestorePolicyNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore policy not found response has a 4xx status code
func (o *RestorePolicyNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this restore policy not found response has a 5xx status code
func (o *RestorePolicyNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this restore policy not found response a status code equal to that given
func (o *RestorePolicyNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *RestorePolicyNotFound) Error() string {
	return fmt.Sprintf("[GET /config/policies/{path}/restore][%d] restorePolicyNotFound  %+v", 404, o.Payload)
}

func (o *RestorePolicyNotFound) String() string {
	return fmt.Sprintf("[GET /config/policies/{path}/restore][%d] restorePolicyNotFound  %+v", 404, o.Payload)
}

func (o *RestorePolicyNotFound) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *RestorePolicyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestorePolicyInternalServerError creates a RestorePolicyInternalServerError with default headers values
func NewRestorePolicyInternalServerError() *RestorePolicyInternalServerError {
	return &RestorePolicyInternalServerError{}
}

/* RestorePolicyInternalServerError describes a response with status code 500, with default header values.

server error
*/
type RestorePolicyInternalServerError struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this restore policy internal server error response has a 2xx status code
func (o *RestorePolicyInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore policy internal server error response has a 3xx status code
func (o *RestorePolicyInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore policy internal server error response has a 4xx status code
func (o *RestorePolicyInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this restore policy internal server error response has a 5xx status code
func (o *RestorePolicyInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this restore policy internal server error response a status code equal to that given
func (o *RestorePolicyInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *RestorePolicyInternalServerError) Error() string {
	return fmt.Sprintf("[GET /config/policies/{path}/restore][%d] restorePolicyInternalServerError  %+v", 500, o.Payload)
}

func (o *RestorePolicyInternalServerError) String() string {
	return fmt.Sprintf("[GET /config/policies/{path}/restore][%d] restorePolicyInternalServerError  %+v", 500, o.Payload)
}

func (o *RestorePolicyInternalServerError) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *RestorePolicyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
