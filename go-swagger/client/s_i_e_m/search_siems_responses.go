// Code generated by go-swagger; DO NOT EDIT.

package s_i_e_m

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mariiatuzovska/dsv-go-sdk/go-swagger/models"
)

// SearchSiemsReader is a Reader for the SearchSiems structure.
type SearchSiemsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchSiemsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchSiemsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchSiemsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSearchSiemsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSearchSiemsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSearchSiemsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSearchSiemsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearchSiemsOK creates a SearchSiemsOK with default headers values
func NewSearchSiemsOK() *SearchSiemsOK {
	return &SearchSiemsOK{}
}

/* SearchSiemsOK describes a response with status code 200, with default header values.

no error
*/
type SearchSiemsOK struct {
	Payload *models.ResponseModelSearch
}

// IsSuccess returns true when this search siems o k response has a 2xx status code
func (o *SearchSiemsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this search siems o k response has a 3xx status code
func (o *SearchSiemsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search siems o k response has a 4xx status code
func (o *SearchSiemsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this search siems o k response has a 5xx status code
func (o *SearchSiemsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this search siems o k response a status code equal to that given
func (o *SearchSiemsOK) IsCode(code int) bool {
	return code == 200
}

func (o *SearchSiemsOK) Error() string {
	return fmt.Sprintf("[GET /config/siem][%d] searchSiemsOK  %+v", 200, o.Payload)
}

func (o *SearchSiemsOK) String() string {
	return fmt.Sprintf("[GET /config/siem][%d] searchSiemsOK  %+v", 200, o.Payload)
}

func (o *SearchSiemsOK) GetPayload() *models.ResponseModelSearch {
	return o.Payload
}

func (o *SearchSiemsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseModelSearch)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchSiemsBadRequest creates a SearchSiemsBadRequest with default headers values
func NewSearchSiemsBadRequest() *SearchSiemsBadRequest {
	return &SearchSiemsBadRequest{}
}

/* SearchSiemsBadRequest describes a response with status code 400, with default header values.

bad request
*/
type SearchSiemsBadRequest struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this search siems bad request response has a 2xx status code
func (o *SearchSiemsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search siems bad request response has a 3xx status code
func (o *SearchSiemsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search siems bad request response has a 4xx status code
func (o *SearchSiemsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this search siems bad request response has a 5xx status code
func (o *SearchSiemsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this search siems bad request response a status code equal to that given
func (o *SearchSiemsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *SearchSiemsBadRequest) Error() string {
	return fmt.Sprintf("[GET /config/siem][%d] searchSiemsBadRequest  %+v", 400, o.Payload)
}

func (o *SearchSiemsBadRequest) String() string {
	return fmt.Sprintf("[GET /config/siem][%d] searchSiemsBadRequest  %+v", 400, o.Payload)
}

func (o *SearchSiemsBadRequest) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *SearchSiemsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchSiemsUnauthorized creates a SearchSiemsUnauthorized with default headers values
func NewSearchSiemsUnauthorized() *SearchSiemsUnauthorized {
	return &SearchSiemsUnauthorized{}
}

/* SearchSiemsUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type SearchSiemsUnauthorized struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this search siems unauthorized response has a 2xx status code
func (o *SearchSiemsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search siems unauthorized response has a 3xx status code
func (o *SearchSiemsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search siems unauthorized response has a 4xx status code
func (o *SearchSiemsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this search siems unauthorized response has a 5xx status code
func (o *SearchSiemsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this search siems unauthorized response a status code equal to that given
func (o *SearchSiemsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *SearchSiemsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /config/siem][%d] searchSiemsUnauthorized  %+v", 401, o.Payload)
}

func (o *SearchSiemsUnauthorized) String() string {
	return fmt.Sprintf("[GET /config/siem][%d] searchSiemsUnauthorized  %+v", 401, o.Payload)
}

func (o *SearchSiemsUnauthorized) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *SearchSiemsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchSiemsForbidden creates a SearchSiemsForbidden with default headers values
func NewSearchSiemsForbidden() *SearchSiemsForbidden {
	return &SearchSiemsForbidden{}
}

/* SearchSiemsForbidden describes a response with status code 403, with default header values.

forbidden
*/
type SearchSiemsForbidden struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this search siems forbidden response has a 2xx status code
func (o *SearchSiemsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search siems forbidden response has a 3xx status code
func (o *SearchSiemsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search siems forbidden response has a 4xx status code
func (o *SearchSiemsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this search siems forbidden response has a 5xx status code
func (o *SearchSiemsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this search siems forbidden response a status code equal to that given
func (o *SearchSiemsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *SearchSiemsForbidden) Error() string {
	return fmt.Sprintf("[GET /config/siem][%d] searchSiemsForbidden  %+v", 403, o.Payload)
}

func (o *SearchSiemsForbidden) String() string {
	return fmt.Sprintf("[GET /config/siem][%d] searchSiemsForbidden  %+v", 403, o.Payload)
}

func (o *SearchSiemsForbidden) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *SearchSiemsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchSiemsNotFound creates a SearchSiemsNotFound with default headers values
func NewSearchSiemsNotFound() *SearchSiemsNotFound {
	return &SearchSiemsNotFound{}
}

/* SearchSiemsNotFound describes a response with status code 404, with default header values.

not found
*/
type SearchSiemsNotFound struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this search siems not found response has a 2xx status code
func (o *SearchSiemsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search siems not found response has a 3xx status code
func (o *SearchSiemsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search siems not found response has a 4xx status code
func (o *SearchSiemsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this search siems not found response has a 5xx status code
func (o *SearchSiemsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this search siems not found response a status code equal to that given
func (o *SearchSiemsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *SearchSiemsNotFound) Error() string {
	return fmt.Sprintf("[GET /config/siem][%d] searchSiemsNotFound  %+v", 404, o.Payload)
}

func (o *SearchSiemsNotFound) String() string {
	return fmt.Sprintf("[GET /config/siem][%d] searchSiemsNotFound  %+v", 404, o.Payload)
}

func (o *SearchSiemsNotFound) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *SearchSiemsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchSiemsInternalServerError creates a SearchSiemsInternalServerError with default headers values
func NewSearchSiemsInternalServerError() *SearchSiemsInternalServerError {
	return &SearchSiemsInternalServerError{}
}

/* SearchSiemsInternalServerError describes a response with status code 500, with default header values.

server error
*/
type SearchSiemsInternalServerError struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this search siems internal server error response has a 2xx status code
func (o *SearchSiemsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search siems internal server error response has a 3xx status code
func (o *SearchSiemsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search siems internal server error response has a 4xx status code
func (o *SearchSiemsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this search siems internal server error response has a 5xx status code
func (o *SearchSiemsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this search siems internal server error response a status code equal to that given
func (o *SearchSiemsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *SearchSiemsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /config/siem][%d] searchSiemsInternalServerError  %+v", 500, o.Payload)
}

func (o *SearchSiemsInternalServerError) String() string {
	return fmt.Sprintf("[GET /config/siem][%d] searchSiemsInternalServerError  %+v", 500, o.Payload)
}

func (o *SearchSiemsInternalServerError) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *SearchSiemsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
