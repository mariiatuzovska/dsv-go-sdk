// Code generated by go-swagger; DO NOT EDIT.

package tokens

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mariiatuzovska/dsv-go-sdk/go-swagger/models"
)

// InitCertAuthReader is a Reader for the InitCertAuth structure.
type InitCertAuthReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InitCertAuthReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewInitCertAuthOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewInitCertAuthBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewInitCertAuthInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewInitCertAuthOK creates a InitCertAuthOK with default headers values
func NewInitCertAuthOK() *InitCertAuthOK {
	return &InitCertAuthOK{}
}

/* InitCertAuthOK describes a response with status code 200, with default header values.

Successful response with an encrypted challenge
*/
type InitCertAuthOK struct {
	Payload *models.InitiateCertAuthResponse
}

// IsSuccess returns true when this init cert auth o k response has a 2xx status code
func (o *InitCertAuthOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this init cert auth o k response has a 3xx status code
func (o *InitCertAuthOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this init cert auth o k response has a 4xx status code
func (o *InitCertAuthOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this init cert auth o k response has a 5xx status code
func (o *InitCertAuthOK) IsServerError() bool {
	return false
}

// IsCode returns true when this init cert auth o k response a status code equal to that given
func (o *InitCertAuthOK) IsCode(code int) bool {
	return code == 200
}

func (o *InitCertAuthOK) Error() string {
	return fmt.Sprintf("[POST /certificate/auth][%d] initCertAuthOK  %+v", 200, o.Payload)
}

func (o *InitCertAuthOK) String() string {
	return fmt.Sprintf("[POST /certificate/auth][%d] initCertAuthOK  %+v", 200, o.Payload)
}

func (o *InitCertAuthOK) GetPayload() *models.InitiateCertAuthResponse {
	return o.Payload
}

func (o *InitCertAuthOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InitiateCertAuthResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInitCertAuthBadRequest creates a InitCertAuthBadRequest with default headers values
func NewInitCertAuthBadRequest() *InitCertAuthBadRequest {
	return &InitCertAuthBadRequest{}
}

/* InitCertAuthBadRequest describes a response with status code 400, with default header values.

bad request
*/
type InitCertAuthBadRequest struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this init cert auth bad request response has a 2xx status code
func (o *InitCertAuthBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this init cert auth bad request response has a 3xx status code
func (o *InitCertAuthBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this init cert auth bad request response has a 4xx status code
func (o *InitCertAuthBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this init cert auth bad request response has a 5xx status code
func (o *InitCertAuthBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this init cert auth bad request response a status code equal to that given
func (o *InitCertAuthBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *InitCertAuthBadRequest) Error() string {
	return fmt.Sprintf("[POST /certificate/auth][%d] initCertAuthBadRequest  %+v", 400, o.Payload)
}

func (o *InitCertAuthBadRequest) String() string {
	return fmt.Sprintf("[POST /certificate/auth][%d] initCertAuthBadRequest  %+v", 400, o.Payload)
}

func (o *InitCertAuthBadRequest) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *InitCertAuthBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInitCertAuthInternalServerError creates a InitCertAuthInternalServerError with default headers values
func NewInitCertAuthInternalServerError() *InitCertAuthInternalServerError {
	return &InitCertAuthInternalServerError{}
}

/* InitCertAuthInternalServerError describes a response with status code 500, with default header values.

server error
*/
type InitCertAuthInternalServerError struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this init cert auth internal server error response has a 2xx status code
func (o *InitCertAuthInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this init cert auth internal server error response has a 3xx status code
func (o *InitCertAuthInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this init cert auth internal server error response has a 4xx status code
func (o *InitCertAuthInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this init cert auth internal server error response has a 5xx status code
func (o *InitCertAuthInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this init cert auth internal server error response a status code equal to that given
func (o *InitCertAuthInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *InitCertAuthInternalServerError) Error() string {
	return fmt.Sprintf("[POST /certificate/auth][%d] initCertAuthInternalServerError  %+v", 500, o.Payload)
}

func (o *InitCertAuthInternalServerError) String() string {
	return fmt.Sprintf("[POST /certificate/auth][%d] initCertAuthInternalServerError  %+v", 500, o.Payload)
}

func (o *InitCertAuthInternalServerError) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *InitCertAuthInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
