// Code generated by go-swagger; DO NOT EDIT.

package clients

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mariiatuzovska/dsv-go-sdk/go-swagger/models"
)

// SearchClientsReader is a Reader for the SearchClients structure.
type SearchClientsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchClientsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchClientsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchClientsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSearchClientsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSearchClientsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearchClientsOK creates a SearchClientsOK with default headers values
func NewSearchClientsOK() *SearchClientsOK {
	return &SearchClientsOK{}
}

/* SearchClientsOK describes a response with status code 200, with default header values.

no error
*/
type SearchClientsOK struct {
	Payload *models.ResponseModelSearch
}

// IsSuccess returns true when this search clients o k response has a 2xx status code
func (o *SearchClientsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this search clients o k response has a 3xx status code
func (o *SearchClientsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search clients o k response has a 4xx status code
func (o *SearchClientsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this search clients o k response has a 5xx status code
func (o *SearchClientsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this search clients o k response a status code equal to that given
func (o *SearchClientsOK) IsCode(code int) bool {
	return code == 200
}

func (o *SearchClientsOK) Error() string {
	return fmt.Sprintf("[GET /clients][%d] searchClientsOK  %+v", 200, o.Payload)
}

func (o *SearchClientsOK) String() string {
	return fmt.Sprintf("[GET /clients][%d] searchClientsOK  %+v", 200, o.Payload)
}

func (o *SearchClientsOK) GetPayload() *models.ResponseModelSearch {
	return o.Payload
}

func (o *SearchClientsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseModelSearch)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchClientsBadRequest creates a SearchClientsBadRequest with default headers values
func NewSearchClientsBadRequest() *SearchClientsBadRequest {
	return &SearchClientsBadRequest{}
}

/* SearchClientsBadRequest describes a response with status code 400, with default header values.

bad request
*/
type SearchClientsBadRequest struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this search clients bad request response has a 2xx status code
func (o *SearchClientsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search clients bad request response has a 3xx status code
func (o *SearchClientsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search clients bad request response has a 4xx status code
func (o *SearchClientsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this search clients bad request response has a 5xx status code
func (o *SearchClientsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this search clients bad request response a status code equal to that given
func (o *SearchClientsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *SearchClientsBadRequest) Error() string {
	return fmt.Sprintf("[GET /clients][%d] searchClientsBadRequest  %+v", 400, o.Payload)
}

func (o *SearchClientsBadRequest) String() string {
	return fmt.Sprintf("[GET /clients][%d] searchClientsBadRequest  %+v", 400, o.Payload)
}

func (o *SearchClientsBadRequest) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *SearchClientsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchClientsUnauthorized creates a SearchClientsUnauthorized with default headers values
func NewSearchClientsUnauthorized() *SearchClientsUnauthorized {
	return &SearchClientsUnauthorized{}
}

/* SearchClientsUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type SearchClientsUnauthorized struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this search clients unauthorized response has a 2xx status code
func (o *SearchClientsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search clients unauthorized response has a 3xx status code
func (o *SearchClientsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search clients unauthorized response has a 4xx status code
func (o *SearchClientsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this search clients unauthorized response has a 5xx status code
func (o *SearchClientsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this search clients unauthorized response a status code equal to that given
func (o *SearchClientsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *SearchClientsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /clients][%d] searchClientsUnauthorized  %+v", 401, o.Payload)
}

func (o *SearchClientsUnauthorized) String() string {
	return fmt.Sprintf("[GET /clients][%d] searchClientsUnauthorized  %+v", 401, o.Payload)
}

func (o *SearchClientsUnauthorized) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *SearchClientsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchClientsInternalServerError creates a SearchClientsInternalServerError with default headers values
func NewSearchClientsInternalServerError() *SearchClientsInternalServerError {
	return &SearchClientsInternalServerError{}
}

/* SearchClientsInternalServerError describes a response with status code 500, with default header values.

server error
*/
type SearchClientsInternalServerError struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this search clients internal server error response has a 2xx status code
func (o *SearchClientsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search clients internal server error response has a 3xx status code
func (o *SearchClientsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search clients internal server error response has a 4xx status code
func (o *SearchClientsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this search clients internal server error response has a 5xx status code
func (o *SearchClientsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this search clients internal server error response a status code equal to that given
func (o *SearchClientsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *SearchClientsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /clients][%d] searchClientsInternalServerError  %+v", 500, o.Payload)
}

func (o *SearchClientsInternalServerError) String() string {
	return fmt.Sprintf("[GET /clients][%d] searchClientsInternalServerError  %+v", 500, o.Payload)
}

func (o *SearchClientsInternalServerError) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *SearchClientsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
