// Code generated by go-swagger; DO NOT EDIT.

package clients

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mariiatuzovska/dsv-go-sdk/go-swagger/models"
)

// DeleteClientCredentialReader is a Reader for the DeleteClientCredential structure.
type DeleteClientCredentialReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteClientCredentialReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteClientCredentialOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteClientCredentialBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteClientCredentialUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteClientCredentialForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteClientCredentialNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteClientCredentialInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteClientCredentialOK creates a DeleteClientCredentialOK with default headers values
func NewDeleteClientCredentialOK() *DeleteClientCredentialOK {
	return &DeleteClientCredentialOK{}
}

/* DeleteClientCredentialOK describes a response with status code 200, with default header values.

no error
*/
type DeleteClientCredentialOK struct {
	Payload *models.MessageResponse
}

// IsSuccess returns true when this delete client credential o k response has a 2xx status code
func (o *DeleteClientCredentialOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete client credential o k response has a 3xx status code
func (o *DeleteClientCredentialOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete client credential o k response has a 4xx status code
func (o *DeleteClientCredentialOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete client credential o k response has a 5xx status code
func (o *DeleteClientCredentialOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete client credential o k response a status code equal to that given
func (o *DeleteClientCredentialOK) IsCode(code int) bool {
	return code == 200
}

func (o *DeleteClientCredentialOK) Error() string {
	return fmt.Sprintf("[DELETE /clients/{clientId}][%d] deleteClientCredentialOK  %+v", 200, o.Payload)
}

func (o *DeleteClientCredentialOK) String() string {
	return fmt.Sprintf("[DELETE /clients/{clientId}][%d] deleteClientCredentialOK  %+v", 200, o.Payload)
}

func (o *DeleteClientCredentialOK) GetPayload() *models.MessageResponse {
	return o.Payload
}

func (o *DeleteClientCredentialOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteClientCredentialBadRequest creates a DeleteClientCredentialBadRequest with default headers values
func NewDeleteClientCredentialBadRequest() *DeleteClientCredentialBadRequest {
	return &DeleteClientCredentialBadRequest{}
}

/* DeleteClientCredentialBadRequest describes a response with status code 400, with default header values.

bad request
*/
type DeleteClientCredentialBadRequest struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this delete client credential bad request response has a 2xx status code
func (o *DeleteClientCredentialBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete client credential bad request response has a 3xx status code
func (o *DeleteClientCredentialBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete client credential bad request response has a 4xx status code
func (o *DeleteClientCredentialBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete client credential bad request response has a 5xx status code
func (o *DeleteClientCredentialBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete client credential bad request response a status code equal to that given
func (o *DeleteClientCredentialBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteClientCredentialBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /clients/{clientId}][%d] deleteClientCredentialBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteClientCredentialBadRequest) String() string {
	return fmt.Sprintf("[DELETE /clients/{clientId}][%d] deleteClientCredentialBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteClientCredentialBadRequest) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *DeleteClientCredentialBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteClientCredentialUnauthorized creates a DeleteClientCredentialUnauthorized with default headers values
func NewDeleteClientCredentialUnauthorized() *DeleteClientCredentialUnauthorized {
	return &DeleteClientCredentialUnauthorized{}
}

/* DeleteClientCredentialUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type DeleteClientCredentialUnauthorized struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this delete client credential unauthorized response has a 2xx status code
func (o *DeleteClientCredentialUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete client credential unauthorized response has a 3xx status code
func (o *DeleteClientCredentialUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete client credential unauthorized response has a 4xx status code
func (o *DeleteClientCredentialUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete client credential unauthorized response has a 5xx status code
func (o *DeleteClientCredentialUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete client credential unauthorized response a status code equal to that given
func (o *DeleteClientCredentialUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteClientCredentialUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /clients/{clientId}][%d] deleteClientCredentialUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteClientCredentialUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /clients/{clientId}][%d] deleteClientCredentialUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteClientCredentialUnauthorized) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *DeleteClientCredentialUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteClientCredentialForbidden creates a DeleteClientCredentialForbidden with default headers values
func NewDeleteClientCredentialForbidden() *DeleteClientCredentialForbidden {
	return &DeleteClientCredentialForbidden{}
}

/* DeleteClientCredentialForbidden describes a response with status code 403, with default header values.

forbidden
*/
type DeleteClientCredentialForbidden struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this delete client credential forbidden response has a 2xx status code
func (o *DeleteClientCredentialForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete client credential forbidden response has a 3xx status code
func (o *DeleteClientCredentialForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete client credential forbidden response has a 4xx status code
func (o *DeleteClientCredentialForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete client credential forbidden response has a 5xx status code
func (o *DeleteClientCredentialForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete client credential forbidden response a status code equal to that given
func (o *DeleteClientCredentialForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteClientCredentialForbidden) Error() string {
	return fmt.Sprintf("[DELETE /clients/{clientId}][%d] deleteClientCredentialForbidden  %+v", 403, o.Payload)
}

func (o *DeleteClientCredentialForbidden) String() string {
	return fmt.Sprintf("[DELETE /clients/{clientId}][%d] deleteClientCredentialForbidden  %+v", 403, o.Payload)
}

func (o *DeleteClientCredentialForbidden) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *DeleteClientCredentialForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteClientCredentialNotFound creates a DeleteClientCredentialNotFound with default headers values
func NewDeleteClientCredentialNotFound() *DeleteClientCredentialNotFound {
	return &DeleteClientCredentialNotFound{}
}

/* DeleteClientCredentialNotFound describes a response with status code 404, with default header values.

not found
*/
type DeleteClientCredentialNotFound struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this delete client credential not found response has a 2xx status code
func (o *DeleteClientCredentialNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete client credential not found response has a 3xx status code
func (o *DeleteClientCredentialNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete client credential not found response has a 4xx status code
func (o *DeleteClientCredentialNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete client credential not found response has a 5xx status code
func (o *DeleteClientCredentialNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete client credential not found response a status code equal to that given
func (o *DeleteClientCredentialNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteClientCredentialNotFound) Error() string {
	return fmt.Sprintf("[DELETE /clients/{clientId}][%d] deleteClientCredentialNotFound  %+v", 404, o.Payload)
}

func (o *DeleteClientCredentialNotFound) String() string {
	return fmt.Sprintf("[DELETE /clients/{clientId}][%d] deleteClientCredentialNotFound  %+v", 404, o.Payload)
}

func (o *DeleteClientCredentialNotFound) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *DeleteClientCredentialNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteClientCredentialInternalServerError creates a DeleteClientCredentialInternalServerError with default headers values
func NewDeleteClientCredentialInternalServerError() *DeleteClientCredentialInternalServerError {
	return &DeleteClientCredentialInternalServerError{}
}

/* DeleteClientCredentialInternalServerError describes a response with status code 500, with default header values.

server error
*/
type DeleteClientCredentialInternalServerError struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this delete client credential internal server error response has a 2xx status code
func (o *DeleteClientCredentialInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete client credential internal server error response has a 3xx status code
func (o *DeleteClientCredentialInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete client credential internal server error response has a 4xx status code
func (o *DeleteClientCredentialInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete client credential internal server error response has a 5xx status code
func (o *DeleteClientCredentialInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete client credential internal server error response a status code equal to that given
func (o *DeleteClientCredentialInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteClientCredentialInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /clients/{clientId}][%d] deleteClientCredentialInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteClientCredentialInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /clients/{clientId}][%d] deleteClientCredentialInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteClientCredentialInternalServerError) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *DeleteClientCredentialInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
