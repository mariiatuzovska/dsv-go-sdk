// Code generated by go-swagger; DO NOT EDIT.

package clients

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mariiatuzovska/dsv-go-sdk/go-swagger/models"
)

// RestoreClientReader is a Reader for the RestoreClient structure.
type RestoreClientReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RestoreClientReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRestoreClientOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRestoreClientBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRestoreClientUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRestoreClientForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRestoreClientNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRestoreClientInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRestoreClientOK creates a RestoreClientOK with default headers values
func NewRestoreClientOK() *RestoreClientOK {
	return &RestoreClientOK{}
}

/* RestoreClientOK describes a response with status code 200, with default header values.

no error
*/
type RestoreClientOK struct {
}

// IsSuccess returns true when this restore client o k response has a 2xx status code
func (o *RestoreClientOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this restore client o k response has a 3xx status code
func (o *RestoreClientOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore client o k response has a 4xx status code
func (o *RestoreClientOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this restore client o k response has a 5xx status code
func (o *RestoreClientOK) IsServerError() bool {
	return false
}

// IsCode returns true when this restore client o k response a status code equal to that given
func (o *RestoreClientOK) IsCode(code int) bool {
	return code == 200
}

func (o *RestoreClientOK) Error() string {
	return fmt.Sprintf("[GET /clients/{clientId}/restore][%d] restoreClientOK ", 200)
}

func (o *RestoreClientOK) String() string {
	return fmt.Sprintf("[GET /clients/{clientId}/restore][%d] restoreClientOK ", 200)
}

func (o *RestoreClientOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRestoreClientBadRequest creates a RestoreClientBadRequest with default headers values
func NewRestoreClientBadRequest() *RestoreClientBadRequest {
	return &RestoreClientBadRequest{}
}

/* RestoreClientBadRequest describes a response with status code 400, with default header values.

bad request
*/
type RestoreClientBadRequest struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this restore client bad request response has a 2xx status code
func (o *RestoreClientBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore client bad request response has a 3xx status code
func (o *RestoreClientBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore client bad request response has a 4xx status code
func (o *RestoreClientBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this restore client bad request response has a 5xx status code
func (o *RestoreClientBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this restore client bad request response a status code equal to that given
func (o *RestoreClientBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *RestoreClientBadRequest) Error() string {
	return fmt.Sprintf("[GET /clients/{clientId}/restore][%d] restoreClientBadRequest  %+v", 400, o.Payload)
}

func (o *RestoreClientBadRequest) String() string {
	return fmt.Sprintf("[GET /clients/{clientId}/restore][%d] restoreClientBadRequest  %+v", 400, o.Payload)
}

func (o *RestoreClientBadRequest) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *RestoreClientBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestoreClientUnauthorized creates a RestoreClientUnauthorized with default headers values
func NewRestoreClientUnauthorized() *RestoreClientUnauthorized {
	return &RestoreClientUnauthorized{}
}

/* RestoreClientUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type RestoreClientUnauthorized struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this restore client unauthorized response has a 2xx status code
func (o *RestoreClientUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore client unauthorized response has a 3xx status code
func (o *RestoreClientUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore client unauthorized response has a 4xx status code
func (o *RestoreClientUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this restore client unauthorized response has a 5xx status code
func (o *RestoreClientUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this restore client unauthorized response a status code equal to that given
func (o *RestoreClientUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *RestoreClientUnauthorized) Error() string {
	return fmt.Sprintf("[GET /clients/{clientId}/restore][%d] restoreClientUnauthorized  %+v", 401, o.Payload)
}

func (o *RestoreClientUnauthorized) String() string {
	return fmt.Sprintf("[GET /clients/{clientId}/restore][%d] restoreClientUnauthorized  %+v", 401, o.Payload)
}

func (o *RestoreClientUnauthorized) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *RestoreClientUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestoreClientForbidden creates a RestoreClientForbidden with default headers values
func NewRestoreClientForbidden() *RestoreClientForbidden {
	return &RestoreClientForbidden{}
}

/* RestoreClientForbidden describes a response with status code 403, with default header values.

forbidden
*/
type RestoreClientForbidden struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this restore client forbidden response has a 2xx status code
func (o *RestoreClientForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore client forbidden response has a 3xx status code
func (o *RestoreClientForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore client forbidden response has a 4xx status code
func (o *RestoreClientForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this restore client forbidden response has a 5xx status code
func (o *RestoreClientForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this restore client forbidden response a status code equal to that given
func (o *RestoreClientForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *RestoreClientForbidden) Error() string {
	return fmt.Sprintf("[GET /clients/{clientId}/restore][%d] restoreClientForbidden  %+v", 403, o.Payload)
}

func (o *RestoreClientForbidden) String() string {
	return fmt.Sprintf("[GET /clients/{clientId}/restore][%d] restoreClientForbidden  %+v", 403, o.Payload)
}

func (o *RestoreClientForbidden) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *RestoreClientForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestoreClientNotFound creates a RestoreClientNotFound with default headers values
func NewRestoreClientNotFound() *RestoreClientNotFound {
	return &RestoreClientNotFound{}
}

/* RestoreClientNotFound describes a response with status code 404, with default header values.

not found
*/
type RestoreClientNotFound struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this restore client not found response has a 2xx status code
func (o *RestoreClientNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore client not found response has a 3xx status code
func (o *RestoreClientNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore client not found response has a 4xx status code
func (o *RestoreClientNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this restore client not found response has a 5xx status code
func (o *RestoreClientNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this restore client not found response a status code equal to that given
func (o *RestoreClientNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *RestoreClientNotFound) Error() string {
	return fmt.Sprintf("[GET /clients/{clientId}/restore][%d] restoreClientNotFound  %+v", 404, o.Payload)
}

func (o *RestoreClientNotFound) String() string {
	return fmt.Sprintf("[GET /clients/{clientId}/restore][%d] restoreClientNotFound  %+v", 404, o.Payload)
}

func (o *RestoreClientNotFound) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *RestoreClientNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestoreClientInternalServerError creates a RestoreClientInternalServerError with default headers values
func NewRestoreClientInternalServerError() *RestoreClientInternalServerError {
	return &RestoreClientInternalServerError{}
}

/* RestoreClientInternalServerError describes a response with status code 500, with default header values.

server error
*/
type RestoreClientInternalServerError struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this restore client internal server error response has a 2xx status code
func (o *RestoreClientInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore client internal server error response has a 3xx status code
func (o *RestoreClientInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore client internal server error response has a 4xx status code
func (o *RestoreClientInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this restore client internal server error response has a 5xx status code
func (o *RestoreClientInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this restore client internal server error response a status code equal to that given
func (o *RestoreClientInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *RestoreClientInternalServerError) Error() string {
	return fmt.Sprintf("[GET /clients/{clientId}/restore][%d] restoreClientInternalServerError  %+v", 500, o.Payload)
}

func (o *RestoreClientInternalServerError) String() string {
	return fmt.Sprintf("[GET /clients/{clientId}/restore][%d] restoreClientInternalServerError  %+v", 500, o.Payload)
}

func (o *RestoreClientInternalServerError) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *RestoreClientInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
