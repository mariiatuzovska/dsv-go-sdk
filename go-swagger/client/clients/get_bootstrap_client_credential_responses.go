// Code generated by go-swagger; DO NOT EDIT.

package clients

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mariiatuzovska/dsv-go-sdk/go-swagger/models"
)

// GetBootstrapClientCredentialReader is a Reader for the GetBootstrapClientCredential structure.
type GetBootstrapClientCredentialReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBootstrapClientCredentialReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBootstrapClientCredentialOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetBootstrapClientCredentialBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetBootstrapClientCredentialUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetBootstrapClientCredentialForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetBootstrapClientCredentialNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetBootstrapClientCredentialInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetBootstrapClientCredentialOK creates a GetBootstrapClientCredentialOK with default headers values
func NewGetBootstrapClientCredentialOK() *GetBootstrapClientCredentialOK {
	return &GetBootstrapClientCredentialOK{}
}

/* GetBootstrapClientCredentialOK describes a response with status code 200, with default header values.

no error
*/
type GetBootstrapClientCredentialOK struct {
	Payload *models.ClientCredentials
}

// IsSuccess returns true when this get bootstrap client credential o k response has a 2xx status code
func (o *GetBootstrapClientCredentialOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get bootstrap client credential o k response has a 3xx status code
func (o *GetBootstrapClientCredentialOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bootstrap client credential o k response has a 4xx status code
func (o *GetBootstrapClientCredentialOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get bootstrap client credential o k response has a 5xx status code
func (o *GetBootstrapClientCredentialOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get bootstrap client credential o k response a status code equal to that given
func (o *GetBootstrapClientCredentialOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetBootstrapClientCredentialOK) Error() string {
	return fmt.Sprintf("[GET /clients/bootstrap/{clientId}][%d] getBootstrapClientCredentialOK  %+v", 200, o.Payload)
}

func (o *GetBootstrapClientCredentialOK) String() string {
	return fmt.Sprintf("[GET /clients/bootstrap/{clientId}][%d] getBootstrapClientCredentialOK  %+v", 200, o.Payload)
}

func (o *GetBootstrapClientCredentialOK) GetPayload() *models.ClientCredentials {
	return o.Payload
}

func (o *GetBootstrapClientCredentialOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ClientCredentials)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBootstrapClientCredentialBadRequest creates a GetBootstrapClientCredentialBadRequest with default headers values
func NewGetBootstrapClientCredentialBadRequest() *GetBootstrapClientCredentialBadRequest {
	return &GetBootstrapClientCredentialBadRequest{}
}

/* GetBootstrapClientCredentialBadRequest describes a response with status code 400, with default header values.

bad request
*/
type GetBootstrapClientCredentialBadRequest struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this get bootstrap client credential bad request response has a 2xx status code
func (o *GetBootstrapClientCredentialBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bootstrap client credential bad request response has a 3xx status code
func (o *GetBootstrapClientCredentialBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bootstrap client credential bad request response has a 4xx status code
func (o *GetBootstrapClientCredentialBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get bootstrap client credential bad request response has a 5xx status code
func (o *GetBootstrapClientCredentialBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get bootstrap client credential bad request response a status code equal to that given
func (o *GetBootstrapClientCredentialBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetBootstrapClientCredentialBadRequest) Error() string {
	return fmt.Sprintf("[GET /clients/bootstrap/{clientId}][%d] getBootstrapClientCredentialBadRequest  %+v", 400, o.Payload)
}

func (o *GetBootstrapClientCredentialBadRequest) String() string {
	return fmt.Sprintf("[GET /clients/bootstrap/{clientId}][%d] getBootstrapClientCredentialBadRequest  %+v", 400, o.Payload)
}

func (o *GetBootstrapClientCredentialBadRequest) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *GetBootstrapClientCredentialBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBootstrapClientCredentialUnauthorized creates a GetBootstrapClientCredentialUnauthorized with default headers values
func NewGetBootstrapClientCredentialUnauthorized() *GetBootstrapClientCredentialUnauthorized {
	return &GetBootstrapClientCredentialUnauthorized{}
}

/* GetBootstrapClientCredentialUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type GetBootstrapClientCredentialUnauthorized struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this get bootstrap client credential unauthorized response has a 2xx status code
func (o *GetBootstrapClientCredentialUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bootstrap client credential unauthorized response has a 3xx status code
func (o *GetBootstrapClientCredentialUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bootstrap client credential unauthorized response has a 4xx status code
func (o *GetBootstrapClientCredentialUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get bootstrap client credential unauthorized response has a 5xx status code
func (o *GetBootstrapClientCredentialUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get bootstrap client credential unauthorized response a status code equal to that given
func (o *GetBootstrapClientCredentialUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetBootstrapClientCredentialUnauthorized) Error() string {
	return fmt.Sprintf("[GET /clients/bootstrap/{clientId}][%d] getBootstrapClientCredentialUnauthorized  %+v", 401, o.Payload)
}

func (o *GetBootstrapClientCredentialUnauthorized) String() string {
	return fmt.Sprintf("[GET /clients/bootstrap/{clientId}][%d] getBootstrapClientCredentialUnauthorized  %+v", 401, o.Payload)
}

func (o *GetBootstrapClientCredentialUnauthorized) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *GetBootstrapClientCredentialUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBootstrapClientCredentialForbidden creates a GetBootstrapClientCredentialForbidden with default headers values
func NewGetBootstrapClientCredentialForbidden() *GetBootstrapClientCredentialForbidden {
	return &GetBootstrapClientCredentialForbidden{}
}

/* GetBootstrapClientCredentialForbidden describes a response with status code 403, with default header values.

forbidden
*/
type GetBootstrapClientCredentialForbidden struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this get bootstrap client credential forbidden response has a 2xx status code
func (o *GetBootstrapClientCredentialForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bootstrap client credential forbidden response has a 3xx status code
func (o *GetBootstrapClientCredentialForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bootstrap client credential forbidden response has a 4xx status code
func (o *GetBootstrapClientCredentialForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get bootstrap client credential forbidden response has a 5xx status code
func (o *GetBootstrapClientCredentialForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get bootstrap client credential forbidden response a status code equal to that given
func (o *GetBootstrapClientCredentialForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetBootstrapClientCredentialForbidden) Error() string {
	return fmt.Sprintf("[GET /clients/bootstrap/{clientId}][%d] getBootstrapClientCredentialForbidden  %+v", 403, o.Payload)
}

func (o *GetBootstrapClientCredentialForbidden) String() string {
	return fmt.Sprintf("[GET /clients/bootstrap/{clientId}][%d] getBootstrapClientCredentialForbidden  %+v", 403, o.Payload)
}

func (o *GetBootstrapClientCredentialForbidden) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *GetBootstrapClientCredentialForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBootstrapClientCredentialNotFound creates a GetBootstrapClientCredentialNotFound with default headers values
func NewGetBootstrapClientCredentialNotFound() *GetBootstrapClientCredentialNotFound {
	return &GetBootstrapClientCredentialNotFound{}
}

/* GetBootstrapClientCredentialNotFound describes a response with status code 404, with default header values.

not found
*/
type GetBootstrapClientCredentialNotFound struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this get bootstrap client credential not found response has a 2xx status code
func (o *GetBootstrapClientCredentialNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bootstrap client credential not found response has a 3xx status code
func (o *GetBootstrapClientCredentialNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bootstrap client credential not found response has a 4xx status code
func (o *GetBootstrapClientCredentialNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get bootstrap client credential not found response has a 5xx status code
func (o *GetBootstrapClientCredentialNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get bootstrap client credential not found response a status code equal to that given
func (o *GetBootstrapClientCredentialNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetBootstrapClientCredentialNotFound) Error() string {
	return fmt.Sprintf("[GET /clients/bootstrap/{clientId}][%d] getBootstrapClientCredentialNotFound  %+v", 404, o.Payload)
}

func (o *GetBootstrapClientCredentialNotFound) String() string {
	return fmt.Sprintf("[GET /clients/bootstrap/{clientId}][%d] getBootstrapClientCredentialNotFound  %+v", 404, o.Payload)
}

func (o *GetBootstrapClientCredentialNotFound) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *GetBootstrapClientCredentialNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBootstrapClientCredentialInternalServerError creates a GetBootstrapClientCredentialInternalServerError with default headers values
func NewGetBootstrapClientCredentialInternalServerError() *GetBootstrapClientCredentialInternalServerError {
	return &GetBootstrapClientCredentialInternalServerError{}
}

/* GetBootstrapClientCredentialInternalServerError describes a response with status code 500, with default header values.

server error
*/
type GetBootstrapClientCredentialInternalServerError struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this get bootstrap client credential internal server error response has a 2xx status code
func (o *GetBootstrapClientCredentialInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bootstrap client credential internal server error response has a 3xx status code
func (o *GetBootstrapClientCredentialInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bootstrap client credential internal server error response has a 4xx status code
func (o *GetBootstrapClientCredentialInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get bootstrap client credential internal server error response has a 5xx status code
func (o *GetBootstrapClientCredentialInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get bootstrap client credential internal server error response a status code equal to that given
func (o *GetBootstrapClientCredentialInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetBootstrapClientCredentialInternalServerError) Error() string {
	return fmt.Sprintf("[GET /clients/bootstrap/{clientId}][%d] getBootstrapClientCredentialInternalServerError  %+v", 500, o.Payload)
}

func (o *GetBootstrapClientCredentialInternalServerError) String() string {
	return fmt.Sprintf("[GET /clients/bootstrap/{clientId}][%d] getBootstrapClientCredentialInternalServerError  %+v", 500, o.Payload)
}

func (o *GetBootstrapClientCredentialInternalServerError) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *GetBootstrapClientCredentialInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
