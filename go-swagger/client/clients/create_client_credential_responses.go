// Code generated by go-swagger; DO NOT EDIT.

package clients

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mariiatuzovska/dsv-go-sdk/go-swagger/models"
)

// CreateClientCredentialReader is a Reader for the CreateClientCredential structure.
type CreateClientCredentialReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateClientCredentialReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateClientCredentialCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateClientCredentialBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateClientCredentialUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateClientCredentialForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateClientCredentialInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateClientCredentialCreated creates a CreateClientCredentialCreated with default headers values
func NewCreateClientCredentialCreated() *CreateClientCredentialCreated {
	return &CreateClientCredentialCreated{}
}

/* CreateClientCredentialCreated describes a response with status code 201, with default header values.

no error
*/
type CreateClientCredentialCreated struct {
	Payload *models.ClientCredentials
}

// IsSuccess returns true when this create client credential created response has a 2xx status code
func (o *CreateClientCredentialCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create client credential created response has a 3xx status code
func (o *CreateClientCredentialCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create client credential created response has a 4xx status code
func (o *CreateClientCredentialCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create client credential created response has a 5xx status code
func (o *CreateClientCredentialCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create client credential created response a status code equal to that given
func (o *CreateClientCredentialCreated) IsCode(code int) bool {
	return code == 201
}

func (o *CreateClientCredentialCreated) Error() string {
	return fmt.Sprintf("[POST /clients][%d] createClientCredentialCreated  %+v", 201, o.Payload)
}

func (o *CreateClientCredentialCreated) String() string {
	return fmt.Sprintf("[POST /clients][%d] createClientCredentialCreated  %+v", 201, o.Payload)
}

func (o *CreateClientCredentialCreated) GetPayload() *models.ClientCredentials {
	return o.Payload
}

func (o *CreateClientCredentialCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ClientCredentials)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateClientCredentialBadRequest creates a CreateClientCredentialBadRequest with default headers values
func NewCreateClientCredentialBadRequest() *CreateClientCredentialBadRequest {
	return &CreateClientCredentialBadRequest{}
}

/* CreateClientCredentialBadRequest describes a response with status code 400, with default header values.

bad request
*/
type CreateClientCredentialBadRequest struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this create client credential bad request response has a 2xx status code
func (o *CreateClientCredentialBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create client credential bad request response has a 3xx status code
func (o *CreateClientCredentialBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create client credential bad request response has a 4xx status code
func (o *CreateClientCredentialBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create client credential bad request response has a 5xx status code
func (o *CreateClientCredentialBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create client credential bad request response a status code equal to that given
func (o *CreateClientCredentialBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CreateClientCredentialBadRequest) Error() string {
	return fmt.Sprintf("[POST /clients][%d] createClientCredentialBadRequest  %+v", 400, o.Payload)
}

func (o *CreateClientCredentialBadRequest) String() string {
	return fmt.Sprintf("[POST /clients][%d] createClientCredentialBadRequest  %+v", 400, o.Payload)
}

func (o *CreateClientCredentialBadRequest) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *CreateClientCredentialBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateClientCredentialUnauthorized creates a CreateClientCredentialUnauthorized with default headers values
func NewCreateClientCredentialUnauthorized() *CreateClientCredentialUnauthorized {
	return &CreateClientCredentialUnauthorized{}
}

/* CreateClientCredentialUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type CreateClientCredentialUnauthorized struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this create client credential unauthorized response has a 2xx status code
func (o *CreateClientCredentialUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create client credential unauthorized response has a 3xx status code
func (o *CreateClientCredentialUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create client credential unauthorized response has a 4xx status code
func (o *CreateClientCredentialUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create client credential unauthorized response has a 5xx status code
func (o *CreateClientCredentialUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create client credential unauthorized response a status code equal to that given
func (o *CreateClientCredentialUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CreateClientCredentialUnauthorized) Error() string {
	return fmt.Sprintf("[POST /clients][%d] createClientCredentialUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateClientCredentialUnauthorized) String() string {
	return fmt.Sprintf("[POST /clients][%d] createClientCredentialUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateClientCredentialUnauthorized) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *CreateClientCredentialUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateClientCredentialForbidden creates a CreateClientCredentialForbidden with default headers values
func NewCreateClientCredentialForbidden() *CreateClientCredentialForbidden {
	return &CreateClientCredentialForbidden{}
}

/* CreateClientCredentialForbidden describes a response with status code 403, with default header values.

forbidden
*/
type CreateClientCredentialForbidden struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this create client credential forbidden response has a 2xx status code
func (o *CreateClientCredentialForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create client credential forbidden response has a 3xx status code
func (o *CreateClientCredentialForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create client credential forbidden response has a 4xx status code
func (o *CreateClientCredentialForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create client credential forbidden response has a 5xx status code
func (o *CreateClientCredentialForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create client credential forbidden response a status code equal to that given
func (o *CreateClientCredentialForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CreateClientCredentialForbidden) Error() string {
	return fmt.Sprintf("[POST /clients][%d] createClientCredentialForbidden  %+v", 403, o.Payload)
}

func (o *CreateClientCredentialForbidden) String() string {
	return fmt.Sprintf("[POST /clients][%d] createClientCredentialForbidden  %+v", 403, o.Payload)
}

func (o *CreateClientCredentialForbidden) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *CreateClientCredentialForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateClientCredentialInternalServerError creates a CreateClientCredentialInternalServerError with default headers values
func NewCreateClientCredentialInternalServerError() *CreateClientCredentialInternalServerError {
	return &CreateClientCredentialInternalServerError{}
}

/* CreateClientCredentialInternalServerError describes a response with status code 500, with default header values.

server error
*/
type CreateClientCredentialInternalServerError struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this create client credential internal server error response has a 2xx status code
func (o *CreateClientCredentialInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create client credential internal server error response has a 3xx status code
func (o *CreateClientCredentialInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create client credential internal server error response has a 4xx status code
func (o *CreateClientCredentialInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create client credential internal server error response has a 5xx status code
func (o *CreateClientCredentialInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create client credential internal server error response a status code equal to that given
func (o *CreateClientCredentialInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CreateClientCredentialInternalServerError) Error() string {
	return fmt.Sprintf("[POST /clients][%d] createClientCredentialInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateClientCredentialInternalServerError) String() string {
	return fmt.Sprintf("[POST /clients][%d] createClientCredentialInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateClientCredentialInternalServerError) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *CreateClientCredentialInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
