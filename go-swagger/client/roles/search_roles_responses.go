// Code generated by go-swagger; DO NOT EDIT.

package roles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mariiatuzovska/dsv-go-sdk/go-swagger/models"
)

// SearchRolesReader is a Reader for the SearchRoles structure.
type SearchRolesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchRolesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchRolesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchRolesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSearchRolesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSearchRolesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearchRolesOK creates a SearchRolesOK with default headers values
func NewSearchRolesOK() *SearchRolesOK {
	return &SearchRolesOK{}
}

/* SearchRolesOK describes a response with status code 200, with default header values.

no error
*/
type SearchRolesOK struct {
	Payload *models.ResponseModelSearch
}

// IsSuccess returns true when this search roles o k response has a 2xx status code
func (o *SearchRolesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this search roles o k response has a 3xx status code
func (o *SearchRolesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search roles o k response has a 4xx status code
func (o *SearchRolesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this search roles o k response has a 5xx status code
func (o *SearchRolesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this search roles o k response a status code equal to that given
func (o *SearchRolesOK) IsCode(code int) bool {
	return code == 200
}

func (o *SearchRolesOK) Error() string {
	return fmt.Sprintf("[GET /roles][%d] searchRolesOK  %+v", 200, o.Payload)
}

func (o *SearchRolesOK) String() string {
	return fmt.Sprintf("[GET /roles][%d] searchRolesOK  %+v", 200, o.Payload)
}

func (o *SearchRolesOK) GetPayload() *models.ResponseModelSearch {
	return o.Payload
}

func (o *SearchRolesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseModelSearch)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchRolesBadRequest creates a SearchRolesBadRequest with default headers values
func NewSearchRolesBadRequest() *SearchRolesBadRequest {
	return &SearchRolesBadRequest{}
}

/* SearchRolesBadRequest describes a response with status code 400, with default header values.

bad request
*/
type SearchRolesBadRequest struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this search roles bad request response has a 2xx status code
func (o *SearchRolesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search roles bad request response has a 3xx status code
func (o *SearchRolesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search roles bad request response has a 4xx status code
func (o *SearchRolesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this search roles bad request response has a 5xx status code
func (o *SearchRolesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this search roles bad request response a status code equal to that given
func (o *SearchRolesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *SearchRolesBadRequest) Error() string {
	return fmt.Sprintf("[GET /roles][%d] searchRolesBadRequest  %+v", 400, o.Payload)
}

func (o *SearchRolesBadRequest) String() string {
	return fmt.Sprintf("[GET /roles][%d] searchRolesBadRequest  %+v", 400, o.Payload)
}

func (o *SearchRolesBadRequest) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *SearchRolesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchRolesUnauthorized creates a SearchRolesUnauthorized with default headers values
func NewSearchRolesUnauthorized() *SearchRolesUnauthorized {
	return &SearchRolesUnauthorized{}
}

/* SearchRolesUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type SearchRolesUnauthorized struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this search roles unauthorized response has a 2xx status code
func (o *SearchRolesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search roles unauthorized response has a 3xx status code
func (o *SearchRolesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search roles unauthorized response has a 4xx status code
func (o *SearchRolesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this search roles unauthorized response has a 5xx status code
func (o *SearchRolesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this search roles unauthorized response a status code equal to that given
func (o *SearchRolesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *SearchRolesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /roles][%d] searchRolesUnauthorized  %+v", 401, o.Payload)
}

func (o *SearchRolesUnauthorized) String() string {
	return fmt.Sprintf("[GET /roles][%d] searchRolesUnauthorized  %+v", 401, o.Payload)
}

func (o *SearchRolesUnauthorized) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *SearchRolesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchRolesInternalServerError creates a SearchRolesInternalServerError with default headers values
func NewSearchRolesInternalServerError() *SearchRolesInternalServerError {
	return &SearchRolesInternalServerError{}
}

/* SearchRolesInternalServerError describes a response with status code 500, with default header values.

server error
*/
type SearchRolesInternalServerError struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this search roles internal server error response has a 2xx status code
func (o *SearchRolesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search roles internal server error response has a 3xx status code
func (o *SearchRolesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search roles internal server error response has a 4xx status code
func (o *SearchRolesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this search roles internal server error response has a 5xx status code
func (o *SearchRolesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this search roles internal server error response a status code equal to that given
func (o *SearchRolesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *SearchRolesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /roles][%d] searchRolesInternalServerError  %+v", 500, o.Payload)
}

func (o *SearchRolesInternalServerError) String() string {
	return fmt.Sprintf("[GET /roles][%d] searchRolesInternalServerError  %+v", 500, o.Payload)
}

func (o *SearchRolesInternalServerError) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *SearchRolesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
