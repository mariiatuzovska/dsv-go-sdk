// Code generated by go-swagger; DO NOT EDIT.

package roles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetRoleByVersionParams creates a new GetRoleByVersionParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetRoleByVersionParams() *GetRoleByVersionParams {
	return &GetRoleByVersionParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetRoleByVersionParamsWithTimeout creates a new GetRoleByVersionParams object
// with the ability to set a timeout on a request.
func NewGetRoleByVersionParamsWithTimeout(timeout time.Duration) *GetRoleByVersionParams {
	return &GetRoleByVersionParams{
		timeout: timeout,
	}
}

// NewGetRoleByVersionParamsWithContext creates a new GetRoleByVersionParams object
// with the ability to set a context for a request.
func NewGetRoleByVersionParamsWithContext(ctx context.Context) *GetRoleByVersionParams {
	return &GetRoleByVersionParams{
		Context: ctx,
	}
}

// NewGetRoleByVersionParamsWithHTTPClient creates a new GetRoleByVersionParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetRoleByVersionParamsWithHTTPClient(client *http.Client) *GetRoleByVersionParams {
	return &GetRoleByVersionParams{
		HTTPClient: client,
	}
}

/* GetRoleByVersionParams contains all the parameters to send to the API endpoint
   for the get role by version operation.

   Typically these are written to a http.Request.
*/
type GetRoleByVersionParams struct {

	/* Name.

	   Full name to lookup role by
	*/
	Name string

	/* Version.

	   Versions to return

	   Format: int64
	*/
	Version int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get role by version params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetRoleByVersionParams) WithDefaults() *GetRoleByVersionParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get role by version params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetRoleByVersionParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get role by version params
func (o *GetRoleByVersionParams) WithTimeout(timeout time.Duration) *GetRoleByVersionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get role by version params
func (o *GetRoleByVersionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get role by version params
func (o *GetRoleByVersionParams) WithContext(ctx context.Context) *GetRoleByVersionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get role by version params
func (o *GetRoleByVersionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get role by version params
func (o *GetRoleByVersionParams) WithHTTPClient(client *http.Client) *GetRoleByVersionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get role by version params
func (o *GetRoleByVersionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithName adds the name to the get role by version params
func (o *GetRoleByVersionParams) WithName(name string) *GetRoleByVersionParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the get role by version params
func (o *GetRoleByVersionParams) SetName(name string) {
	o.Name = name
}

// WithVersion adds the version to the get role by version params
func (o *GetRoleByVersionParams) WithVersion(version int64) *GetRoleByVersionParams {
	o.SetVersion(version)
	return o
}

// SetVersion adds the version to the get role by version params
func (o *GetRoleByVersionParams) SetVersion(version int64) {
	o.Version = version
}

// WriteToRequest writes these params to a swagger request
func (o *GetRoleByVersionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param name
	if err := r.SetPathParam("name", o.Name); err != nil {
		return err
	}

	// path param version
	if err := r.SetPathParam("version", swag.FormatInt64(o.Version)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
