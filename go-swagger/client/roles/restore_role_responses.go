// Code generated by go-swagger; DO NOT EDIT.

package roles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mariiatuzovska/dsv-go-sdk/go-swagger/models"
)

// RestoreRoleReader is a Reader for the RestoreRole structure.
type RestoreRoleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RestoreRoleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRestoreRoleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRestoreRoleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRestoreRoleUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRestoreRoleForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRestoreRoleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRestoreRoleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRestoreRoleOK creates a RestoreRoleOK with default headers values
func NewRestoreRoleOK() *RestoreRoleOK {
	return &RestoreRoleOK{}
}

/* RestoreRoleOK describes a response with status code 200, with default header values.

no error
*/
type RestoreRoleOK struct {
}

// IsSuccess returns true when this restore role o k response has a 2xx status code
func (o *RestoreRoleOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this restore role o k response has a 3xx status code
func (o *RestoreRoleOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore role o k response has a 4xx status code
func (o *RestoreRoleOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this restore role o k response has a 5xx status code
func (o *RestoreRoleOK) IsServerError() bool {
	return false
}

// IsCode returns true when this restore role o k response a status code equal to that given
func (o *RestoreRoleOK) IsCode(code int) bool {
	return code == 200
}

func (o *RestoreRoleOK) Error() string {
	return fmt.Sprintf("[GET /roles/{name}/restore][%d] restoreRoleOK ", 200)
}

func (o *RestoreRoleOK) String() string {
	return fmt.Sprintf("[GET /roles/{name}/restore][%d] restoreRoleOK ", 200)
}

func (o *RestoreRoleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRestoreRoleBadRequest creates a RestoreRoleBadRequest with default headers values
func NewRestoreRoleBadRequest() *RestoreRoleBadRequest {
	return &RestoreRoleBadRequest{}
}

/* RestoreRoleBadRequest describes a response with status code 400, with default header values.

bad request
*/
type RestoreRoleBadRequest struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this restore role bad request response has a 2xx status code
func (o *RestoreRoleBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore role bad request response has a 3xx status code
func (o *RestoreRoleBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore role bad request response has a 4xx status code
func (o *RestoreRoleBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this restore role bad request response has a 5xx status code
func (o *RestoreRoleBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this restore role bad request response a status code equal to that given
func (o *RestoreRoleBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *RestoreRoleBadRequest) Error() string {
	return fmt.Sprintf("[GET /roles/{name}/restore][%d] restoreRoleBadRequest  %+v", 400, o.Payload)
}

func (o *RestoreRoleBadRequest) String() string {
	return fmt.Sprintf("[GET /roles/{name}/restore][%d] restoreRoleBadRequest  %+v", 400, o.Payload)
}

func (o *RestoreRoleBadRequest) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *RestoreRoleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestoreRoleUnauthorized creates a RestoreRoleUnauthorized with default headers values
func NewRestoreRoleUnauthorized() *RestoreRoleUnauthorized {
	return &RestoreRoleUnauthorized{}
}

/* RestoreRoleUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type RestoreRoleUnauthorized struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this restore role unauthorized response has a 2xx status code
func (o *RestoreRoleUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore role unauthorized response has a 3xx status code
func (o *RestoreRoleUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore role unauthorized response has a 4xx status code
func (o *RestoreRoleUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this restore role unauthorized response has a 5xx status code
func (o *RestoreRoleUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this restore role unauthorized response a status code equal to that given
func (o *RestoreRoleUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *RestoreRoleUnauthorized) Error() string {
	return fmt.Sprintf("[GET /roles/{name}/restore][%d] restoreRoleUnauthorized  %+v", 401, o.Payload)
}

func (o *RestoreRoleUnauthorized) String() string {
	return fmt.Sprintf("[GET /roles/{name}/restore][%d] restoreRoleUnauthorized  %+v", 401, o.Payload)
}

func (o *RestoreRoleUnauthorized) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *RestoreRoleUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestoreRoleForbidden creates a RestoreRoleForbidden with default headers values
func NewRestoreRoleForbidden() *RestoreRoleForbidden {
	return &RestoreRoleForbidden{}
}

/* RestoreRoleForbidden describes a response with status code 403, with default header values.

forbidden
*/
type RestoreRoleForbidden struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this restore role forbidden response has a 2xx status code
func (o *RestoreRoleForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore role forbidden response has a 3xx status code
func (o *RestoreRoleForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore role forbidden response has a 4xx status code
func (o *RestoreRoleForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this restore role forbidden response has a 5xx status code
func (o *RestoreRoleForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this restore role forbidden response a status code equal to that given
func (o *RestoreRoleForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *RestoreRoleForbidden) Error() string {
	return fmt.Sprintf("[GET /roles/{name}/restore][%d] restoreRoleForbidden  %+v", 403, o.Payload)
}

func (o *RestoreRoleForbidden) String() string {
	return fmt.Sprintf("[GET /roles/{name}/restore][%d] restoreRoleForbidden  %+v", 403, o.Payload)
}

func (o *RestoreRoleForbidden) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *RestoreRoleForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestoreRoleNotFound creates a RestoreRoleNotFound with default headers values
func NewRestoreRoleNotFound() *RestoreRoleNotFound {
	return &RestoreRoleNotFound{}
}

/* RestoreRoleNotFound describes a response with status code 404, with default header values.

not found
*/
type RestoreRoleNotFound struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this restore role not found response has a 2xx status code
func (o *RestoreRoleNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore role not found response has a 3xx status code
func (o *RestoreRoleNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore role not found response has a 4xx status code
func (o *RestoreRoleNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this restore role not found response has a 5xx status code
func (o *RestoreRoleNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this restore role not found response a status code equal to that given
func (o *RestoreRoleNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *RestoreRoleNotFound) Error() string {
	return fmt.Sprintf("[GET /roles/{name}/restore][%d] restoreRoleNotFound  %+v", 404, o.Payload)
}

func (o *RestoreRoleNotFound) String() string {
	return fmt.Sprintf("[GET /roles/{name}/restore][%d] restoreRoleNotFound  %+v", 404, o.Payload)
}

func (o *RestoreRoleNotFound) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *RestoreRoleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestoreRoleInternalServerError creates a RestoreRoleInternalServerError with default headers values
func NewRestoreRoleInternalServerError() *RestoreRoleInternalServerError {
	return &RestoreRoleInternalServerError{}
}

/* RestoreRoleInternalServerError describes a response with status code 500, with default header values.

server error
*/
type RestoreRoleInternalServerError struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this restore role internal server error response has a 2xx status code
func (o *RestoreRoleInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore role internal server error response has a 3xx status code
func (o *RestoreRoleInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore role internal server error response has a 4xx status code
func (o *RestoreRoleInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this restore role internal server error response has a 5xx status code
func (o *RestoreRoleInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this restore role internal server error response a status code equal to that given
func (o *RestoreRoleInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *RestoreRoleInternalServerError) Error() string {
	return fmt.Sprintf("[GET /roles/{name}/restore][%d] restoreRoleInternalServerError  %+v", 500, o.Payload)
}

func (o *RestoreRoleInternalServerError) String() string {
	return fmt.Sprintf("[GET /roles/{name}/restore][%d] restoreRoleInternalServerError  %+v", 500, o.Payload)
}

func (o *RestoreRoleInternalServerError) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *RestoreRoleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
