// Code generated by go-swagger; DO NOT EDIT.

package groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mariiatuzovska/dsv-go-sdk/go-swagger/models"
)

// SearchGroupsReader is a Reader for the SearchGroups structure.
type SearchGroupsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchGroupsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchGroupsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchGroupsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSearchGroupsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSearchGroupsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSearchGroupsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearchGroupsOK creates a SearchGroupsOK with default headers values
func NewSearchGroupsOK() *SearchGroupsOK {
	return &SearchGroupsOK{}
}

/* SearchGroupsOK describes a response with status code 200, with default header values.

no error
*/
type SearchGroupsOK struct {
	Payload *models.ResponseModelSearch
}

// IsSuccess returns true when this search groups o k response has a 2xx status code
func (o *SearchGroupsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this search groups o k response has a 3xx status code
func (o *SearchGroupsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search groups o k response has a 4xx status code
func (o *SearchGroupsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this search groups o k response has a 5xx status code
func (o *SearchGroupsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this search groups o k response a status code equal to that given
func (o *SearchGroupsOK) IsCode(code int) bool {
	return code == 200
}

func (o *SearchGroupsOK) Error() string {
	return fmt.Sprintf("[GET /groups][%d] searchGroupsOK  %+v", 200, o.Payload)
}

func (o *SearchGroupsOK) String() string {
	return fmt.Sprintf("[GET /groups][%d] searchGroupsOK  %+v", 200, o.Payload)
}

func (o *SearchGroupsOK) GetPayload() *models.ResponseModelSearch {
	return o.Payload
}

func (o *SearchGroupsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseModelSearch)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchGroupsBadRequest creates a SearchGroupsBadRequest with default headers values
func NewSearchGroupsBadRequest() *SearchGroupsBadRequest {
	return &SearchGroupsBadRequest{}
}

/* SearchGroupsBadRequest describes a response with status code 400, with default header values.

bad request
*/
type SearchGroupsBadRequest struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this search groups bad request response has a 2xx status code
func (o *SearchGroupsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search groups bad request response has a 3xx status code
func (o *SearchGroupsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search groups bad request response has a 4xx status code
func (o *SearchGroupsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this search groups bad request response has a 5xx status code
func (o *SearchGroupsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this search groups bad request response a status code equal to that given
func (o *SearchGroupsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *SearchGroupsBadRequest) Error() string {
	return fmt.Sprintf("[GET /groups][%d] searchGroupsBadRequest  %+v", 400, o.Payload)
}

func (o *SearchGroupsBadRequest) String() string {
	return fmt.Sprintf("[GET /groups][%d] searchGroupsBadRequest  %+v", 400, o.Payload)
}

func (o *SearchGroupsBadRequest) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *SearchGroupsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchGroupsUnauthorized creates a SearchGroupsUnauthorized with default headers values
func NewSearchGroupsUnauthorized() *SearchGroupsUnauthorized {
	return &SearchGroupsUnauthorized{}
}

/* SearchGroupsUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type SearchGroupsUnauthorized struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this search groups unauthorized response has a 2xx status code
func (o *SearchGroupsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search groups unauthorized response has a 3xx status code
func (o *SearchGroupsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search groups unauthorized response has a 4xx status code
func (o *SearchGroupsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this search groups unauthorized response has a 5xx status code
func (o *SearchGroupsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this search groups unauthorized response a status code equal to that given
func (o *SearchGroupsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *SearchGroupsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /groups][%d] searchGroupsUnauthorized  %+v", 401, o.Payload)
}

func (o *SearchGroupsUnauthorized) String() string {
	return fmt.Sprintf("[GET /groups][%d] searchGroupsUnauthorized  %+v", 401, o.Payload)
}

func (o *SearchGroupsUnauthorized) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *SearchGroupsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchGroupsForbidden creates a SearchGroupsForbidden with default headers values
func NewSearchGroupsForbidden() *SearchGroupsForbidden {
	return &SearchGroupsForbidden{}
}

/* SearchGroupsForbidden describes a response with status code 403, with default header values.

forbidden
*/
type SearchGroupsForbidden struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this search groups forbidden response has a 2xx status code
func (o *SearchGroupsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search groups forbidden response has a 3xx status code
func (o *SearchGroupsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search groups forbidden response has a 4xx status code
func (o *SearchGroupsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this search groups forbidden response has a 5xx status code
func (o *SearchGroupsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this search groups forbidden response a status code equal to that given
func (o *SearchGroupsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *SearchGroupsForbidden) Error() string {
	return fmt.Sprintf("[GET /groups][%d] searchGroupsForbidden  %+v", 403, o.Payload)
}

func (o *SearchGroupsForbidden) String() string {
	return fmt.Sprintf("[GET /groups][%d] searchGroupsForbidden  %+v", 403, o.Payload)
}

func (o *SearchGroupsForbidden) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *SearchGroupsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchGroupsInternalServerError creates a SearchGroupsInternalServerError with default headers values
func NewSearchGroupsInternalServerError() *SearchGroupsInternalServerError {
	return &SearchGroupsInternalServerError{}
}

/* SearchGroupsInternalServerError describes a response with status code 500, with default header values.

server error
*/
type SearchGroupsInternalServerError struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this search groups internal server error response has a 2xx status code
func (o *SearchGroupsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search groups internal server error response has a 3xx status code
func (o *SearchGroupsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search groups internal server error response has a 4xx status code
func (o *SearchGroupsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this search groups internal server error response has a 5xx status code
func (o *SearchGroupsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this search groups internal server error response a status code equal to that given
func (o *SearchGroupsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *SearchGroupsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /groups][%d] searchGroupsInternalServerError  %+v", 500, o.Payload)
}

func (o *SearchGroupsInternalServerError) String() string {
	return fmt.Sprintf("[GET /groups][%d] searchGroupsInternalServerError  %+v", 500, o.Payload)
}

func (o *SearchGroupsInternalServerError) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *SearchGroupsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
