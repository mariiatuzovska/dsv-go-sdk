// Code generated by go-swagger; DO NOT EDIT.

package groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mariiatuzovska/dsv-go-sdk/go-swagger/models"
)

// RestoreGroupReader is a Reader for the RestoreGroup structure.
type RestoreGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RestoreGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRestoreGroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRestoreGroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRestoreGroupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRestoreGroupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRestoreGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRestoreGroupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRestoreGroupOK creates a RestoreGroupOK with default headers values
func NewRestoreGroupOK() *RestoreGroupOK {
	return &RestoreGroupOK{}
}

/* RestoreGroupOK describes a response with status code 200, with default header values.

no error
*/
type RestoreGroupOK struct {
}

// IsSuccess returns true when this restore group o k response has a 2xx status code
func (o *RestoreGroupOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this restore group o k response has a 3xx status code
func (o *RestoreGroupOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore group o k response has a 4xx status code
func (o *RestoreGroupOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this restore group o k response has a 5xx status code
func (o *RestoreGroupOK) IsServerError() bool {
	return false
}

// IsCode returns true when this restore group o k response a status code equal to that given
func (o *RestoreGroupOK) IsCode(code int) bool {
	return code == 200
}

func (o *RestoreGroupOK) Error() string {
	return fmt.Sprintf("[GET /groups/{name}/restore][%d] restoreGroupOK ", 200)
}

func (o *RestoreGroupOK) String() string {
	return fmt.Sprintf("[GET /groups/{name}/restore][%d] restoreGroupOK ", 200)
}

func (o *RestoreGroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRestoreGroupBadRequest creates a RestoreGroupBadRequest with default headers values
func NewRestoreGroupBadRequest() *RestoreGroupBadRequest {
	return &RestoreGroupBadRequest{}
}

/* RestoreGroupBadRequest describes a response with status code 400, with default header values.

bad request
*/
type RestoreGroupBadRequest struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this restore group bad request response has a 2xx status code
func (o *RestoreGroupBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore group bad request response has a 3xx status code
func (o *RestoreGroupBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore group bad request response has a 4xx status code
func (o *RestoreGroupBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this restore group bad request response has a 5xx status code
func (o *RestoreGroupBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this restore group bad request response a status code equal to that given
func (o *RestoreGroupBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *RestoreGroupBadRequest) Error() string {
	return fmt.Sprintf("[GET /groups/{name}/restore][%d] restoreGroupBadRequest  %+v", 400, o.Payload)
}

func (o *RestoreGroupBadRequest) String() string {
	return fmt.Sprintf("[GET /groups/{name}/restore][%d] restoreGroupBadRequest  %+v", 400, o.Payload)
}

func (o *RestoreGroupBadRequest) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *RestoreGroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestoreGroupUnauthorized creates a RestoreGroupUnauthorized with default headers values
func NewRestoreGroupUnauthorized() *RestoreGroupUnauthorized {
	return &RestoreGroupUnauthorized{}
}

/* RestoreGroupUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type RestoreGroupUnauthorized struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this restore group unauthorized response has a 2xx status code
func (o *RestoreGroupUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore group unauthorized response has a 3xx status code
func (o *RestoreGroupUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore group unauthorized response has a 4xx status code
func (o *RestoreGroupUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this restore group unauthorized response has a 5xx status code
func (o *RestoreGroupUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this restore group unauthorized response a status code equal to that given
func (o *RestoreGroupUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *RestoreGroupUnauthorized) Error() string {
	return fmt.Sprintf("[GET /groups/{name}/restore][%d] restoreGroupUnauthorized  %+v", 401, o.Payload)
}

func (o *RestoreGroupUnauthorized) String() string {
	return fmt.Sprintf("[GET /groups/{name}/restore][%d] restoreGroupUnauthorized  %+v", 401, o.Payload)
}

func (o *RestoreGroupUnauthorized) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *RestoreGroupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestoreGroupForbidden creates a RestoreGroupForbidden with default headers values
func NewRestoreGroupForbidden() *RestoreGroupForbidden {
	return &RestoreGroupForbidden{}
}

/* RestoreGroupForbidden describes a response with status code 403, with default header values.

forbidden
*/
type RestoreGroupForbidden struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this restore group forbidden response has a 2xx status code
func (o *RestoreGroupForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore group forbidden response has a 3xx status code
func (o *RestoreGroupForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore group forbidden response has a 4xx status code
func (o *RestoreGroupForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this restore group forbidden response has a 5xx status code
func (o *RestoreGroupForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this restore group forbidden response a status code equal to that given
func (o *RestoreGroupForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *RestoreGroupForbidden) Error() string {
	return fmt.Sprintf("[GET /groups/{name}/restore][%d] restoreGroupForbidden  %+v", 403, o.Payload)
}

func (o *RestoreGroupForbidden) String() string {
	return fmt.Sprintf("[GET /groups/{name}/restore][%d] restoreGroupForbidden  %+v", 403, o.Payload)
}

func (o *RestoreGroupForbidden) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *RestoreGroupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestoreGroupNotFound creates a RestoreGroupNotFound with default headers values
func NewRestoreGroupNotFound() *RestoreGroupNotFound {
	return &RestoreGroupNotFound{}
}

/* RestoreGroupNotFound describes a response with status code 404, with default header values.

not found
*/
type RestoreGroupNotFound struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this restore group not found response has a 2xx status code
func (o *RestoreGroupNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore group not found response has a 3xx status code
func (o *RestoreGroupNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore group not found response has a 4xx status code
func (o *RestoreGroupNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this restore group not found response has a 5xx status code
func (o *RestoreGroupNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this restore group not found response a status code equal to that given
func (o *RestoreGroupNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *RestoreGroupNotFound) Error() string {
	return fmt.Sprintf("[GET /groups/{name}/restore][%d] restoreGroupNotFound  %+v", 404, o.Payload)
}

func (o *RestoreGroupNotFound) String() string {
	return fmt.Sprintf("[GET /groups/{name}/restore][%d] restoreGroupNotFound  %+v", 404, o.Payload)
}

func (o *RestoreGroupNotFound) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *RestoreGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestoreGroupInternalServerError creates a RestoreGroupInternalServerError with default headers values
func NewRestoreGroupInternalServerError() *RestoreGroupInternalServerError {
	return &RestoreGroupInternalServerError{}
}

/* RestoreGroupInternalServerError describes a response with status code 500, with default header values.

server error
*/
type RestoreGroupInternalServerError struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this restore group internal server error response has a 2xx status code
func (o *RestoreGroupInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore group internal server error response has a 3xx status code
func (o *RestoreGroupInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore group internal server error response has a 4xx status code
func (o *RestoreGroupInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this restore group internal server error response has a 5xx status code
func (o *RestoreGroupInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this restore group internal server error response a status code equal to that given
func (o *RestoreGroupInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *RestoreGroupInternalServerError) Error() string {
	return fmt.Sprintf("[GET /groups/{name}/restore][%d] restoreGroupInternalServerError  %+v", 500, o.Payload)
}

func (o *RestoreGroupInternalServerError) String() string {
	return fmt.Sprintf("[GET /groups/{name}/restore][%d] restoreGroupInternalServerError  %+v", 500, o.Payload)
}

func (o *RestoreGroupInternalServerError) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *RestoreGroupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
