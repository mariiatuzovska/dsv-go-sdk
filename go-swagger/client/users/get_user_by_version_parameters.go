// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetUserByVersionParams creates a new GetUserByVersionParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetUserByVersionParams() *GetUserByVersionParams {
	return &GetUserByVersionParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetUserByVersionParamsWithTimeout creates a new GetUserByVersionParams object
// with the ability to set a timeout on a request.
func NewGetUserByVersionParamsWithTimeout(timeout time.Duration) *GetUserByVersionParams {
	return &GetUserByVersionParams{
		timeout: timeout,
	}
}

// NewGetUserByVersionParamsWithContext creates a new GetUserByVersionParams object
// with the ability to set a context for a request.
func NewGetUserByVersionParamsWithContext(ctx context.Context) *GetUserByVersionParams {
	return &GetUserByVersionParams{
		Context: ctx,
	}
}

// NewGetUserByVersionParamsWithHTTPClient creates a new GetUserByVersionParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetUserByVersionParamsWithHTTPClient(client *http.Client) *GetUserByVersionParams {
	return &GetUserByVersionParams{
		HTTPClient: client,
	}
}

/* GetUserByVersionParams contains all the parameters to send to the API endpoint
   for the get user by version operation.

   Typically these are written to a http.Request.
*/
type GetUserByVersionParams struct {

	/* Name.

	   Full user name to lookup user by
	*/
	Name string

	/* Version.

	   Versions to return

	   Format: int64
	*/
	Version int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get user by version params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetUserByVersionParams) WithDefaults() *GetUserByVersionParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get user by version params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetUserByVersionParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get user by version params
func (o *GetUserByVersionParams) WithTimeout(timeout time.Duration) *GetUserByVersionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get user by version params
func (o *GetUserByVersionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get user by version params
func (o *GetUserByVersionParams) WithContext(ctx context.Context) *GetUserByVersionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get user by version params
func (o *GetUserByVersionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get user by version params
func (o *GetUserByVersionParams) WithHTTPClient(client *http.Client) *GetUserByVersionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get user by version params
func (o *GetUserByVersionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithName adds the name to the get user by version params
func (o *GetUserByVersionParams) WithName(name string) *GetUserByVersionParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the get user by version params
func (o *GetUserByVersionParams) SetName(name string) {
	o.Name = name
}

// WithVersion adds the version to the get user by version params
func (o *GetUserByVersionParams) WithVersion(version int64) *GetUserByVersionParams {
	o.SetVersion(version)
	return o
}

// SetVersion adds the version to the get user by version params
func (o *GetUserByVersionParams) SetVersion(version int64) {
	o.Version = version
}

// WriteToRequest writes these params to a swagger request
func (o *GetUserByVersionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param name
	if err := r.SetPathParam("name", o.Name); err != nil {
		return err
	}

	// path param version
	if err := r.SetPathParam("version", swag.FormatInt64(o.Version)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
