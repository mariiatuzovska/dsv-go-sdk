// Code generated by go-swagger; DO NOT EDIT.

package p_k_i

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mariiatuzovska/dsv-go-sdk/go-swagger/models"
)

// LeafParamsReader is a Reader for the LeafParams structure.
type LeafParamsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LeafParamsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLeafParamsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewLeafParamsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewLeafParamsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewLeafParamsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewLeafParamsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewLeafParamsOK creates a LeafParamsOK with default headers values
func NewLeafParamsOK() *LeafParamsOK {
	return &LeafParamsOK{}
}

/* LeafParamsOK describes a response with status code 200, with default header values.

no error
*/
type LeafParamsOK struct {
	Payload *models.ResponseCertificate
}

// IsSuccess returns true when this leaf params o k response has a 2xx status code
func (o *LeafParamsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this leaf params o k response has a 3xx status code
func (o *LeafParamsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this leaf params o k response has a 4xx status code
func (o *LeafParamsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this leaf params o k response has a 5xx status code
func (o *LeafParamsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this leaf params o k response a status code equal to that given
func (o *LeafParamsOK) IsCode(code int) bool {
	return code == 200
}

func (o *LeafParamsOK) Error() string {
	return fmt.Sprintf("[POST /pki/leaf][%d] leafParamsOK  %+v", 200, o.Payload)
}

func (o *LeafParamsOK) String() string {
	return fmt.Sprintf("[POST /pki/leaf][%d] leafParamsOK  %+v", 200, o.Payload)
}

func (o *LeafParamsOK) GetPayload() *models.ResponseCertificate {
	return o.Payload
}

func (o *LeafParamsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseCertificate)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLeafParamsBadRequest creates a LeafParamsBadRequest with default headers values
func NewLeafParamsBadRequest() *LeafParamsBadRequest {
	return &LeafParamsBadRequest{}
}

/* LeafParamsBadRequest describes a response with status code 400, with default header values.

bad request
*/
type LeafParamsBadRequest struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this leaf params bad request response has a 2xx status code
func (o *LeafParamsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this leaf params bad request response has a 3xx status code
func (o *LeafParamsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this leaf params bad request response has a 4xx status code
func (o *LeafParamsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this leaf params bad request response has a 5xx status code
func (o *LeafParamsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this leaf params bad request response a status code equal to that given
func (o *LeafParamsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *LeafParamsBadRequest) Error() string {
	return fmt.Sprintf("[POST /pki/leaf][%d] leafParamsBadRequest  %+v", 400, o.Payload)
}

func (o *LeafParamsBadRequest) String() string {
	return fmt.Sprintf("[POST /pki/leaf][%d] leafParamsBadRequest  %+v", 400, o.Payload)
}

func (o *LeafParamsBadRequest) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *LeafParamsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLeafParamsUnauthorized creates a LeafParamsUnauthorized with default headers values
func NewLeafParamsUnauthorized() *LeafParamsUnauthorized {
	return &LeafParamsUnauthorized{}
}

/* LeafParamsUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type LeafParamsUnauthorized struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this leaf params unauthorized response has a 2xx status code
func (o *LeafParamsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this leaf params unauthorized response has a 3xx status code
func (o *LeafParamsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this leaf params unauthorized response has a 4xx status code
func (o *LeafParamsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this leaf params unauthorized response has a 5xx status code
func (o *LeafParamsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this leaf params unauthorized response a status code equal to that given
func (o *LeafParamsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *LeafParamsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /pki/leaf][%d] leafParamsUnauthorized  %+v", 401, o.Payload)
}

func (o *LeafParamsUnauthorized) String() string {
	return fmt.Sprintf("[POST /pki/leaf][%d] leafParamsUnauthorized  %+v", 401, o.Payload)
}

func (o *LeafParamsUnauthorized) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *LeafParamsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLeafParamsForbidden creates a LeafParamsForbidden with default headers values
func NewLeafParamsForbidden() *LeafParamsForbidden {
	return &LeafParamsForbidden{}
}

/* LeafParamsForbidden describes a response with status code 403, with default header values.

forbidden
*/
type LeafParamsForbidden struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this leaf params forbidden response has a 2xx status code
func (o *LeafParamsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this leaf params forbidden response has a 3xx status code
func (o *LeafParamsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this leaf params forbidden response has a 4xx status code
func (o *LeafParamsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this leaf params forbidden response has a 5xx status code
func (o *LeafParamsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this leaf params forbidden response a status code equal to that given
func (o *LeafParamsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *LeafParamsForbidden) Error() string {
	return fmt.Sprintf("[POST /pki/leaf][%d] leafParamsForbidden  %+v", 403, o.Payload)
}

func (o *LeafParamsForbidden) String() string {
	return fmt.Sprintf("[POST /pki/leaf][%d] leafParamsForbidden  %+v", 403, o.Payload)
}

func (o *LeafParamsForbidden) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *LeafParamsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLeafParamsInternalServerError creates a LeafParamsInternalServerError with default headers values
func NewLeafParamsInternalServerError() *LeafParamsInternalServerError {
	return &LeafParamsInternalServerError{}
}

/* LeafParamsInternalServerError describes a response with status code 500, with default header values.

server error
*/
type LeafParamsInternalServerError struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this leaf params internal server error response has a 2xx status code
func (o *LeafParamsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this leaf params internal server error response has a 3xx status code
func (o *LeafParamsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this leaf params internal server error response has a 4xx status code
func (o *LeafParamsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this leaf params internal server error response has a 5xx status code
func (o *LeafParamsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this leaf params internal server error response a status code equal to that given
func (o *LeafParamsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *LeafParamsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /pki/leaf][%d] leafParamsInternalServerError  %+v", 500, o.Payload)
}

func (o *LeafParamsInternalServerError) String() string {
	return fmt.Sprintf("[POST /pki/leaf][%d] leafParamsInternalServerError  %+v", 500, o.Payload)
}

func (o *LeafParamsInternalServerError) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *LeafParamsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
