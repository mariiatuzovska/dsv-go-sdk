// Code generated by go-swagger; DO NOT EDIT.

package p_k_i

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mariiatuzovska/dsv-go-sdk/go-swagger/models"
)

// SSHCertParamsReader is a Reader for the SSHCertParams structure.
type SSHCertParamsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SSHCertParamsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSSHCertParamsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSSHCertParamsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSSHCertParamsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSSHCertParamsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSSHCertParamsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSSHCertParamsOK creates a SSHCertParamsOK with default headers values
func NewSSHCertParamsOK() *SSHCertParamsOK {
	return &SSHCertParamsOK{}
}

/* SSHCertParamsOK describes a response with status code 200, with default header values.

no error
*/
type SSHCertParamsOK struct {
	Payload *models.ResponseSSHCertificate
}

// IsSuccess returns true when this ssh cert params o k response has a 2xx status code
func (o *SSHCertParamsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this ssh cert params o k response has a 3xx status code
func (o *SSHCertParamsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this ssh cert params o k response has a 4xx status code
func (o *SSHCertParamsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this ssh cert params o k response has a 5xx status code
func (o *SSHCertParamsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this ssh cert params o k response a status code equal to that given
func (o *SSHCertParamsOK) IsCode(code int) bool {
	return code == 200
}

func (o *SSHCertParamsOK) Error() string {
	return fmt.Sprintf("[POST /pki/ssh-cert][%d] sshCertParamsOK  %+v", 200, o.Payload)
}

func (o *SSHCertParamsOK) String() string {
	return fmt.Sprintf("[POST /pki/ssh-cert][%d] sshCertParamsOK  %+v", 200, o.Payload)
}

func (o *SSHCertParamsOK) GetPayload() *models.ResponseSSHCertificate {
	return o.Payload
}

func (o *SSHCertParamsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseSSHCertificate)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSSHCertParamsBadRequest creates a SSHCertParamsBadRequest with default headers values
func NewSSHCertParamsBadRequest() *SSHCertParamsBadRequest {
	return &SSHCertParamsBadRequest{}
}

/* SSHCertParamsBadRequest describes a response with status code 400, with default header values.

bad request
*/
type SSHCertParamsBadRequest struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this ssh cert params bad request response has a 2xx status code
func (o *SSHCertParamsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this ssh cert params bad request response has a 3xx status code
func (o *SSHCertParamsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this ssh cert params bad request response has a 4xx status code
func (o *SSHCertParamsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this ssh cert params bad request response has a 5xx status code
func (o *SSHCertParamsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this ssh cert params bad request response a status code equal to that given
func (o *SSHCertParamsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *SSHCertParamsBadRequest) Error() string {
	return fmt.Sprintf("[POST /pki/ssh-cert][%d] sshCertParamsBadRequest  %+v", 400, o.Payload)
}

func (o *SSHCertParamsBadRequest) String() string {
	return fmt.Sprintf("[POST /pki/ssh-cert][%d] sshCertParamsBadRequest  %+v", 400, o.Payload)
}

func (o *SSHCertParamsBadRequest) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *SSHCertParamsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSSHCertParamsUnauthorized creates a SSHCertParamsUnauthorized with default headers values
func NewSSHCertParamsUnauthorized() *SSHCertParamsUnauthorized {
	return &SSHCertParamsUnauthorized{}
}

/* SSHCertParamsUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type SSHCertParamsUnauthorized struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this ssh cert params unauthorized response has a 2xx status code
func (o *SSHCertParamsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this ssh cert params unauthorized response has a 3xx status code
func (o *SSHCertParamsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this ssh cert params unauthorized response has a 4xx status code
func (o *SSHCertParamsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this ssh cert params unauthorized response has a 5xx status code
func (o *SSHCertParamsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this ssh cert params unauthorized response a status code equal to that given
func (o *SSHCertParamsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *SSHCertParamsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /pki/ssh-cert][%d] sshCertParamsUnauthorized  %+v", 401, o.Payload)
}

func (o *SSHCertParamsUnauthorized) String() string {
	return fmt.Sprintf("[POST /pki/ssh-cert][%d] sshCertParamsUnauthorized  %+v", 401, o.Payload)
}

func (o *SSHCertParamsUnauthorized) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *SSHCertParamsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSSHCertParamsForbidden creates a SSHCertParamsForbidden with default headers values
func NewSSHCertParamsForbidden() *SSHCertParamsForbidden {
	return &SSHCertParamsForbidden{}
}

/* SSHCertParamsForbidden describes a response with status code 403, with default header values.

forbidden
*/
type SSHCertParamsForbidden struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this ssh cert params forbidden response has a 2xx status code
func (o *SSHCertParamsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this ssh cert params forbidden response has a 3xx status code
func (o *SSHCertParamsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this ssh cert params forbidden response has a 4xx status code
func (o *SSHCertParamsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this ssh cert params forbidden response has a 5xx status code
func (o *SSHCertParamsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this ssh cert params forbidden response a status code equal to that given
func (o *SSHCertParamsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *SSHCertParamsForbidden) Error() string {
	return fmt.Sprintf("[POST /pki/ssh-cert][%d] sshCertParamsForbidden  %+v", 403, o.Payload)
}

func (o *SSHCertParamsForbidden) String() string {
	return fmt.Sprintf("[POST /pki/ssh-cert][%d] sshCertParamsForbidden  %+v", 403, o.Payload)
}

func (o *SSHCertParamsForbidden) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *SSHCertParamsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSSHCertParamsInternalServerError creates a SSHCertParamsInternalServerError with default headers values
func NewSSHCertParamsInternalServerError() *SSHCertParamsInternalServerError {
	return &SSHCertParamsInternalServerError{}
}

/* SSHCertParamsInternalServerError describes a response with status code 500, with default header values.

server error
*/
type SSHCertParamsInternalServerError struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this ssh cert params internal server error response has a 2xx status code
func (o *SSHCertParamsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this ssh cert params internal server error response has a 3xx status code
func (o *SSHCertParamsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this ssh cert params internal server error response has a 4xx status code
func (o *SSHCertParamsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this ssh cert params internal server error response has a 5xx status code
func (o *SSHCertParamsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this ssh cert params internal server error response a status code equal to that given
func (o *SSHCertParamsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *SSHCertParamsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /pki/ssh-cert][%d] sshCertParamsInternalServerError  %+v", 500, o.Payload)
}

func (o *SSHCertParamsInternalServerError) String() string {
	return fmt.Sprintf("[POST /pki/ssh-cert][%d] sshCertParamsInternalServerError  %+v", 500, o.Payload)
}

func (o *SSHCertParamsInternalServerError) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *SSHCertParamsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
