// Code generated by go-swagger; DO NOT EDIT.

package key

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mariiatuzovska/dsv-go-sdk/go-swagger/models"
)

// MasterkeysReader is a Reader for the Masterkeys structure.
type MasterkeysReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MasterkeysReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewMasterkeysNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewMasterkeysBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewMasterkeysUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewMasterkeysForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewMasterkeysInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewMasterkeysNoContent creates a MasterkeysNoContent with default headers values
func NewMasterkeysNoContent() *MasterkeysNoContent {
	return &MasterkeysNoContent{}
}

/* MasterkeysNoContent describes a response with status code 204, with default header values.

no error
*/
type MasterkeysNoContent struct {
}

// IsSuccess returns true when this masterkeys no content response has a 2xx status code
func (o *MasterkeysNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this masterkeys no content response has a 3xx status code
func (o *MasterkeysNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this masterkeys no content response has a 4xx status code
func (o *MasterkeysNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this masterkeys no content response has a 5xx status code
func (o *MasterkeysNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this masterkeys no content response a status code equal to that given
func (o *MasterkeysNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *MasterkeysNoContent) Error() string {
	return fmt.Sprintf("[PUT /config/keys][%d] masterkeysNoContent ", 204)
}

func (o *MasterkeysNoContent) String() string {
	return fmt.Sprintf("[PUT /config/keys][%d] masterkeysNoContent ", 204)
}

func (o *MasterkeysNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewMasterkeysBadRequest creates a MasterkeysBadRequest with default headers values
func NewMasterkeysBadRequest() *MasterkeysBadRequest {
	return &MasterkeysBadRequest{}
}

/* MasterkeysBadRequest describes a response with status code 400, with default header values.

bad request
*/
type MasterkeysBadRequest struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this masterkeys bad request response has a 2xx status code
func (o *MasterkeysBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this masterkeys bad request response has a 3xx status code
func (o *MasterkeysBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this masterkeys bad request response has a 4xx status code
func (o *MasterkeysBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this masterkeys bad request response has a 5xx status code
func (o *MasterkeysBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this masterkeys bad request response a status code equal to that given
func (o *MasterkeysBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *MasterkeysBadRequest) Error() string {
	return fmt.Sprintf("[PUT /config/keys][%d] masterkeysBadRequest  %+v", 400, o.Payload)
}

func (o *MasterkeysBadRequest) String() string {
	return fmt.Sprintf("[PUT /config/keys][%d] masterkeysBadRequest  %+v", 400, o.Payload)
}

func (o *MasterkeysBadRequest) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *MasterkeysBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMasterkeysUnauthorized creates a MasterkeysUnauthorized with default headers values
func NewMasterkeysUnauthorized() *MasterkeysUnauthorized {
	return &MasterkeysUnauthorized{}
}

/* MasterkeysUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type MasterkeysUnauthorized struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this masterkeys unauthorized response has a 2xx status code
func (o *MasterkeysUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this masterkeys unauthorized response has a 3xx status code
func (o *MasterkeysUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this masterkeys unauthorized response has a 4xx status code
func (o *MasterkeysUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this masterkeys unauthorized response has a 5xx status code
func (o *MasterkeysUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this masterkeys unauthorized response a status code equal to that given
func (o *MasterkeysUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *MasterkeysUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /config/keys][%d] masterkeysUnauthorized  %+v", 401, o.Payload)
}

func (o *MasterkeysUnauthorized) String() string {
	return fmt.Sprintf("[PUT /config/keys][%d] masterkeysUnauthorized  %+v", 401, o.Payload)
}

func (o *MasterkeysUnauthorized) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *MasterkeysUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMasterkeysForbidden creates a MasterkeysForbidden with default headers values
func NewMasterkeysForbidden() *MasterkeysForbidden {
	return &MasterkeysForbidden{}
}

/* MasterkeysForbidden describes a response with status code 403, with default header values.

forbidden
*/
type MasterkeysForbidden struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this masterkeys forbidden response has a 2xx status code
func (o *MasterkeysForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this masterkeys forbidden response has a 3xx status code
func (o *MasterkeysForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this masterkeys forbidden response has a 4xx status code
func (o *MasterkeysForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this masterkeys forbidden response has a 5xx status code
func (o *MasterkeysForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this masterkeys forbidden response a status code equal to that given
func (o *MasterkeysForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *MasterkeysForbidden) Error() string {
	return fmt.Sprintf("[PUT /config/keys][%d] masterkeysForbidden  %+v", 403, o.Payload)
}

func (o *MasterkeysForbidden) String() string {
	return fmt.Sprintf("[PUT /config/keys][%d] masterkeysForbidden  %+v", 403, o.Payload)
}

func (o *MasterkeysForbidden) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *MasterkeysForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMasterkeysInternalServerError creates a MasterkeysInternalServerError with default headers values
func NewMasterkeysInternalServerError() *MasterkeysInternalServerError {
	return &MasterkeysInternalServerError{}
}

/* MasterkeysInternalServerError describes a response with status code 500, with default header values.

server error
*/
type MasterkeysInternalServerError struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this masterkeys internal server error response has a 2xx status code
func (o *MasterkeysInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this masterkeys internal server error response has a 3xx status code
func (o *MasterkeysInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this masterkeys internal server error response has a 4xx status code
func (o *MasterkeysInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this masterkeys internal server error response has a 5xx status code
func (o *MasterkeysInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this masterkeys internal server error response a status code equal to that given
func (o *MasterkeysInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *MasterkeysInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /config/keys][%d] masterkeysInternalServerError  %+v", 500, o.Payload)
}

func (o *MasterkeysInternalServerError) String() string {
	return fmt.Sprintf("[PUT /config/keys][%d] masterkeysInternalServerError  %+v", 500, o.Payload)
}

func (o *MasterkeysInternalServerError) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *MasterkeysInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
