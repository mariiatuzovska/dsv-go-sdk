// Code generated by go-swagger; DO NOT EDIT.

package home

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mariiatuzovska/dsv-go-sdk/go-swagger/models"
)

// SearchHomeSecretsReader is a Reader for the SearchHomeSecrets structure.
type SearchHomeSecretsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchHomeSecretsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchHomeSecretsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchHomeSecretsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSearchHomeSecretsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSearchHomeSecretsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSearchHomeSecretsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSearchHomeSecretsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearchHomeSecretsOK creates a SearchHomeSecretsOK with default headers values
func NewSearchHomeSecretsOK() *SearchHomeSecretsOK {
	return &SearchHomeSecretsOK{}
}

/* SearchHomeSecretsOK describes a response with status code 200, with default header values.

no error
*/
type SearchHomeSecretsOK struct {
	Payload *models.ResponseModelSearch
}

// IsSuccess returns true when this search home secrets o k response has a 2xx status code
func (o *SearchHomeSecretsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this search home secrets o k response has a 3xx status code
func (o *SearchHomeSecretsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search home secrets o k response has a 4xx status code
func (o *SearchHomeSecretsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this search home secrets o k response has a 5xx status code
func (o *SearchHomeSecretsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this search home secrets o k response a status code equal to that given
func (o *SearchHomeSecretsOK) IsCode(code int) bool {
	return code == 200
}

func (o *SearchHomeSecretsOK) Error() string {
	return fmt.Sprintf("[GET /home/{principalName}][%d] searchHomeSecretsOK  %+v", 200, o.Payload)
}

func (o *SearchHomeSecretsOK) String() string {
	return fmt.Sprintf("[GET /home/{principalName}][%d] searchHomeSecretsOK  %+v", 200, o.Payload)
}

func (o *SearchHomeSecretsOK) GetPayload() *models.ResponseModelSearch {
	return o.Payload
}

func (o *SearchHomeSecretsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseModelSearch)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchHomeSecretsBadRequest creates a SearchHomeSecretsBadRequest with default headers values
func NewSearchHomeSecretsBadRequest() *SearchHomeSecretsBadRequest {
	return &SearchHomeSecretsBadRequest{}
}

/* SearchHomeSecretsBadRequest describes a response with status code 400, with default header values.

bad request
*/
type SearchHomeSecretsBadRequest struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this search home secrets bad request response has a 2xx status code
func (o *SearchHomeSecretsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search home secrets bad request response has a 3xx status code
func (o *SearchHomeSecretsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search home secrets bad request response has a 4xx status code
func (o *SearchHomeSecretsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this search home secrets bad request response has a 5xx status code
func (o *SearchHomeSecretsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this search home secrets bad request response a status code equal to that given
func (o *SearchHomeSecretsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *SearchHomeSecretsBadRequest) Error() string {
	return fmt.Sprintf("[GET /home/{principalName}][%d] searchHomeSecretsBadRequest  %+v", 400, o.Payload)
}

func (o *SearchHomeSecretsBadRequest) String() string {
	return fmt.Sprintf("[GET /home/{principalName}][%d] searchHomeSecretsBadRequest  %+v", 400, o.Payload)
}

func (o *SearchHomeSecretsBadRequest) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *SearchHomeSecretsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchHomeSecretsUnauthorized creates a SearchHomeSecretsUnauthorized with default headers values
func NewSearchHomeSecretsUnauthorized() *SearchHomeSecretsUnauthorized {
	return &SearchHomeSecretsUnauthorized{}
}

/* SearchHomeSecretsUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type SearchHomeSecretsUnauthorized struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this search home secrets unauthorized response has a 2xx status code
func (o *SearchHomeSecretsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search home secrets unauthorized response has a 3xx status code
func (o *SearchHomeSecretsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search home secrets unauthorized response has a 4xx status code
func (o *SearchHomeSecretsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this search home secrets unauthorized response has a 5xx status code
func (o *SearchHomeSecretsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this search home secrets unauthorized response a status code equal to that given
func (o *SearchHomeSecretsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *SearchHomeSecretsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /home/{principalName}][%d] searchHomeSecretsUnauthorized  %+v", 401, o.Payload)
}

func (o *SearchHomeSecretsUnauthorized) String() string {
	return fmt.Sprintf("[GET /home/{principalName}][%d] searchHomeSecretsUnauthorized  %+v", 401, o.Payload)
}

func (o *SearchHomeSecretsUnauthorized) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *SearchHomeSecretsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchHomeSecretsForbidden creates a SearchHomeSecretsForbidden with default headers values
func NewSearchHomeSecretsForbidden() *SearchHomeSecretsForbidden {
	return &SearchHomeSecretsForbidden{}
}

/* SearchHomeSecretsForbidden describes a response with status code 403, with default header values.

forbidden
*/
type SearchHomeSecretsForbidden struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this search home secrets forbidden response has a 2xx status code
func (o *SearchHomeSecretsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search home secrets forbidden response has a 3xx status code
func (o *SearchHomeSecretsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search home secrets forbidden response has a 4xx status code
func (o *SearchHomeSecretsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this search home secrets forbidden response has a 5xx status code
func (o *SearchHomeSecretsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this search home secrets forbidden response a status code equal to that given
func (o *SearchHomeSecretsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *SearchHomeSecretsForbidden) Error() string {
	return fmt.Sprintf("[GET /home/{principalName}][%d] searchHomeSecretsForbidden  %+v", 403, o.Payload)
}

func (o *SearchHomeSecretsForbidden) String() string {
	return fmt.Sprintf("[GET /home/{principalName}][%d] searchHomeSecretsForbidden  %+v", 403, o.Payload)
}

func (o *SearchHomeSecretsForbidden) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *SearchHomeSecretsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchHomeSecretsNotFound creates a SearchHomeSecretsNotFound with default headers values
func NewSearchHomeSecretsNotFound() *SearchHomeSecretsNotFound {
	return &SearchHomeSecretsNotFound{}
}

/* SearchHomeSecretsNotFound describes a response with status code 404, with default header values.

not found
*/
type SearchHomeSecretsNotFound struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this search home secrets not found response has a 2xx status code
func (o *SearchHomeSecretsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search home secrets not found response has a 3xx status code
func (o *SearchHomeSecretsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search home secrets not found response has a 4xx status code
func (o *SearchHomeSecretsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this search home secrets not found response has a 5xx status code
func (o *SearchHomeSecretsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this search home secrets not found response a status code equal to that given
func (o *SearchHomeSecretsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *SearchHomeSecretsNotFound) Error() string {
	return fmt.Sprintf("[GET /home/{principalName}][%d] searchHomeSecretsNotFound  %+v", 404, o.Payload)
}

func (o *SearchHomeSecretsNotFound) String() string {
	return fmt.Sprintf("[GET /home/{principalName}][%d] searchHomeSecretsNotFound  %+v", 404, o.Payload)
}

func (o *SearchHomeSecretsNotFound) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *SearchHomeSecretsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchHomeSecretsInternalServerError creates a SearchHomeSecretsInternalServerError with default headers values
func NewSearchHomeSecretsInternalServerError() *SearchHomeSecretsInternalServerError {
	return &SearchHomeSecretsInternalServerError{}
}

/* SearchHomeSecretsInternalServerError describes a response with status code 500, with default header values.

server error
*/
type SearchHomeSecretsInternalServerError struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this search home secrets internal server error response has a 2xx status code
func (o *SearchHomeSecretsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search home secrets internal server error response has a 3xx status code
func (o *SearchHomeSecretsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search home secrets internal server error response has a 4xx status code
func (o *SearchHomeSecretsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this search home secrets internal server error response has a 5xx status code
func (o *SearchHomeSecretsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this search home secrets internal server error response a status code equal to that given
func (o *SearchHomeSecretsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *SearchHomeSecretsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /home/{principalName}][%d] searchHomeSecretsInternalServerError  %+v", 500, o.Payload)
}

func (o *SearchHomeSecretsInternalServerError) String() string {
	return fmt.Sprintf("[GET /home/{principalName}][%d] searchHomeSecretsInternalServerError  %+v", 500, o.Payload)
}

func (o *SearchHomeSecretsInternalServerError) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *SearchHomeSecretsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
