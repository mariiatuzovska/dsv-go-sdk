// Code generated by go-swagger; DO NOT EDIT.

package home

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mariiatuzovska/dsv-go-sdk/go-swagger/models"
)

// RollbackHomeSecretReader is a Reader for the RollbackHomeSecret structure.
type RollbackHomeSecretReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RollbackHomeSecretReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRollbackHomeSecretOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRollbackHomeSecretBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRollbackHomeSecretUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRollbackHomeSecretForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRollbackHomeSecretNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRollbackHomeSecretInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRollbackHomeSecretOK creates a RollbackHomeSecretOK with default headers values
func NewRollbackHomeSecretOK() *RollbackHomeSecretOK {
	return &RollbackHomeSecretOK{}
}

/* RollbackHomeSecretOK describes a response with status code 200, with default header values.

no error
*/
type RollbackHomeSecretOK struct {
	Payload *models.SecretVersionResponse
}

// IsSuccess returns true when this rollback home secret o k response has a 2xx status code
func (o *RollbackHomeSecretOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this rollback home secret o k response has a 3xx status code
func (o *RollbackHomeSecretOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this rollback home secret o k response has a 4xx status code
func (o *RollbackHomeSecretOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this rollback home secret o k response has a 5xx status code
func (o *RollbackHomeSecretOK) IsServerError() bool {
	return false
}

// IsCode returns true when this rollback home secret o k response a status code equal to that given
func (o *RollbackHomeSecretOK) IsCode(code int) bool {
	return code == 200
}

func (o *RollbackHomeSecretOK) Error() string {
	return fmt.Sprintf("[PUT /home/{principalName}/{path}/rollback/{version}][%d] rollbackHomeSecretOK  %+v", 200, o.Payload)
}

func (o *RollbackHomeSecretOK) String() string {
	return fmt.Sprintf("[PUT /home/{principalName}/{path}/rollback/{version}][%d] rollbackHomeSecretOK  %+v", 200, o.Payload)
}

func (o *RollbackHomeSecretOK) GetPayload() *models.SecretVersionResponse {
	return o.Payload
}

func (o *RollbackHomeSecretOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SecretVersionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRollbackHomeSecretBadRequest creates a RollbackHomeSecretBadRequest with default headers values
func NewRollbackHomeSecretBadRequest() *RollbackHomeSecretBadRequest {
	return &RollbackHomeSecretBadRequest{}
}

/* RollbackHomeSecretBadRequest describes a response with status code 400, with default header values.

bad request
*/
type RollbackHomeSecretBadRequest struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this rollback home secret bad request response has a 2xx status code
func (o *RollbackHomeSecretBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this rollback home secret bad request response has a 3xx status code
func (o *RollbackHomeSecretBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this rollback home secret bad request response has a 4xx status code
func (o *RollbackHomeSecretBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this rollback home secret bad request response has a 5xx status code
func (o *RollbackHomeSecretBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this rollback home secret bad request response a status code equal to that given
func (o *RollbackHomeSecretBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *RollbackHomeSecretBadRequest) Error() string {
	return fmt.Sprintf("[PUT /home/{principalName}/{path}/rollback/{version}][%d] rollbackHomeSecretBadRequest  %+v", 400, o.Payload)
}

func (o *RollbackHomeSecretBadRequest) String() string {
	return fmt.Sprintf("[PUT /home/{principalName}/{path}/rollback/{version}][%d] rollbackHomeSecretBadRequest  %+v", 400, o.Payload)
}

func (o *RollbackHomeSecretBadRequest) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *RollbackHomeSecretBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRollbackHomeSecretUnauthorized creates a RollbackHomeSecretUnauthorized with default headers values
func NewRollbackHomeSecretUnauthorized() *RollbackHomeSecretUnauthorized {
	return &RollbackHomeSecretUnauthorized{}
}

/* RollbackHomeSecretUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type RollbackHomeSecretUnauthorized struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this rollback home secret unauthorized response has a 2xx status code
func (o *RollbackHomeSecretUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this rollback home secret unauthorized response has a 3xx status code
func (o *RollbackHomeSecretUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this rollback home secret unauthorized response has a 4xx status code
func (o *RollbackHomeSecretUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this rollback home secret unauthorized response has a 5xx status code
func (o *RollbackHomeSecretUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this rollback home secret unauthorized response a status code equal to that given
func (o *RollbackHomeSecretUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *RollbackHomeSecretUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /home/{principalName}/{path}/rollback/{version}][%d] rollbackHomeSecretUnauthorized  %+v", 401, o.Payload)
}

func (o *RollbackHomeSecretUnauthorized) String() string {
	return fmt.Sprintf("[PUT /home/{principalName}/{path}/rollback/{version}][%d] rollbackHomeSecretUnauthorized  %+v", 401, o.Payload)
}

func (o *RollbackHomeSecretUnauthorized) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *RollbackHomeSecretUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRollbackHomeSecretForbidden creates a RollbackHomeSecretForbidden with default headers values
func NewRollbackHomeSecretForbidden() *RollbackHomeSecretForbidden {
	return &RollbackHomeSecretForbidden{}
}

/* RollbackHomeSecretForbidden describes a response with status code 403, with default header values.

forbidden
*/
type RollbackHomeSecretForbidden struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this rollback home secret forbidden response has a 2xx status code
func (o *RollbackHomeSecretForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this rollback home secret forbidden response has a 3xx status code
func (o *RollbackHomeSecretForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this rollback home secret forbidden response has a 4xx status code
func (o *RollbackHomeSecretForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this rollback home secret forbidden response has a 5xx status code
func (o *RollbackHomeSecretForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this rollback home secret forbidden response a status code equal to that given
func (o *RollbackHomeSecretForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *RollbackHomeSecretForbidden) Error() string {
	return fmt.Sprintf("[PUT /home/{principalName}/{path}/rollback/{version}][%d] rollbackHomeSecretForbidden  %+v", 403, o.Payload)
}

func (o *RollbackHomeSecretForbidden) String() string {
	return fmt.Sprintf("[PUT /home/{principalName}/{path}/rollback/{version}][%d] rollbackHomeSecretForbidden  %+v", 403, o.Payload)
}

func (o *RollbackHomeSecretForbidden) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *RollbackHomeSecretForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRollbackHomeSecretNotFound creates a RollbackHomeSecretNotFound with default headers values
func NewRollbackHomeSecretNotFound() *RollbackHomeSecretNotFound {
	return &RollbackHomeSecretNotFound{}
}

/* RollbackHomeSecretNotFound describes a response with status code 404, with default header values.

not found
*/
type RollbackHomeSecretNotFound struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this rollback home secret not found response has a 2xx status code
func (o *RollbackHomeSecretNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this rollback home secret not found response has a 3xx status code
func (o *RollbackHomeSecretNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this rollback home secret not found response has a 4xx status code
func (o *RollbackHomeSecretNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this rollback home secret not found response has a 5xx status code
func (o *RollbackHomeSecretNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this rollback home secret not found response a status code equal to that given
func (o *RollbackHomeSecretNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *RollbackHomeSecretNotFound) Error() string {
	return fmt.Sprintf("[PUT /home/{principalName}/{path}/rollback/{version}][%d] rollbackHomeSecretNotFound  %+v", 404, o.Payload)
}

func (o *RollbackHomeSecretNotFound) String() string {
	return fmt.Sprintf("[PUT /home/{principalName}/{path}/rollback/{version}][%d] rollbackHomeSecretNotFound  %+v", 404, o.Payload)
}

func (o *RollbackHomeSecretNotFound) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *RollbackHomeSecretNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRollbackHomeSecretInternalServerError creates a RollbackHomeSecretInternalServerError with default headers values
func NewRollbackHomeSecretInternalServerError() *RollbackHomeSecretInternalServerError {
	return &RollbackHomeSecretInternalServerError{}
}

/* RollbackHomeSecretInternalServerError describes a response with status code 500, with default header values.

server error
*/
type RollbackHomeSecretInternalServerError struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this rollback home secret internal server error response has a 2xx status code
func (o *RollbackHomeSecretInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this rollback home secret internal server error response has a 3xx status code
func (o *RollbackHomeSecretInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this rollback home secret internal server error response has a 4xx status code
func (o *RollbackHomeSecretInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this rollback home secret internal server error response has a 5xx status code
func (o *RollbackHomeSecretInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this rollback home secret internal server error response a status code equal to that given
func (o *RollbackHomeSecretInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *RollbackHomeSecretInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /home/{principalName}/{path}/rollback/{version}][%d] rollbackHomeSecretInternalServerError  %+v", 500, o.Payload)
}

func (o *RollbackHomeSecretInternalServerError) String() string {
	return fmt.Sprintf("[PUT /home/{principalName}/{path}/rollback/{version}][%d] rollbackHomeSecretInternalServerError  %+v", 500, o.Payload)
}

func (o *RollbackHomeSecretInternalServerError) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *RollbackHomeSecretInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
