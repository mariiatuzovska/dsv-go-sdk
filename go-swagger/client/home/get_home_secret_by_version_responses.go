// Code generated by go-swagger; DO NOT EDIT.

package home

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mariiatuzovska/dsv-go-sdk/go-swagger/models"
)

// GetHomeSecretByVersionReader is a Reader for the GetHomeSecretByVersion structure.
type GetHomeSecretByVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetHomeSecretByVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetHomeSecretByVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetHomeSecretByVersionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetHomeSecretByVersionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetHomeSecretByVersionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetHomeSecretByVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetHomeSecretByVersionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetHomeSecretByVersionOK creates a GetHomeSecretByVersionOK with default headers values
func NewGetHomeSecretByVersionOK() *GetHomeSecretByVersionOK {
	return &GetHomeSecretByVersionOK{}
}

/* GetHomeSecretByVersionOK describes a response with status code 200, with default header values.

no error
*/
type GetHomeSecretByVersionOK struct {
	Payload *models.SecretVersionResponse
}

// IsSuccess returns true when this get home secret by version o k response has a 2xx status code
func (o *GetHomeSecretByVersionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get home secret by version o k response has a 3xx status code
func (o *GetHomeSecretByVersionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get home secret by version o k response has a 4xx status code
func (o *GetHomeSecretByVersionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get home secret by version o k response has a 5xx status code
func (o *GetHomeSecretByVersionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get home secret by version o k response a status code equal to that given
func (o *GetHomeSecretByVersionOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetHomeSecretByVersionOK) Error() string {
	return fmt.Sprintf("[GET /home/{principalName}/{path}/version/{version}][%d] getHomeSecretByVersionOK  %+v", 200, o.Payload)
}

func (o *GetHomeSecretByVersionOK) String() string {
	return fmt.Sprintf("[GET /home/{principalName}/{path}/version/{version}][%d] getHomeSecretByVersionOK  %+v", 200, o.Payload)
}

func (o *GetHomeSecretByVersionOK) GetPayload() *models.SecretVersionResponse {
	return o.Payload
}

func (o *GetHomeSecretByVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SecretVersionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHomeSecretByVersionBadRequest creates a GetHomeSecretByVersionBadRequest with default headers values
func NewGetHomeSecretByVersionBadRequest() *GetHomeSecretByVersionBadRequest {
	return &GetHomeSecretByVersionBadRequest{}
}

/* GetHomeSecretByVersionBadRequest describes a response with status code 400, with default header values.

bad request
*/
type GetHomeSecretByVersionBadRequest struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this get home secret by version bad request response has a 2xx status code
func (o *GetHomeSecretByVersionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get home secret by version bad request response has a 3xx status code
func (o *GetHomeSecretByVersionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get home secret by version bad request response has a 4xx status code
func (o *GetHomeSecretByVersionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get home secret by version bad request response has a 5xx status code
func (o *GetHomeSecretByVersionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get home secret by version bad request response a status code equal to that given
func (o *GetHomeSecretByVersionBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetHomeSecretByVersionBadRequest) Error() string {
	return fmt.Sprintf("[GET /home/{principalName}/{path}/version/{version}][%d] getHomeSecretByVersionBadRequest  %+v", 400, o.Payload)
}

func (o *GetHomeSecretByVersionBadRequest) String() string {
	return fmt.Sprintf("[GET /home/{principalName}/{path}/version/{version}][%d] getHomeSecretByVersionBadRequest  %+v", 400, o.Payload)
}

func (o *GetHomeSecretByVersionBadRequest) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *GetHomeSecretByVersionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHomeSecretByVersionUnauthorized creates a GetHomeSecretByVersionUnauthorized with default headers values
func NewGetHomeSecretByVersionUnauthorized() *GetHomeSecretByVersionUnauthorized {
	return &GetHomeSecretByVersionUnauthorized{}
}

/* GetHomeSecretByVersionUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type GetHomeSecretByVersionUnauthorized struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this get home secret by version unauthorized response has a 2xx status code
func (o *GetHomeSecretByVersionUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get home secret by version unauthorized response has a 3xx status code
func (o *GetHomeSecretByVersionUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get home secret by version unauthorized response has a 4xx status code
func (o *GetHomeSecretByVersionUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get home secret by version unauthorized response has a 5xx status code
func (o *GetHomeSecretByVersionUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get home secret by version unauthorized response a status code equal to that given
func (o *GetHomeSecretByVersionUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetHomeSecretByVersionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /home/{principalName}/{path}/version/{version}][%d] getHomeSecretByVersionUnauthorized  %+v", 401, o.Payload)
}

func (o *GetHomeSecretByVersionUnauthorized) String() string {
	return fmt.Sprintf("[GET /home/{principalName}/{path}/version/{version}][%d] getHomeSecretByVersionUnauthorized  %+v", 401, o.Payload)
}

func (o *GetHomeSecretByVersionUnauthorized) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *GetHomeSecretByVersionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHomeSecretByVersionForbidden creates a GetHomeSecretByVersionForbidden with default headers values
func NewGetHomeSecretByVersionForbidden() *GetHomeSecretByVersionForbidden {
	return &GetHomeSecretByVersionForbidden{}
}

/* GetHomeSecretByVersionForbidden describes a response with status code 403, with default header values.

forbidden
*/
type GetHomeSecretByVersionForbidden struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this get home secret by version forbidden response has a 2xx status code
func (o *GetHomeSecretByVersionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get home secret by version forbidden response has a 3xx status code
func (o *GetHomeSecretByVersionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get home secret by version forbidden response has a 4xx status code
func (o *GetHomeSecretByVersionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get home secret by version forbidden response has a 5xx status code
func (o *GetHomeSecretByVersionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get home secret by version forbidden response a status code equal to that given
func (o *GetHomeSecretByVersionForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetHomeSecretByVersionForbidden) Error() string {
	return fmt.Sprintf("[GET /home/{principalName}/{path}/version/{version}][%d] getHomeSecretByVersionForbidden  %+v", 403, o.Payload)
}

func (o *GetHomeSecretByVersionForbidden) String() string {
	return fmt.Sprintf("[GET /home/{principalName}/{path}/version/{version}][%d] getHomeSecretByVersionForbidden  %+v", 403, o.Payload)
}

func (o *GetHomeSecretByVersionForbidden) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *GetHomeSecretByVersionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHomeSecretByVersionNotFound creates a GetHomeSecretByVersionNotFound with default headers values
func NewGetHomeSecretByVersionNotFound() *GetHomeSecretByVersionNotFound {
	return &GetHomeSecretByVersionNotFound{}
}

/* GetHomeSecretByVersionNotFound describes a response with status code 404, with default header values.

not found
*/
type GetHomeSecretByVersionNotFound struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this get home secret by version not found response has a 2xx status code
func (o *GetHomeSecretByVersionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get home secret by version not found response has a 3xx status code
func (o *GetHomeSecretByVersionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get home secret by version not found response has a 4xx status code
func (o *GetHomeSecretByVersionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get home secret by version not found response has a 5xx status code
func (o *GetHomeSecretByVersionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get home secret by version not found response a status code equal to that given
func (o *GetHomeSecretByVersionNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetHomeSecretByVersionNotFound) Error() string {
	return fmt.Sprintf("[GET /home/{principalName}/{path}/version/{version}][%d] getHomeSecretByVersionNotFound  %+v", 404, o.Payload)
}

func (o *GetHomeSecretByVersionNotFound) String() string {
	return fmt.Sprintf("[GET /home/{principalName}/{path}/version/{version}][%d] getHomeSecretByVersionNotFound  %+v", 404, o.Payload)
}

func (o *GetHomeSecretByVersionNotFound) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *GetHomeSecretByVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHomeSecretByVersionInternalServerError creates a GetHomeSecretByVersionInternalServerError with default headers values
func NewGetHomeSecretByVersionInternalServerError() *GetHomeSecretByVersionInternalServerError {
	return &GetHomeSecretByVersionInternalServerError{}
}

/* GetHomeSecretByVersionInternalServerError describes a response with status code 500, with default header values.

server error
*/
type GetHomeSecretByVersionInternalServerError struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this get home secret by version internal server error response has a 2xx status code
func (o *GetHomeSecretByVersionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get home secret by version internal server error response has a 3xx status code
func (o *GetHomeSecretByVersionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get home secret by version internal server error response has a 4xx status code
func (o *GetHomeSecretByVersionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get home secret by version internal server error response has a 5xx status code
func (o *GetHomeSecretByVersionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get home secret by version internal server error response a status code equal to that given
func (o *GetHomeSecretByVersionInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetHomeSecretByVersionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /home/{principalName}/{path}/version/{version}][%d] getHomeSecretByVersionInternalServerError  %+v", 500, o.Payload)
}

func (o *GetHomeSecretByVersionInternalServerError) String() string {
	return fmt.Sprintf("[GET /home/{principalName}/{path}/version/{version}][%d] getHomeSecretByVersionInternalServerError  %+v", 500, o.Payload)
}

func (o *GetHomeSecretByVersionInternalServerError) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *GetHomeSecretByVersionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
