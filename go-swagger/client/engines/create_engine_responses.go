// Code generated by go-swagger; DO NOT EDIT.

package engines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mariiatuzovska/dsv-go-sdk/go-swagger/models"
)

// CreateEngineReader is a Reader for the CreateEngine structure.
type CreateEngineReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateEngineReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateEngineCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateEngineBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateEngineUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateEngineForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateEngineInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateEngineCreated creates a CreateEngineCreated with default headers values
func NewCreateEngineCreated() *CreateEngineCreated {
	return &CreateEngineCreated{}
}

/* CreateEngineCreated describes a response with status code 201, with default header values.

no error
*/
type CreateEngineCreated struct {
	Payload *models.CreateResponse
}

// IsSuccess returns true when this create engine created response has a 2xx status code
func (o *CreateEngineCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create engine created response has a 3xx status code
func (o *CreateEngineCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create engine created response has a 4xx status code
func (o *CreateEngineCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create engine created response has a 5xx status code
func (o *CreateEngineCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create engine created response a status code equal to that given
func (o *CreateEngineCreated) IsCode(code int) bool {
	return code == 201
}

func (o *CreateEngineCreated) Error() string {
	return fmt.Sprintf("[POST /engines][%d] createEngineCreated  %+v", 201, o.Payload)
}

func (o *CreateEngineCreated) String() string {
	return fmt.Sprintf("[POST /engines][%d] createEngineCreated  %+v", 201, o.Payload)
}

func (o *CreateEngineCreated) GetPayload() *models.CreateResponse {
	return o.Payload
}

func (o *CreateEngineCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CreateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateEngineBadRequest creates a CreateEngineBadRequest with default headers values
func NewCreateEngineBadRequest() *CreateEngineBadRequest {
	return &CreateEngineBadRequest{}
}

/* CreateEngineBadRequest describes a response with status code 400, with default header values.

bad request
*/
type CreateEngineBadRequest struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this create engine bad request response has a 2xx status code
func (o *CreateEngineBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create engine bad request response has a 3xx status code
func (o *CreateEngineBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create engine bad request response has a 4xx status code
func (o *CreateEngineBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create engine bad request response has a 5xx status code
func (o *CreateEngineBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create engine bad request response a status code equal to that given
func (o *CreateEngineBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CreateEngineBadRequest) Error() string {
	return fmt.Sprintf("[POST /engines][%d] createEngineBadRequest  %+v", 400, o.Payload)
}

func (o *CreateEngineBadRequest) String() string {
	return fmt.Sprintf("[POST /engines][%d] createEngineBadRequest  %+v", 400, o.Payload)
}

func (o *CreateEngineBadRequest) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *CreateEngineBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateEngineUnauthorized creates a CreateEngineUnauthorized with default headers values
func NewCreateEngineUnauthorized() *CreateEngineUnauthorized {
	return &CreateEngineUnauthorized{}
}

/* CreateEngineUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type CreateEngineUnauthorized struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this create engine unauthorized response has a 2xx status code
func (o *CreateEngineUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create engine unauthorized response has a 3xx status code
func (o *CreateEngineUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create engine unauthorized response has a 4xx status code
func (o *CreateEngineUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create engine unauthorized response has a 5xx status code
func (o *CreateEngineUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create engine unauthorized response a status code equal to that given
func (o *CreateEngineUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CreateEngineUnauthorized) Error() string {
	return fmt.Sprintf("[POST /engines][%d] createEngineUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateEngineUnauthorized) String() string {
	return fmt.Sprintf("[POST /engines][%d] createEngineUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateEngineUnauthorized) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *CreateEngineUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateEngineForbidden creates a CreateEngineForbidden with default headers values
func NewCreateEngineForbidden() *CreateEngineForbidden {
	return &CreateEngineForbidden{}
}

/* CreateEngineForbidden describes a response with status code 403, with default header values.

forbidden
*/
type CreateEngineForbidden struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this create engine forbidden response has a 2xx status code
func (o *CreateEngineForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create engine forbidden response has a 3xx status code
func (o *CreateEngineForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create engine forbidden response has a 4xx status code
func (o *CreateEngineForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create engine forbidden response has a 5xx status code
func (o *CreateEngineForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create engine forbidden response a status code equal to that given
func (o *CreateEngineForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CreateEngineForbidden) Error() string {
	return fmt.Sprintf("[POST /engines][%d] createEngineForbidden  %+v", 403, o.Payload)
}

func (o *CreateEngineForbidden) String() string {
	return fmt.Sprintf("[POST /engines][%d] createEngineForbidden  %+v", 403, o.Payload)
}

func (o *CreateEngineForbidden) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *CreateEngineForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateEngineInternalServerError creates a CreateEngineInternalServerError with default headers values
func NewCreateEngineInternalServerError() *CreateEngineInternalServerError {
	return &CreateEngineInternalServerError{}
}

/* CreateEngineInternalServerError describes a response with status code 500, with default header values.

server error
*/
type CreateEngineInternalServerError struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this create engine internal server error response has a 2xx status code
func (o *CreateEngineInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create engine internal server error response has a 3xx status code
func (o *CreateEngineInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create engine internal server error response has a 4xx status code
func (o *CreateEngineInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create engine internal server error response has a 5xx status code
func (o *CreateEngineInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create engine internal server error response a status code equal to that given
func (o *CreateEngineInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CreateEngineInternalServerError) Error() string {
	return fmt.Sprintf("[POST /engines][%d] createEngineInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateEngineInternalServerError) String() string {
	return fmt.Sprintf("[POST /engines][%d] createEngineInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateEngineInternalServerError) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *CreateEngineInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
