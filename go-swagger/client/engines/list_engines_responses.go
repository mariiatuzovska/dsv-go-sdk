// Code generated by go-swagger; DO NOT EDIT.

package engines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mariiatuzovska/dsv-go-sdk/go-swagger/models"
)

// ListEnginesReader is a Reader for the ListEngines structure.
type ListEnginesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListEnginesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListEnginesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListEnginesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListEnginesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListEnginesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListEnginesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListEnginesOK creates a ListEnginesOK with default headers values
func NewListEnginesOK() *ListEnginesOK {
	return &ListEnginesOK{}
}

/* ListEnginesOK describes a response with status code 200, with default header values.

no error
*/
type ListEnginesOK struct {
	Payload *models.EngineListResult
}

// IsSuccess returns true when this list engines o k response has a 2xx status code
func (o *ListEnginesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list engines o k response has a 3xx status code
func (o *ListEnginesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list engines o k response has a 4xx status code
func (o *ListEnginesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list engines o k response has a 5xx status code
func (o *ListEnginesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list engines o k response a status code equal to that given
func (o *ListEnginesOK) IsCode(code int) bool {
	return code == 200
}

func (o *ListEnginesOK) Error() string {
	return fmt.Sprintf("[GET /engines][%d] listEnginesOK  %+v", 200, o.Payload)
}

func (o *ListEnginesOK) String() string {
	return fmt.Sprintf("[GET /engines][%d] listEnginesOK  %+v", 200, o.Payload)
}

func (o *ListEnginesOK) GetPayload() *models.EngineListResult {
	return o.Payload
}

func (o *ListEnginesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EngineListResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListEnginesBadRequest creates a ListEnginesBadRequest with default headers values
func NewListEnginesBadRequest() *ListEnginesBadRequest {
	return &ListEnginesBadRequest{}
}

/* ListEnginesBadRequest describes a response with status code 400, with default header values.

bad request
*/
type ListEnginesBadRequest struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this list engines bad request response has a 2xx status code
func (o *ListEnginesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list engines bad request response has a 3xx status code
func (o *ListEnginesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list engines bad request response has a 4xx status code
func (o *ListEnginesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list engines bad request response has a 5xx status code
func (o *ListEnginesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list engines bad request response a status code equal to that given
func (o *ListEnginesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ListEnginesBadRequest) Error() string {
	return fmt.Sprintf("[GET /engines][%d] listEnginesBadRequest  %+v", 400, o.Payload)
}

func (o *ListEnginesBadRequest) String() string {
	return fmt.Sprintf("[GET /engines][%d] listEnginesBadRequest  %+v", 400, o.Payload)
}

func (o *ListEnginesBadRequest) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *ListEnginesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListEnginesUnauthorized creates a ListEnginesUnauthorized with default headers values
func NewListEnginesUnauthorized() *ListEnginesUnauthorized {
	return &ListEnginesUnauthorized{}
}

/* ListEnginesUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type ListEnginesUnauthorized struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this list engines unauthorized response has a 2xx status code
func (o *ListEnginesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list engines unauthorized response has a 3xx status code
func (o *ListEnginesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list engines unauthorized response has a 4xx status code
func (o *ListEnginesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list engines unauthorized response has a 5xx status code
func (o *ListEnginesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list engines unauthorized response a status code equal to that given
func (o *ListEnginesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ListEnginesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /engines][%d] listEnginesUnauthorized  %+v", 401, o.Payload)
}

func (o *ListEnginesUnauthorized) String() string {
	return fmt.Sprintf("[GET /engines][%d] listEnginesUnauthorized  %+v", 401, o.Payload)
}

func (o *ListEnginesUnauthorized) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *ListEnginesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListEnginesForbidden creates a ListEnginesForbidden with default headers values
func NewListEnginesForbidden() *ListEnginesForbidden {
	return &ListEnginesForbidden{}
}

/* ListEnginesForbidden describes a response with status code 403, with default header values.

forbidden
*/
type ListEnginesForbidden struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this list engines forbidden response has a 2xx status code
func (o *ListEnginesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list engines forbidden response has a 3xx status code
func (o *ListEnginesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list engines forbidden response has a 4xx status code
func (o *ListEnginesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list engines forbidden response has a 5xx status code
func (o *ListEnginesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list engines forbidden response a status code equal to that given
func (o *ListEnginesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ListEnginesForbidden) Error() string {
	return fmt.Sprintf("[GET /engines][%d] listEnginesForbidden  %+v", 403, o.Payload)
}

func (o *ListEnginesForbidden) String() string {
	return fmt.Sprintf("[GET /engines][%d] listEnginesForbidden  %+v", 403, o.Payload)
}

func (o *ListEnginesForbidden) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *ListEnginesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListEnginesInternalServerError creates a ListEnginesInternalServerError with default headers values
func NewListEnginesInternalServerError() *ListEnginesInternalServerError {
	return &ListEnginesInternalServerError{}
}

/* ListEnginesInternalServerError describes a response with status code 500, with default header values.

server error
*/
type ListEnginesInternalServerError struct {
	Payload *models.HTTPError
}

// IsSuccess returns true when this list engines internal server error response has a 2xx status code
func (o *ListEnginesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list engines internal server error response has a 3xx status code
func (o *ListEnginesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list engines internal server error response has a 4xx status code
func (o *ListEnginesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list engines internal server error response has a 5xx status code
func (o *ListEnginesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list engines internal server error response a status code equal to that given
func (o *ListEnginesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ListEnginesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /engines][%d] listEnginesInternalServerError  %+v", 500, o.Payload)
}

func (o *ListEnginesInternalServerError) String() string {
	return fmt.Sprintf("[GET /engines][%d] listEnginesInternalServerError  %+v", 500, o.Payload)
}

func (o *ListEnginesInternalServerError) GetPayload() *models.HTTPError {
	return o.Payload
}

func (o *ListEnginesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
